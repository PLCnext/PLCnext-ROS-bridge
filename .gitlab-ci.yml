include:
  - local: ci/gitlab_templates/RULES.yml

stages:
  - build
  - publish
  - cleanup
  - doc

variables:
  BUILDER_PREFIX: "ghcr.io/ipa-rwu/"
  BUILDER_SUFFIX: ":latest"
  FOLDER: ${CI_JOB_NAME}
  NAME: ${CI_JOB_NAME}
  PREFIX: "${CI_REGISTRY_IMAGE}/${CI_PIPELINE_ID}:"
  SUFFIX: ""
  DOCKER_BUILDKIT: 1
  DOCKER_TLS_CERTDIR: ""
  DEP_PREFIX: "registry.gitlab.cc-asp.fraunhofer.de/ipa326/phoenix_dependencies/"
  DEP_SUFFIX: ":latest"
  TARGET_BRANCH: ${CI_REGISTRY_IMAGE}/${NAME}:${CI_COMMIT_REF_NAME//\//-}
  TARGET_LATEST: ${CI_REGISTRY_IMAGE}/${NAME}:latest
  TARGET_RELEASE: ${CI_REGISTRY_IMAGE}/${NAME}:${CI_COMMIT_TAG//\//-}
  DEFAULT_ROS_DISTROS: noetic foxy galactic rolling humble
  CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Release"

.common:
  services: &docker_service
    - docker:dind
  tags: &docker_runner
      - docker-build
  tags: &simple_runner
    - asprunner
  docker_login_script:
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin $CI_REGISTRY

.build:
  stage: build
  services: *docker_service
  tags: *docker_runner
  before_script:
    - !reference [.common, docker_login_script]
  script:
    - >
      TARGET=${CI_REGISTRY_IMAGE}/${NAME}:${CI_COMMIT_REF_NAME//\//-};
      docker build --cache-from $TARGET --cache-from $TARGET_LATEST --cache-from $TARGET_BRANCH
      --build-arg SUFFIX
      --build-arg PREFIX
      --build-arg DEP_PREFIX
      --build-arg DEP_SUFFIX
      --build-arg BUILDER_PREFIX
      --build-arg BUILDER_SUFFIX
      --build-arg ROS_DISTRO
      --build-arg ROSINSTALL_CI_JOB_TOKEN=$ROSINSTALL_CI_JOB_TOKEN
      --build-arg CI_JOB_TOKEN=$CI_JOB_TOKEN
      --build-arg BUILDKIT_INLINE_CACHE=1
      --build-arg CMAKE_ARGS
      -t ${PREFIX}${NAME}${SUFFIX} ${FOLDER}
    - >
      if [[ "$CI_COMMIT_REF_NAME" =~ ".*devel" ]] || [[ $CI_COMMIT_TAG ]]; then
        docker push ${PREFIX}${NAME}${SUFFIX}
      fi
  variables:
    NAME: ${CI_JOB_NAME}_${ROS_DISTRO}

phoenix_bridge_ros2:
  extends:
    - .build
    - .on_ros2
  variables:
    NAME: phoenix_bridge_${ROS_DISTRO}
    FOLDER: .
  parallel:
    matrix:
      - ROS_DISTRO:
        - foxy
        - galactic
        - rolling
        - humble

phoenix_bridge_ros1:
  extends:
    - .build
    - .on_ros1
  variables:
    NAME: phoenix_bridge_${ROS_DISTRO}
    FOLDER: .
  parallel:
    matrix:
      - ROS_DISTRO:
        - noetic

.publish:
  stage: publish
  services: *docker_service
  tags: *docker_runner
  before_script:
    - !reference [.common, docker_login_script]
    - docker pull ${PREFIX}${NAME}${SUFFIX}
  script:
    - |
      TARGET=${CI_REGISTRY_IMAGE}/${NAME}:${CI_COMMIT_REF_NAME//\//-}
      if [[ $(expr match "$CI_COMMIT_REF_NAME" '.*devel') != 0 ]]; then
        TARGET=$TARGET_LATEST
      fi
      if [ $CI_COMMIT_TAG ]; then
        convert_tag=${CI_COMMIT_TAG//\//-}
        distro_prefix=${ROS_DISTRO}-
        if [[ $(expr match "$convert_tag" ".*$distro_prefix") != 0 ]]; then
          remove_distro_tag=${convert_tag#"$distro_prefix"}
          TARGET_RELEASE=${CI_REGISTRY_IMAGE}/${NAME}:${remove_distro_tag}
          TARGET=$TARGET_RELEASE
        fi
        if [[ $(expr match "$convert_tag" ".*ros1-") != 0 ]]; then
          remove_distro_tag=${convert_tag#"ros1-"}
          TARGET_RELEASE=${CI_REGISTRY_IMAGE}/${NAME}:${remove_distro_tag}
          TARGET=$TARGET_RELEASE
        fi
        if [[ $(expr match "$convert_tag" ".*ros2-") != 0 ]]; then
          remove_distro_tag=${convert_tag#"ros2-"}
          TARGET_RELEASE=${CI_REGISTRY_IMAGE}/${NAME}:${remove_distro_tag}
          TARGET=$TARGET_RELEASE
        fi
      fi
      docker tag ${PREFIX}${NAME}${SUFFIX} ${TARGET} && docker push ${TARGET}
  needs:
    - build

publish:phoenix_bridge:ros2:
  extends:
    - .publish
    - .on_ros2_merge_tag
  variables:
    NAME: phoenix_bridge_${ROS_DISTRO}
  needs:
    - phoenix_bridge_ros2
  parallel:
    matrix:
      - ROS_DISTRO:
        - foxy
        - galactic
        - rolling
        - humble

publish:phoenix_bridge:ros1:
  extends:
    - .publish
    - .on_ros1_merge_tag
  variables:
    NAME: phoenix_bridge_${ROS_DISTRO}
  needs:
    - phoenix_bridge_ros1
  parallel:
    matrix:
      - ROS_DISTRO:
        - noetic

cleanup_job:
  image: alpine:latest
  stage: cleanup
  tags: *simple_runner
  before_script:
    - apk add --no-cache curl
    - apk add jq
  script:
    - >
      curl -H "PRIVATE-TOKEN: $API_TOKEN" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/registry/repositories" > output.json
    - >
      image_id=$(jq --arg CI_PIPELINE_ID "$CI_PIPELINE_ID" '.[] | select(.name==$CI_PIPELINE_ID) | .id' output.json)
    - |
      if [[ ! -z "$image_id" ]]; then
        curl --request DELETE -H "PRIVATE-TOKEN: $API_TOKEN" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/registry/repositories/${image_id}"
      fi
  when: always

doxygen-job:
  stage: doc
  tags: *simple_runner
  image: ubuntu:latest
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq doxygen graphviz
  script:
    - doxygen Doxyfile
    - mv doc/html/ public/
  artifacts:
    paths:
    - public
  when: always
