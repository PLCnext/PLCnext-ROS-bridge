stages:
  - build_and_test
  - doc
  - dockerize

build-job:
  stage: build_and_test
  image: registry.gitlab.cc-asp.fraunhofer.de/ipa326/phoenix_bridge/base_image:axcf3x_foxy_1.0
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq git-core
    - git clone --quiet --depth 1 https://github.com/ros-industrial/industrial_ci .industrial_ci
  script: .industrial_ci/gitlab.sh
  services: []
  variables:
    ISOLATION: shell
  tags:
    - docker-build

doxygen-job:
  stage: doc
  image: ubuntu:latest
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq doxygen graphviz
  script:
    - doxygen Doxyfile
    - mv doc/html/ public/
  artifacts:
    paths:
    - public
  tags:
   - asprunner

dockerize-job:
  stage: dockerize
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    IMAGE_TAG: $CI_REGISTRY_IMAGE/bridge_image_foxy:$CI_COMMIT_TAG
    IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE/bridge_image_foxy:latest
  before_script:
    - env
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker info
  script:
    - docker pull $IMAGE_TAG_LATEST || true
    - echo "Building with image tag" $CI_COMMIT_REF_SLUG
    - docker build --cache-from $IMAGE_TAG_LATEST --tag $IMAGE_TAG --tag $IMAGE_TAG_LATEST .
    - docker push $IMAGE_TAG
    - docker push $IMAGE_TAG_LATEST
  tags:
    - docker-build
  rules:
    - if: '$CI_COMMIT_TAG != null'
