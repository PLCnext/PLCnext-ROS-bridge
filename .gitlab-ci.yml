include:
  - local: ci/gitlab_templates/RULES.yml

variables:
  DOCKER_IMAGE_PATH: ${CI_PROJECT_DIR}/generated
  APP_PATH: ${CI_PROJECT_DIR}/app/images
  APP_NAME: plcnext-ros-bridge
  BUILDER_PREFIX: "ghcr.io/ipa-rwu/"
  BUILDER_SUFFIX: ":latest"
  CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=RELEASE"
  DEFAULT_ROS_DISTROS: noetic foxy galactic rolling humble
  DEP_REPO_NAME: grpc-client-deps
  DEP_REPO_URL: gitlab.phoenixcontact.com/vmm-factory-automation/digital-factory/data-usage/flexible-production-with-agv/gda-control/$DEP_REPO_NAME.git
  DOCKER_BUILDKIT: 1
  DOCKER_TLS_CERTDIR: ""
  FOLDER: ${CI_JOB_NAME}/
  NAME: ${CI_JOB_NAME}
  PREFIX: "${CI_PIPELINE_ID}:"
  ROS_VERSIONS: ros1 ros2
  ROSINSTALL_CI_JOB_TOKEN: "true"
  STABLE_BRANCH: devel
  SUFFIX: ""
  TARGET_LATEST: ${NAME}:latest
  TARGET_RELEASE: ${NAME}:${CI_COMMIT_TAG//\//-}

.common:
  tags: &kaniko_runner
    - shared-runner-kubernetes
  create_release_tag_script:
    - |
      if [ "$CI_COMMIT_REF_NAME" = "main" ] || [ "$CI_COMMIT_REF_NAME" = "master" ]; then
        TARGET=$TARGET_LATEST
      fi
      if [[ $(expr match "$CI_COMMIT_REF_NAME" ".*$STABLE_BRANCH") != 0 ]]; then
        TARGET=$TARGET_LATEST
      fi
      if [ $CI_COMMIT_TAG ]; then
        convert_tag=${CI_COMMIT_TAG//\//-}
        distro_prefix=${ROS_DISTRO}-
        remove_distro_tag=${convert_tag#"$distro_prefix"}
        TARGET_RELEASE=${NAME}:${remove_distro_tag}
        TARGET=$TARGET_RELEASE
      fi

.build:
  stage: build
  tags: *kaniko_runner
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}/${FOLDER}"
      --build-arg SUFFIX
      --build-arg PREFIX
      --build-arg DEP_REPO_NAME
      --build-arg DEP_REPO_URL
      --build-arg BUILDER_PREFIX
      --build-arg BUILDER_SUFFIX
      --build-arg ROS_DISTRO
      --build-arg ROSINSTALL_CI_JOB_TOKEN
      --build-arg CI_JOB_TOKEN
      --build-arg BUILDKIT_INLINE_CACHE=1
      --build-arg CMAKE_ARGS
      --dockerfile "${CI_PROJECT_DIR}/${FOLDER}Dockerfile"
      --no-push
      --destination "${TARGET}"
      --tarPath ${PREFIX//:/-}${NAME}${SUFFIX}.tar
  variables:
    NAME: ${CI_JOB_NAME}_${ROS_DISTRO}
  artifacts:
    name: ${NAME}
    paths:
      - ${PREFIX//:/-}${NAME}${SUFFIX}.tar
    expire_in: 10 minutes

build_${APP_NAME}_ros1:
  extends:
    - .build
    - .on_ros1
  before_script:
    - TARGET=${PREFIX}${NAME}${SUFFIX}
    - !reference [.common, create_release_tag_script]
  variables:
    NAME: ${APP_NAME}_${ROS_DISTRO}
    FOLDER: ""
  parallel:
    matrix:
      - ROS_DISTRO:
        - noetic

build_${APP_NAME}_ros2:
  extends:
    - .build
    - .on_ros2
  before_script:
    - TARGET=${PREFIX}${NAME}${SUFFIX}
    - !reference [.common, create_release_tag_script]
  variables:
    NAME: ${APP_NAME}_${ROS_DISTRO}
    FOLDER: ""
  parallel:
    matrix:
      - ROS_DISTRO:
        - foxy
        - galactic
        - humble
        - rolling

.publish:
  stage: publish
  tags: *kaniko_runner
  image: alpine:latest
  script:
    - TARGET=${NAME}:${CI_COMMIT_REF_NAME//\//-}
    - !reference [.common, create_release_tag_script]
    - mkdir ${DOCKER_IMAGE_PATH}
    - mv ${PREFIX//:/-}${NAME}${SUFFIX}.tar ${DOCKER_IMAGE_PATH}/${TARGET//:/-}.tar
  needs:
    - build
  artifacts:
    name: ${NAME}
    paths:
      - ${DOCKER_IMAGE_PATH}/*.tar
    expire_in: 10 minutes

publish_${APP_NAME}_ros1:
  extends:
    - .publish
    - .on_ros1_merge_tag
  variables:
    NAME: ${APP_NAME}_${ROS_DISTRO}
  needs:
    - build_${APP_NAME}_ros1
  parallel:
    matrix:
      - ROS_DISTRO:
        - noetic

publish_${APP_NAME}_ros2:
  extends:
    - .publish
    - .on_ros2_merge_tag
  variables:
    NAME: ${APP_NAME}_${ROS_DISTRO}
  needs:
    - build_${APP_NAME}_ros2
  parallel:
    matrix:
      - ROS_DISTRO:
        - foxy
        - galactic
        - humble
        - rolling

.deploy_app:
  stage: deploy_app
  tags: *kaniko_runner
  image:
    name: debian:bookworm
  before_script:
    - apt-get update
    - apt-get install --yes squashfs-tools rpm
    - TARGET=${NAME}:${CI_COMMIT_REF_NAME//\//-}
    - !reference [.common, create_release_tag_script]
  script:
    - tar -tf ${DOCKER_IMAGE_PATH}/${TARGET//:/-}.tar --wildcards 'sha256*' >> ./image.id
    - sed -i 's/[^:]*:\(.*\)/\1/' image.id
    - mkdir $APP_PATH
    - cp ${DOCKER_IMAGE_PATH}/${TARGET//:/-}.tar $APP_PATH/$APP_NAME.tar
    - sed -i "s/§§IMAGE_ID§§/$(<image.id)/g" ./app/app-compose.yml
    - sed -i "s/§§IMAGE_ID§§/$(<image.id)/g" ./app/initscript.sh
    - sed -i "s/§§TARGETS§§/AXC F 3152,EPC 1522,EPC 1502/g" ./app/app_info.json
    - chmod +x app/initscript.sh
    - mksquashfs app $APP_NAME.app -force-uid 1001 -force-gid 1002
  needs:
    - build
  artifacts:
    name: "${CI_PROJECT_PATH_SLUG}-${APP_NAME}-${CI_COMMIT_SHORT_SHA}"
    paths:
      - ${CI_PROJECT_DIR}/*.app
    when: on_success
    expire_in: 1 day

deploy_app:${APP_NAME}:ros1:
  extends:
    - .deploy_app
    - .on_ros1_merge_tag
  variables:
    NAME: ${APP_NAME}_${ROS_DISTRO}
  needs:
    - publish_${APP_NAME}_ros1
  parallel:
    matrix:
      - ROS_DISTRO:
        - noetic

deploy_app:${APP_NAME}:ros2:
  extends:
    - .deploy_app
    - .on_ros2_merge_tag
  variables:
    NAME: ${APP_NAME}_${ROS_DISTRO}
  needs:
    - publish_${APP_NAME}_ros2
  parallel:
    matrix:
      - ROS_DISTRO:
        - foxy
        - galactic
        - humble
        - rolling

doxygen-job:
  stage: doc
  tags: *kaniko_runner
  image: ubuntu:latest
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq doxygen graphviz
  script:
    - doxygen Doxyfile
    - mv doc/html/ public/
  artifacts:
    paths:
    - public
  when: always

stages:
  - build
  - publish
  - deploy_app
  - doc
