// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IDataAccessService.proto

#include "IDataAccessService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ReadItem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ReadItem_ReadItem_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_WriteItem_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_WriteItem_WriteItem_2eproto;
namespace Arp {
namespace Plc {
namespace Gds {
namespace Services {
namespace Grpc {
class IDataAccessServiceReadSingleRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDataAccessServiceReadSingleRequest> _instance;
} _IDataAccessServiceReadSingleRequest_default_instance_;
class IDataAccessServiceReadRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDataAccessServiceReadRequest> _instance;
} _IDataAccessServiceReadRequest_default_instance_;
class IDataAccessServiceWriteSingleRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDataAccessServiceWriteSingleRequest> _instance;
} _IDataAccessServiceWriteSingleRequest_default_instance_;
class IDataAccessServiceWriteRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDataAccessServiceWriteRequest> _instance;
} _IDataAccessServiceWriteRequest_default_instance_;
class IDataAccessServiceReadSingleResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDataAccessServiceReadSingleResponse> _instance;
} _IDataAccessServiceReadSingleResponse_default_instance_;
class IDataAccessServiceReadResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDataAccessServiceReadResponse> _instance;
} _IDataAccessServiceReadResponse_default_instance_;
class IDataAccessServiceWriteSingleResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDataAccessServiceWriteSingleResponse> _instance;
} _IDataAccessServiceWriteSingleResponse_default_instance_;
class IDataAccessServiceWriteResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDataAccessServiceWriteResponse> _instance;
} _IDataAccessServiceWriteResponse_default_instance_;
}  // namespace Grpc
}  // namespace Services
}  // namespace Gds
}  // namespace Plc
}  // namespace Arp
static void InitDefaultsscc_info_IDataAccessServiceReadRequest_IDataAccessService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceReadRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDataAccessServiceReadRequest_IDataAccessService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDataAccessServiceReadRequest_IDataAccessService_2eproto}, {}};

static void InitDefaultsscc_info_IDataAccessServiceReadResponse_IDataAccessService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceReadResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IDataAccessServiceReadResponse_IDataAccessService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IDataAccessServiceReadResponse_IDataAccessService_2eproto}, {
      &scc_info_ReadItem_ReadItem_2eproto.base,}};

static void InitDefaultsscc_info_IDataAccessServiceReadSingleRequest_IDataAccessService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceReadSingleRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDataAccessServiceReadSingleRequest_IDataAccessService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDataAccessServiceReadSingleRequest_IDataAccessService_2eproto}, {}};

static void InitDefaultsscc_info_IDataAccessServiceReadSingleResponse_IDataAccessService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceReadSingleResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IDataAccessServiceReadSingleResponse_IDataAccessService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IDataAccessServiceReadSingleResponse_IDataAccessService_2eproto}, {
      &scc_info_ReadItem_ReadItem_2eproto.base,}};

static void InitDefaultsscc_info_IDataAccessServiceWriteRequest_IDataAccessService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceWriteRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IDataAccessServiceWriteRequest_IDataAccessService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IDataAccessServiceWriteRequest_IDataAccessService_2eproto}, {
      &scc_info_WriteItem_WriteItem_2eproto.base,}};

static void InitDefaultsscc_info_IDataAccessServiceWriteResponse_IDataAccessService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceWriteResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDataAccessServiceWriteResponse_IDataAccessService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDataAccessServiceWriteResponse_IDataAccessService_2eproto}, {}};

static void InitDefaultsscc_info_IDataAccessServiceWriteSingleRequest_IDataAccessService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceWriteSingleRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_IDataAccessServiceWriteSingleRequest_IDataAccessService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_IDataAccessServiceWriteSingleRequest_IDataAccessService_2eproto}, {
      &scc_info_WriteItem_WriteItem_2eproto.base,}};

static void InitDefaultsscc_info_IDataAccessServiceWriteSingleResponse_IDataAccessService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceWriteSingleResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDataAccessServiceWriteSingleResponse_IDataAccessService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDataAccessServiceWriteSingleResponse_IDataAccessService_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_IDataAccessService_2eproto[8];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_IDataAccessService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_IDataAccessService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_IDataAccessService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleRequest, portname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadRequest, portnames_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteRequest, data_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteResponse, _returnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleRequest)},
  { 6, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadRequest)},
  { 12, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleRequest)},
  { 18, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteRequest)},
  { 24, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleResponse)},
  { 30, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadResponse)},
  { 36, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleResponse)},
  { 42, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceReadSingleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceReadRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceWriteSingleRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceWriteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceReadSingleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceReadResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceWriteSingleResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_IDataAccessServiceWriteResponse_default_instance_),
};

const char descriptor_table_protodef_IDataAccessService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030IDataAccessService.proto\022\031Arp.Plc.Gds."
  "Services.Grpc\032\025DataAccessError.proto\032\016Re"
  "adItem.proto\032\017WriteItem.proto\"7\n#IDataAc"
  "cessServiceReadSingleRequest\022\020\n\010portName"
  "\030\001 \001(\t\"2\n\035IDataAccessServiceReadRequest\022"
  "\021\n\tportNames\030\001 \003(\t\"Z\n$IDataAccessService"
  "WriteSingleRequest\0222\n\004data\030\001 \001(\0132$.Arp.P"
  "lc.Gds.Services.Grpc.WriteItem\"T\n\036IDataA"
  "ccessServiceWriteRequest\0222\n\004data\030\001 \003(\0132$"
  ".Arp.Plc.Gds.Services.Grpc.WriteItem\"a\n$"
  "IDataAccessServiceReadSingleResponse\0229\n\014"
  "_ReturnValue\030\001 \001(\0132#.Arp.Plc.Gds.Service"
  "s.Grpc.ReadItem\"[\n\036IDataAccessServiceRea"
  "dResponse\0229\n\014_ReturnValue\030\001 \003(\0132#.Arp.Pl"
  "c.Gds.Services.Grpc.ReadItem\"i\n%IDataAcc"
  "essServiceWriteSingleResponse\022@\n\014_Return"
  "Value\030\001 \001(\0162*.Arp.Plc.Gds.Services.Grpc."
  "DataAccessError\"c\n\037IDataAccessServiceWri"
  "teResponse\022@\n\014_ReturnValue\030\001 \003(\0162*.Arp.P"
  "lc.Gds.Services.Grpc.DataAccessError2\275\004\n"
  "\022IDataAccessService\022\217\001\n\nReadSingle\022>.Arp"
  ".Plc.Gds.Services.Grpc.IDataAccessServic"
  "eReadSingleRequest\032\?.Arp.Plc.Gds.Service"
  "s.Grpc.IDataAccessServiceReadSingleRespo"
  "nse\"\000\022}\n\004Read\0228.Arp.Plc.Gds.Services.Grp"
  "c.IDataAccessServiceReadRequest\0329.Arp.Pl"
  "c.Gds.Services.Grpc.IDataAccessServiceRe"
  "adResponse\"\000\022\222\001\n\013WriteSingle\022\?.Arp.Plc.G"
  "ds.Services.Grpc.IDataAccessServiceWrite"
  "SingleRequest\032@.Arp.Plc.Gds.Services.Grp"
  "c.IDataAccessServiceWriteSingleResponse\""
  "\000\022\200\001\n\005Write\0229.Arp.Plc.Gds.Services.Grpc."
  "IDataAccessServiceWriteRequest\032:.Arp.Plc"
  ".Gds.Services.Grpc.IDataAccessServiceWri"
  "teResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_IDataAccessService_2eproto_deps[3] = {
  &::descriptor_table_DataAccessError_2eproto,
  &::descriptor_table_ReadItem_2eproto,
  &::descriptor_table_WriteItem_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_IDataAccessService_2eproto_sccs[8] = {
  &scc_info_IDataAccessServiceReadRequest_IDataAccessService_2eproto.base,
  &scc_info_IDataAccessServiceReadResponse_IDataAccessService_2eproto.base,
  &scc_info_IDataAccessServiceReadSingleRequest_IDataAccessService_2eproto.base,
  &scc_info_IDataAccessServiceReadSingleResponse_IDataAccessService_2eproto.base,
  &scc_info_IDataAccessServiceWriteRequest_IDataAccessService_2eproto.base,
  &scc_info_IDataAccessServiceWriteResponse_IDataAccessService_2eproto.base,
  &scc_info_IDataAccessServiceWriteSingleRequest_IDataAccessService_2eproto.base,
  &scc_info_IDataAccessServiceWriteSingleResponse_IDataAccessService_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_IDataAccessService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_IDataAccessService_2eproto = {
  false, false, descriptor_table_protodef_IDataAccessService_2eproto, "IDataAccessService.proto", 1380,
  &descriptor_table_IDataAccessService_2eproto_once, descriptor_table_IDataAccessService_2eproto_sccs, descriptor_table_IDataAccessService_2eproto_deps, 8, 3,
  schemas, file_default_instances, TableStruct_IDataAccessService_2eproto::offsets,
  file_level_metadata_IDataAccessService_2eproto, 8, file_level_enum_descriptors_IDataAccessService_2eproto, file_level_service_descriptors_IDataAccessService_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_IDataAccessService_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_IDataAccessService_2eproto)), true);
namespace Arp {
namespace Plc {
namespace Gds {
namespace Services {
namespace Grpc {

// ===================================================================

class IDataAccessServiceReadSingleRequest::_Internal {
 public:
};

IDataAccessServiceReadSingleRequest::IDataAccessServiceReadSingleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
}
IDataAccessServiceReadSingleRequest::IDataAccessServiceReadSingleRequest(const IDataAccessServiceReadSingleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  portname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_portname().empty()) {
    portname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_portname(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
}

void IDataAccessServiceReadSingleRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDataAccessServiceReadSingleRequest_IDataAccessService_2eproto.base);
  portname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IDataAccessServiceReadSingleRequest::~IDataAccessServiceReadSingleRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDataAccessServiceReadSingleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  portname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IDataAccessServiceReadSingleRequest::ArenaDtor(void* object) {
  IDataAccessServiceReadSingleRequest* _this = reinterpret_cast< IDataAccessServiceReadSingleRequest* >(object);
  (void)_this;
}
void IDataAccessServiceReadSingleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDataAccessServiceReadSingleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDataAccessServiceReadSingleRequest& IDataAccessServiceReadSingleRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDataAccessServiceReadSingleRequest_IDataAccessService_2eproto.base);
  return *internal_default_instance();
}


void IDataAccessServiceReadSingleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  portname_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDataAccessServiceReadSingleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string portName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_portname();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest.portName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDataAccessServiceReadSingleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string portName = 1;
  if (this->portname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_portname().data(), static_cast<int>(this->_internal_portname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest.portName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_portname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
  return target;
}

size_t IDataAccessServiceReadSingleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string portName = 1;
  if (this->portname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_portname());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDataAccessServiceReadSingleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IDataAccessServiceReadSingleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDataAccessServiceReadSingleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
    MergeFrom(*source);
  }
}

void IDataAccessServiceReadSingleRequest::MergeFrom(const IDataAccessServiceReadSingleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.portname().size() > 0) {
    _internal_set_portname(from._internal_portname());
  }
}

void IDataAccessServiceReadSingleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDataAccessServiceReadSingleRequest::CopyFrom(const IDataAccessServiceReadSingleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDataAccessServiceReadSingleRequest::IsInitialized() const {
  return true;
}

void IDataAccessServiceReadSingleRequest::InternalSwap(IDataAccessServiceReadSingleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  portname_.Swap(&other->portname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IDataAccessServiceReadSingleRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDataAccessServiceReadRequest::_Internal {
 public:
};

IDataAccessServiceReadRequest::IDataAccessServiceReadRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  portnames_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
}
IDataAccessServiceReadRequest::IDataAccessServiceReadRequest(const IDataAccessServiceReadRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      portnames_(from.portnames_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
}

void IDataAccessServiceReadRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDataAccessServiceReadRequest_IDataAccessService_2eproto.base);
}

IDataAccessServiceReadRequest::~IDataAccessServiceReadRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDataAccessServiceReadRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IDataAccessServiceReadRequest::ArenaDtor(void* object) {
  IDataAccessServiceReadRequest* _this = reinterpret_cast< IDataAccessServiceReadRequest* >(object);
  (void)_this;
}
void IDataAccessServiceReadRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDataAccessServiceReadRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDataAccessServiceReadRequest& IDataAccessServiceReadRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDataAccessServiceReadRequest_IDataAccessService_2eproto.base);
  return *internal_default_instance();
}


void IDataAccessServiceReadRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  portnames_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDataAccessServiceReadRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string portNames = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_portnames();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest.portNames"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDataAccessServiceReadRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string portNames = 1;
  for (int i = 0, n = this->_internal_portnames_size(); i < n; i++) {
    const auto& s = this->_internal_portnames(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest.portNames");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
  return target;
}

size_t IDataAccessServiceReadRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string portNames = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(portnames_.size());
  for (int i = 0, n = portnames_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      portnames_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDataAccessServiceReadRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IDataAccessServiceReadRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDataAccessServiceReadRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
    MergeFrom(*source);
  }
}

void IDataAccessServiceReadRequest::MergeFrom(const IDataAccessServiceReadRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  portnames_.MergeFrom(from.portnames_);
}

void IDataAccessServiceReadRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDataAccessServiceReadRequest::CopyFrom(const IDataAccessServiceReadRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDataAccessServiceReadRequest::IsInitialized() const {
  return true;
}

void IDataAccessServiceReadRequest::InternalSwap(IDataAccessServiceReadRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  portnames_.InternalSwap(&other->portnames_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDataAccessServiceReadRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDataAccessServiceWriteSingleRequest::_Internal {
 public:
  static const ::Arp::Plc::Gds::Services::Grpc::WriteItem& data(const IDataAccessServiceWriteSingleRequest* msg);
};

const ::Arp::Plc::Gds::Services::Grpc::WriteItem&
IDataAccessServiceWriteSingleRequest::_Internal::data(const IDataAccessServiceWriteSingleRequest* msg) {
  return *msg->data_;
}
void IDataAccessServiceWriteSingleRequest::clear_data() {
  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
}
IDataAccessServiceWriteSingleRequest::IDataAccessServiceWriteSingleRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
}
IDataAccessServiceWriteSingleRequest::IDataAccessServiceWriteSingleRequest(const IDataAccessServiceWriteSingleRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_data()) {
    data_ = new ::Arp::Plc::Gds::Services::Grpc::WriteItem(*from.data_);
  } else {
    data_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
}

void IDataAccessServiceWriteSingleRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDataAccessServiceWriteSingleRequest_IDataAccessService_2eproto.base);
  data_ = nullptr;
}

IDataAccessServiceWriteSingleRequest::~IDataAccessServiceWriteSingleRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDataAccessServiceWriteSingleRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete data_;
}

void IDataAccessServiceWriteSingleRequest::ArenaDtor(void* object) {
  IDataAccessServiceWriteSingleRequest* _this = reinterpret_cast< IDataAccessServiceWriteSingleRequest* >(object);
  (void)_this;
}
void IDataAccessServiceWriteSingleRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDataAccessServiceWriteSingleRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDataAccessServiceWriteSingleRequest& IDataAccessServiceWriteSingleRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDataAccessServiceWriteSingleRequest_IDataAccessService_2eproto.base);
  return *internal_default_instance();
}


void IDataAccessServiceWriteSingleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && data_ != nullptr) {
    delete data_;
  }
  data_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDataAccessServiceWriteSingleRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.WriteItem data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDataAccessServiceWriteSingleRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.WriteItem data = 1;
  if (this->has_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
  return target;
}

size_t IDataAccessServiceWriteSingleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.WriteItem data = 1;
  if (this->has_data()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *data_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDataAccessServiceWriteSingleRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IDataAccessServiceWriteSingleRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDataAccessServiceWriteSingleRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
    MergeFrom(*source);
  }
}

void IDataAccessServiceWriteSingleRequest::MergeFrom(const IDataAccessServiceWriteSingleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    _internal_mutable_data()->::Arp::Plc::Gds::Services::Grpc::WriteItem::MergeFrom(from._internal_data());
  }
}

void IDataAccessServiceWriteSingleRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDataAccessServiceWriteSingleRequest::CopyFrom(const IDataAccessServiceWriteSingleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDataAccessServiceWriteSingleRequest::IsInitialized() const {
  return true;
}

void IDataAccessServiceWriteSingleRequest::InternalSwap(IDataAccessServiceWriteSingleRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(data_, other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDataAccessServiceWriteSingleRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDataAccessServiceWriteRequest::_Internal {
 public:
};

void IDataAccessServiceWriteRequest::clear_data() {
  data_.Clear();
}
IDataAccessServiceWriteRequest::IDataAccessServiceWriteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  data_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
}
IDataAccessServiceWriteRequest::IDataAccessServiceWriteRequest(const IDataAccessServiceWriteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      data_(from.data_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
}

void IDataAccessServiceWriteRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDataAccessServiceWriteRequest_IDataAccessService_2eproto.base);
}

IDataAccessServiceWriteRequest::~IDataAccessServiceWriteRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDataAccessServiceWriteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IDataAccessServiceWriteRequest::ArenaDtor(void* object) {
  IDataAccessServiceWriteRequest* _this = reinterpret_cast< IDataAccessServiceWriteRequest* >(object);
  (void)_this;
}
void IDataAccessServiceWriteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDataAccessServiceWriteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDataAccessServiceWriteRequest& IDataAccessServiceWriteRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDataAccessServiceWriteRequest_IDataAccessService_2eproto.base);
  return *internal_default_instance();
}


void IDataAccessServiceWriteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDataAccessServiceWriteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Arp.Plc.Gds.Services.Grpc.WriteItem data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_data(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDataAccessServiceWriteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Arp.Plc.Gds.Services.Grpc.WriteItem data = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_data_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_data(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
  return target;
}

size_t IDataAccessServiceWriteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Plc.Gds.Services.Grpc.WriteItem data = 1;
  total_size += 1UL * this->_internal_data_size();
  for (const auto& msg : this->data_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDataAccessServiceWriteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IDataAccessServiceWriteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDataAccessServiceWriteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
    MergeFrom(*source);
  }
}

void IDataAccessServiceWriteRequest::MergeFrom(const IDataAccessServiceWriteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void IDataAccessServiceWriteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDataAccessServiceWriteRequest::CopyFrom(const IDataAccessServiceWriteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDataAccessServiceWriteRequest::IsInitialized() const {
  return true;
}

void IDataAccessServiceWriteRequest::InternalSwap(IDataAccessServiceWriteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  data_.InternalSwap(&other->data_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDataAccessServiceWriteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDataAccessServiceReadSingleResponse::_Internal {
 public:
  static const ::Arp::Plc::Gds::Services::Grpc::ReadItem& _returnvalue(const IDataAccessServiceReadSingleResponse* msg);
};

const ::Arp::Plc::Gds::Services::Grpc::ReadItem&
IDataAccessServiceReadSingleResponse::_Internal::_returnvalue(const IDataAccessServiceReadSingleResponse* msg) {
  return *msg->_returnvalue_;
}
void IDataAccessServiceReadSingleResponse::clear__returnvalue() {
  if (GetArena() == nullptr && _returnvalue_ != nullptr) {
    delete _returnvalue_;
  }
  _returnvalue_ = nullptr;
}
IDataAccessServiceReadSingleResponse::IDataAccessServiceReadSingleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
}
IDataAccessServiceReadSingleResponse::IDataAccessServiceReadSingleResponse(const IDataAccessServiceReadSingleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has__returnvalue()) {
    _returnvalue_ = new ::Arp::Plc::Gds::Services::Grpc::ReadItem(*from._returnvalue_);
  } else {
    _returnvalue_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
}

void IDataAccessServiceReadSingleResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDataAccessServiceReadSingleResponse_IDataAccessService_2eproto.base);
  _returnvalue_ = nullptr;
}

IDataAccessServiceReadSingleResponse::~IDataAccessServiceReadSingleResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDataAccessServiceReadSingleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete _returnvalue_;
}

void IDataAccessServiceReadSingleResponse::ArenaDtor(void* object) {
  IDataAccessServiceReadSingleResponse* _this = reinterpret_cast< IDataAccessServiceReadSingleResponse* >(object);
  (void)_this;
}
void IDataAccessServiceReadSingleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDataAccessServiceReadSingleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDataAccessServiceReadSingleResponse& IDataAccessServiceReadSingleResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDataAccessServiceReadSingleResponse_IDataAccessService_2eproto.base);
  return *internal_default_instance();
}


void IDataAccessServiceReadSingleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && _returnvalue_ != nullptr) {
    delete _returnvalue_;
  }
  _returnvalue_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDataAccessServiceReadSingleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.ReadItem _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable__returnvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDataAccessServiceReadSingleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.ReadItem _ReturnValue = 1;
  if (this->has__returnvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::_returnvalue(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
  return target;
}

size_t IDataAccessServiceReadSingleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.ReadItem _ReturnValue = 1;
  if (this->has__returnvalue()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_returnvalue_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDataAccessServiceReadSingleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IDataAccessServiceReadSingleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDataAccessServiceReadSingleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
    MergeFrom(*source);
  }
}

void IDataAccessServiceReadSingleResponse::MergeFrom(const IDataAccessServiceReadSingleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has__returnvalue()) {
    _internal_mutable__returnvalue()->::Arp::Plc::Gds::Services::Grpc::ReadItem::MergeFrom(from._internal__returnvalue());
  }
}

void IDataAccessServiceReadSingleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDataAccessServiceReadSingleResponse::CopyFrom(const IDataAccessServiceReadSingleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDataAccessServiceReadSingleResponse::IsInitialized() const {
  return true;
}

void IDataAccessServiceReadSingleResponse::InternalSwap(IDataAccessServiceReadSingleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDataAccessServiceReadSingleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDataAccessServiceReadResponse::_Internal {
 public:
};

void IDataAccessServiceReadResponse::clear__returnvalue() {
  _returnvalue_.Clear();
}
IDataAccessServiceReadResponse::IDataAccessServiceReadResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  _returnvalue_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
}
IDataAccessServiceReadResponse::IDataAccessServiceReadResponse(const IDataAccessServiceReadResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _returnvalue_(from._returnvalue_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
}

void IDataAccessServiceReadResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDataAccessServiceReadResponse_IDataAccessService_2eproto.base);
}

IDataAccessServiceReadResponse::~IDataAccessServiceReadResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDataAccessServiceReadResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IDataAccessServiceReadResponse::ArenaDtor(void* object) {
  IDataAccessServiceReadResponse* _this = reinterpret_cast< IDataAccessServiceReadResponse* >(object);
  (void)_this;
}
void IDataAccessServiceReadResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDataAccessServiceReadResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDataAccessServiceReadResponse& IDataAccessServiceReadResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDataAccessServiceReadResponse_IDataAccessService_2eproto.base);
  return *internal_default_instance();
}


void IDataAccessServiceReadResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDataAccessServiceReadResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Arp.Plc.Gds.Services.Grpc.ReadItem _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add__returnvalue(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDataAccessServiceReadResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Arp.Plc.Gds.Services.Grpc.ReadItem _ReturnValue = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal__returnvalue_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal__returnvalue(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
  return target;
}

size_t IDataAccessServiceReadResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Plc.Gds.Services.Grpc.ReadItem _ReturnValue = 1;
  total_size += 1UL * this->_internal__returnvalue_size();
  for (const auto& msg : this->_returnvalue_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDataAccessServiceReadResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IDataAccessServiceReadResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDataAccessServiceReadResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
    MergeFrom(*source);
  }
}

void IDataAccessServiceReadResponse::MergeFrom(const IDataAccessServiceReadResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _returnvalue_.MergeFrom(from._returnvalue_);
}

void IDataAccessServiceReadResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDataAccessServiceReadResponse::CopyFrom(const IDataAccessServiceReadResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceReadResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDataAccessServiceReadResponse::IsInitialized() const {
  return true;
}

void IDataAccessServiceReadResponse::InternalSwap(IDataAccessServiceReadResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  _returnvalue_.InternalSwap(&other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDataAccessServiceReadResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDataAccessServiceWriteSingleResponse::_Internal {
 public:
};

IDataAccessServiceWriteSingleResponse::IDataAccessServiceWriteSingleResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
}
IDataAccessServiceWriteSingleResponse::IDataAccessServiceWriteSingleResponse(const IDataAccessServiceWriteSingleResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
}

void IDataAccessServiceWriteSingleResponse::SharedCtor() {
  _returnvalue_ = 0;
}

IDataAccessServiceWriteSingleResponse::~IDataAccessServiceWriteSingleResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDataAccessServiceWriteSingleResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IDataAccessServiceWriteSingleResponse::ArenaDtor(void* object) {
  IDataAccessServiceWriteSingleResponse* _this = reinterpret_cast< IDataAccessServiceWriteSingleResponse* >(object);
  (void)_this;
}
void IDataAccessServiceWriteSingleResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDataAccessServiceWriteSingleResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDataAccessServiceWriteSingleResponse& IDataAccessServiceWriteSingleResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDataAccessServiceWriteSingleResponse_IDataAccessService_2eproto.base);
  return *internal_default_instance();
}


void IDataAccessServiceWriteSingleResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDataAccessServiceWriteSingleResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDataAccessServiceWriteSingleResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
  return target;
}

size_t IDataAccessServiceWriteSingleResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDataAccessServiceWriteSingleResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IDataAccessServiceWriteSingleResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDataAccessServiceWriteSingleResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
    MergeFrom(*source);
  }
}

void IDataAccessServiceWriteSingleResponse::MergeFrom(const IDataAccessServiceWriteSingleResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void IDataAccessServiceWriteSingleResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDataAccessServiceWriteSingleResponse::CopyFrom(const IDataAccessServiceWriteSingleResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteSingleResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDataAccessServiceWriteSingleResponse::IsInitialized() const {
  return true;
}

void IDataAccessServiceWriteSingleResponse::InternalSwap(IDataAccessServiceWriteSingleResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDataAccessServiceWriteSingleResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDataAccessServiceWriteResponse::_Internal {
 public:
};

IDataAccessServiceWriteResponse::IDataAccessServiceWriteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  _returnvalue_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
}
IDataAccessServiceWriteResponse::IDataAccessServiceWriteResponse(const IDataAccessServiceWriteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _returnvalue_(from._returnvalue_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
}

void IDataAccessServiceWriteResponse::SharedCtor() {
}

IDataAccessServiceWriteResponse::~IDataAccessServiceWriteResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDataAccessServiceWriteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IDataAccessServiceWriteResponse::ArenaDtor(void* object) {
  IDataAccessServiceWriteResponse* _this = reinterpret_cast< IDataAccessServiceWriteResponse* >(object);
  (void)_this;
}
void IDataAccessServiceWriteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDataAccessServiceWriteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDataAccessServiceWriteResponse& IDataAccessServiceWriteResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDataAccessServiceWriteResponse_IDataAccessService_2eproto.base);
  return *internal_default_instance();
}


void IDataAccessServiceWriteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDataAccessServiceWriteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable__returnvalue(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDataAccessServiceWriteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  {
    int byte_size = __returnvalue_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, _returnvalue_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
  return target;
}

size_t IDataAccessServiceWriteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal__returnvalue_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal__returnvalue(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    __returnvalue_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDataAccessServiceWriteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IDataAccessServiceWriteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDataAccessServiceWriteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
    MergeFrom(*source);
  }
}

void IDataAccessServiceWriteResponse::MergeFrom(const IDataAccessServiceWriteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _returnvalue_.MergeFrom(from._returnvalue_);
}

void IDataAccessServiceWriteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDataAccessServiceWriteResponse::CopyFrom(const IDataAccessServiceWriteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.IDataAccessServiceWriteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDataAccessServiceWriteResponse::IsInitialized() const {
  return true;
}

void IDataAccessServiceWriteResponse::InternalSwap(IDataAccessServiceWriteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  _returnvalue_.InternalSwap(&other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDataAccessServiceWriteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Grpc
}  // namespace Services
}  // namespace Gds
}  // namespace Plc
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadSingleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceReadResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteSingleResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::IDataAccessServiceWriteResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
