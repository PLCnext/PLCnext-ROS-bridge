// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ISubscriptionService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ISubscriptionService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ISubscriptionService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "DataAccessError.pb.h"
#include "SubscriptionKind.pb.h"
#include "VariableInfo.pb.h"
#include "ArpTypes.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ISubscriptionService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ISubscriptionService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[30]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ISubscriptionService_2eproto;
namespace Arp {
namespace Plc {
namespace Gds {
namespace Services {
namespace Grpc {
class ISubscriptionServiceAddVariableRequest;
class ISubscriptionServiceAddVariableRequestDefaultTypeInternal;
extern ISubscriptionServiceAddVariableRequestDefaultTypeInternal _ISubscriptionServiceAddVariableRequest_default_instance_;
class ISubscriptionServiceAddVariableResponse;
class ISubscriptionServiceAddVariableResponseDefaultTypeInternal;
extern ISubscriptionServiceAddVariableResponseDefaultTypeInternal _ISubscriptionServiceAddVariableResponse_default_instance_;
class ISubscriptionServiceAddVariablesRequest;
class ISubscriptionServiceAddVariablesRequestDefaultTypeInternal;
extern ISubscriptionServiceAddVariablesRequestDefaultTypeInternal _ISubscriptionServiceAddVariablesRequest_default_instance_;
class ISubscriptionServiceAddVariablesResponse;
class ISubscriptionServiceAddVariablesResponseDefaultTypeInternal;
extern ISubscriptionServiceAddVariablesResponseDefaultTypeInternal _ISubscriptionServiceAddVariablesResponse_default_instance_;
class ISubscriptionServiceCreateRecordingSubscriptionRequest;
class ISubscriptionServiceCreateRecordingSubscriptionRequestDefaultTypeInternal;
extern ISubscriptionServiceCreateRecordingSubscriptionRequestDefaultTypeInternal _ISubscriptionServiceCreateRecordingSubscriptionRequest_default_instance_;
class ISubscriptionServiceCreateRecordingSubscriptionResponse;
class ISubscriptionServiceCreateRecordingSubscriptionResponseDefaultTypeInternal;
extern ISubscriptionServiceCreateRecordingSubscriptionResponseDefaultTypeInternal _ISubscriptionServiceCreateRecordingSubscriptionResponse_default_instance_;
class ISubscriptionServiceCreateSubscriptionRequest;
class ISubscriptionServiceCreateSubscriptionRequestDefaultTypeInternal;
extern ISubscriptionServiceCreateSubscriptionRequestDefaultTypeInternal _ISubscriptionServiceCreateSubscriptionRequest_default_instance_;
class ISubscriptionServiceCreateSubscriptionResponse;
class ISubscriptionServiceCreateSubscriptionResponseDefaultTypeInternal;
extern ISubscriptionServiceCreateSubscriptionResponseDefaultTypeInternal _ISubscriptionServiceCreateSubscriptionResponse_default_instance_;
class ISubscriptionServiceDeleteSubscriptionRequest;
class ISubscriptionServiceDeleteSubscriptionRequestDefaultTypeInternal;
extern ISubscriptionServiceDeleteSubscriptionRequestDefaultTypeInternal _ISubscriptionServiceDeleteSubscriptionRequest_default_instance_;
class ISubscriptionServiceDeleteSubscriptionResponse;
class ISubscriptionServiceDeleteSubscriptionResponseDefaultTypeInternal;
extern ISubscriptionServiceDeleteSubscriptionResponseDefaultTypeInternal _ISubscriptionServiceDeleteSubscriptionResponse_default_instance_;
class ISubscriptionServiceGetRecordInfosRequest;
class ISubscriptionServiceGetRecordInfosRequestDefaultTypeInternal;
extern ISubscriptionServiceGetRecordInfosRequestDefaultTypeInternal _ISubscriptionServiceGetRecordInfosRequest_default_instance_;
class ISubscriptionServiceGetRecordInfosResponse;
class ISubscriptionServiceGetRecordInfosResponseDefaultTypeInternal;
extern ISubscriptionServiceGetRecordInfosResponseDefaultTypeInternal _ISubscriptionServiceGetRecordInfosResponse_default_instance_;
class ISubscriptionServiceGetTimeStampedVariableInfosRequest;
class ISubscriptionServiceGetTimeStampedVariableInfosRequestDefaultTypeInternal;
extern ISubscriptionServiceGetTimeStampedVariableInfosRequestDefaultTypeInternal _ISubscriptionServiceGetTimeStampedVariableInfosRequest_default_instance_;
class ISubscriptionServiceGetTimeStampedVariableInfosResponse;
class ISubscriptionServiceGetTimeStampedVariableInfosResponseDefaultTypeInternal;
extern ISubscriptionServiceGetTimeStampedVariableInfosResponseDefaultTypeInternal _ISubscriptionServiceGetTimeStampedVariableInfosResponse_default_instance_;
class ISubscriptionServiceGetVariableInfosRequest;
class ISubscriptionServiceGetVariableInfosRequestDefaultTypeInternal;
extern ISubscriptionServiceGetVariableInfosRequestDefaultTypeInternal _ISubscriptionServiceGetVariableInfosRequest_default_instance_;
class ISubscriptionServiceGetVariableInfosResponse;
class ISubscriptionServiceGetVariableInfosResponseDefaultTypeInternal;
extern ISubscriptionServiceGetVariableInfosResponseDefaultTypeInternal _ISubscriptionServiceGetVariableInfosResponse_default_instance_;
class ISubscriptionServiceReadRecordsRequest;
class ISubscriptionServiceReadRecordsRequestDefaultTypeInternal;
extern ISubscriptionServiceReadRecordsRequestDefaultTypeInternal _ISubscriptionServiceReadRecordsRequest_default_instance_;
class ISubscriptionServiceReadRecordsResponse;
class ISubscriptionServiceReadRecordsResponseDefaultTypeInternal;
extern ISubscriptionServiceReadRecordsResponseDefaultTypeInternal _ISubscriptionServiceReadRecordsResponse_default_instance_;
class ISubscriptionServiceReadTimeStampedValuesRequest;
class ISubscriptionServiceReadTimeStampedValuesRequestDefaultTypeInternal;
extern ISubscriptionServiceReadTimeStampedValuesRequestDefaultTypeInternal _ISubscriptionServiceReadTimeStampedValuesRequest_default_instance_;
class ISubscriptionServiceReadTimeStampedValuesResponse;
class ISubscriptionServiceReadTimeStampedValuesResponseDefaultTypeInternal;
extern ISubscriptionServiceReadTimeStampedValuesResponseDefaultTypeInternal _ISubscriptionServiceReadTimeStampedValuesResponse_default_instance_;
class ISubscriptionServiceReadValuesRequest;
class ISubscriptionServiceReadValuesRequestDefaultTypeInternal;
extern ISubscriptionServiceReadValuesRequestDefaultTypeInternal _ISubscriptionServiceReadValuesRequest_default_instance_;
class ISubscriptionServiceReadValuesResponse;
class ISubscriptionServiceReadValuesResponseDefaultTypeInternal;
extern ISubscriptionServiceReadValuesResponseDefaultTypeInternal _ISubscriptionServiceReadValuesResponse_default_instance_;
class ISubscriptionServiceRemoveVariableRequest;
class ISubscriptionServiceRemoveVariableRequestDefaultTypeInternal;
extern ISubscriptionServiceRemoveVariableRequestDefaultTypeInternal _ISubscriptionServiceRemoveVariableRequest_default_instance_;
class ISubscriptionServiceRemoveVariableResponse;
class ISubscriptionServiceRemoveVariableResponseDefaultTypeInternal;
extern ISubscriptionServiceRemoveVariableResponseDefaultTypeInternal _ISubscriptionServiceRemoveVariableResponse_default_instance_;
class ISubscriptionServiceResubscribeRequest;
class ISubscriptionServiceResubscribeRequestDefaultTypeInternal;
extern ISubscriptionServiceResubscribeRequestDefaultTypeInternal _ISubscriptionServiceResubscribeRequest_default_instance_;
class ISubscriptionServiceResubscribeResponse;
class ISubscriptionServiceResubscribeResponseDefaultTypeInternal;
extern ISubscriptionServiceResubscribeResponseDefaultTypeInternal _ISubscriptionServiceResubscribeResponse_default_instance_;
class ISubscriptionServiceSubscribeRequest;
class ISubscriptionServiceSubscribeRequestDefaultTypeInternal;
extern ISubscriptionServiceSubscribeRequestDefaultTypeInternal _ISubscriptionServiceSubscribeRequest_default_instance_;
class ISubscriptionServiceSubscribeResponse;
class ISubscriptionServiceSubscribeResponseDefaultTypeInternal;
extern ISubscriptionServiceSubscribeResponseDefaultTypeInternal _ISubscriptionServiceSubscribeResponse_default_instance_;
class ISubscriptionServiceUnsubscribeRequest;
class ISubscriptionServiceUnsubscribeRequestDefaultTypeInternal;
extern ISubscriptionServiceUnsubscribeRequestDefaultTypeInternal _ISubscriptionServiceUnsubscribeRequest_default_instance_;
class ISubscriptionServiceUnsubscribeResponse;
class ISubscriptionServiceUnsubscribeResponseDefaultTypeInternal;
extern ISubscriptionServiceUnsubscribeResponseDefaultTypeInternal _ISubscriptionServiceUnsubscribeResponse_default_instance_;
}  // namespace Grpc
}  // namespace Services
}  // namespace Gds
}  // namespace Plc
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeResponse>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeRequest* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeRequest>(Arena*);
template<> ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeResponse* Arena::CreateMaybeMessage<::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Arp {
namespace Plc {
namespace Gds {
namespace Services {
namespace Grpc {

// ===================================================================

class ISubscriptionServiceCreateSubscriptionRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest) */ {
 public:
  inline ISubscriptionServiceCreateSubscriptionRequest() : ISubscriptionServiceCreateSubscriptionRequest(nullptr) {}
  virtual ~ISubscriptionServiceCreateSubscriptionRequest();

  ISubscriptionServiceCreateSubscriptionRequest(const ISubscriptionServiceCreateSubscriptionRequest& from);
  ISubscriptionServiceCreateSubscriptionRequest(ISubscriptionServiceCreateSubscriptionRequest&& from) noexcept
    : ISubscriptionServiceCreateSubscriptionRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceCreateSubscriptionRequest& operator=(const ISubscriptionServiceCreateSubscriptionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceCreateSubscriptionRequest& operator=(ISubscriptionServiceCreateSubscriptionRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceCreateSubscriptionRequest& default_instance();

  static inline const ISubscriptionServiceCreateSubscriptionRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceCreateSubscriptionRequest*>(
               &_ISubscriptionServiceCreateSubscriptionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ISubscriptionServiceCreateSubscriptionRequest& a, ISubscriptionServiceCreateSubscriptionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceCreateSubscriptionRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceCreateSubscriptionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceCreateSubscriptionRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceCreateSubscriptionRequest>(nullptr);
  }

  ISubscriptionServiceCreateSubscriptionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceCreateSubscriptionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceCreateSubscriptionRequest& from);
  void MergeFrom(const ISubscriptionServiceCreateSubscriptionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceCreateSubscriptionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest";
  }
  protected:
  explicit ISubscriptionServiceCreateSubscriptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kKindFieldNumber = 1,
  };
  // .Arp.Plc.Gds.Services.Grpc.SubscriptionKind kind = 1;
  void clear_kind();
  ::Arp::Plc::Gds::Services::Grpc::SubscriptionKind kind() const;
  void set_kind(::Arp::Plc::Gds::Services::Grpc::SubscriptionKind value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::SubscriptionKind _internal_kind() const;
  void _internal_set_kind(::Arp::Plc::Gds::Services::Grpc::SubscriptionKind value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int kind_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceCreateRecordingSubscriptionRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest) */ {
 public:
  inline ISubscriptionServiceCreateRecordingSubscriptionRequest() : ISubscriptionServiceCreateRecordingSubscriptionRequest(nullptr) {}
  virtual ~ISubscriptionServiceCreateRecordingSubscriptionRequest();

  ISubscriptionServiceCreateRecordingSubscriptionRequest(const ISubscriptionServiceCreateRecordingSubscriptionRequest& from);
  ISubscriptionServiceCreateRecordingSubscriptionRequest(ISubscriptionServiceCreateRecordingSubscriptionRequest&& from) noexcept
    : ISubscriptionServiceCreateRecordingSubscriptionRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceCreateRecordingSubscriptionRequest& operator=(const ISubscriptionServiceCreateRecordingSubscriptionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceCreateRecordingSubscriptionRequest& operator=(ISubscriptionServiceCreateRecordingSubscriptionRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceCreateRecordingSubscriptionRequest& default_instance();

  static inline const ISubscriptionServiceCreateRecordingSubscriptionRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceCreateRecordingSubscriptionRequest*>(
               &_ISubscriptionServiceCreateRecordingSubscriptionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ISubscriptionServiceCreateRecordingSubscriptionRequest& a, ISubscriptionServiceCreateRecordingSubscriptionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceCreateRecordingSubscriptionRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceCreateRecordingSubscriptionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceCreateRecordingSubscriptionRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceCreateRecordingSubscriptionRequest>(nullptr);
  }

  ISubscriptionServiceCreateRecordingSubscriptionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceCreateRecordingSubscriptionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceCreateRecordingSubscriptionRequest& from);
  void MergeFrom(const ISubscriptionServiceCreateRecordingSubscriptionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceCreateRecordingSubscriptionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest";
  }
  protected:
  explicit ISubscriptionServiceCreateRecordingSubscriptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecordCountFieldNumber = 1,
  };
  // int32 recordCount = 1;
  void clear_recordcount();
  ::PROTOBUF_NAMESPACE_ID::int32 recordcount() const;
  void set_recordcount(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_recordcount() const;
  void _internal_set_recordcount(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 recordcount_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceAddVariableRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest) */ {
 public:
  inline ISubscriptionServiceAddVariableRequest() : ISubscriptionServiceAddVariableRequest(nullptr) {}
  virtual ~ISubscriptionServiceAddVariableRequest();

  ISubscriptionServiceAddVariableRequest(const ISubscriptionServiceAddVariableRequest& from);
  ISubscriptionServiceAddVariableRequest(ISubscriptionServiceAddVariableRequest&& from) noexcept
    : ISubscriptionServiceAddVariableRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceAddVariableRequest& operator=(const ISubscriptionServiceAddVariableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceAddVariableRequest& operator=(ISubscriptionServiceAddVariableRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceAddVariableRequest& default_instance();

  static inline const ISubscriptionServiceAddVariableRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceAddVariableRequest*>(
               &_ISubscriptionServiceAddVariableRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ISubscriptionServiceAddVariableRequest& a, ISubscriptionServiceAddVariableRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceAddVariableRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceAddVariableRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceAddVariableRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceAddVariableRequest>(nullptr);
  }

  ISubscriptionServiceAddVariableRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceAddVariableRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceAddVariableRequest& from);
  void MergeFrom(const ISubscriptionServiceAddVariableRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceAddVariableRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest";
  }
  protected:
  explicit ISubscriptionServiceAddVariableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableNameFieldNumber = 2,
    kSubscriptionIdFieldNumber = 1,
  };
  // string variableName = 2;
  void clear_variablename();
  const std::string& variablename() const;
  void set_variablename(const std::string& value);
  void set_variablename(std::string&& value);
  void set_variablename(const char* value);
  void set_variablename(const char* value, size_t size);
  std::string* mutable_variablename();
  std::string* release_variablename();
  void set_allocated_variablename(std::string* variablename);
  private:
  const std::string& _internal_variablename() const;
  void _internal_set_variablename(const std::string& value);
  std::string* _internal_mutable_variablename();
  public:

  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr variablename_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceAddVariablesRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest) */ {
 public:
  inline ISubscriptionServiceAddVariablesRequest() : ISubscriptionServiceAddVariablesRequest(nullptr) {}
  virtual ~ISubscriptionServiceAddVariablesRequest();

  ISubscriptionServiceAddVariablesRequest(const ISubscriptionServiceAddVariablesRequest& from);
  ISubscriptionServiceAddVariablesRequest(ISubscriptionServiceAddVariablesRequest&& from) noexcept
    : ISubscriptionServiceAddVariablesRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceAddVariablesRequest& operator=(const ISubscriptionServiceAddVariablesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceAddVariablesRequest& operator=(ISubscriptionServiceAddVariablesRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceAddVariablesRequest& default_instance();

  static inline const ISubscriptionServiceAddVariablesRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceAddVariablesRequest*>(
               &_ISubscriptionServiceAddVariablesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ISubscriptionServiceAddVariablesRequest& a, ISubscriptionServiceAddVariablesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceAddVariablesRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceAddVariablesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceAddVariablesRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceAddVariablesRequest>(nullptr);
  }

  ISubscriptionServiceAddVariablesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceAddVariablesRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceAddVariablesRequest& from);
  void MergeFrom(const ISubscriptionServiceAddVariablesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceAddVariablesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest";
  }
  protected:
  explicit ISubscriptionServiceAddVariablesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableNamesFieldNumber = 2,
    kSubscriptionIdFieldNumber = 1,
  };
  // repeated string variableNames = 2;
  int variablenames_size() const;
  private:
  int _internal_variablenames_size() const;
  public:
  void clear_variablenames();
  const std::string& variablenames(int index) const;
  std::string* mutable_variablenames(int index);
  void set_variablenames(int index, const std::string& value);
  void set_variablenames(int index, std::string&& value);
  void set_variablenames(int index, const char* value);
  void set_variablenames(int index, const char* value, size_t size);
  std::string* add_variablenames();
  void add_variablenames(const std::string& value);
  void add_variablenames(std::string&& value);
  void add_variablenames(const char* value);
  void add_variablenames(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& variablenames() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_variablenames();
  private:
  const std::string& _internal_variablenames(int index) const;
  std::string* _internal_add_variablenames();
  public:

  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> variablenames_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceRemoveVariableRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest) */ {
 public:
  inline ISubscriptionServiceRemoveVariableRequest() : ISubscriptionServiceRemoveVariableRequest(nullptr) {}
  virtual ~ISubscriptionServiceRemoveVariableRequest();

  ISubscriptionServiceRemoveVariableRequest(const ISubscriptionServiceRemoveVariableRequest& from);
  ISubscriptionServiceRemoveVariableRequest(ISubscriptionServiceRemoveVariableRequest&& from) noexcept
    : ISubscriptionServiceRemoveVariableRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceRemoveVariableRequest& operator=(const ISubscriptionServiceRemoveVariableRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceRemoveVariableRequest& operator=(ISubscriptionServiceRemoveVariableRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceRemoveVariableRequest& default_instance();

  static inline const ISubscriptionServiceRemoveVariableRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceRemoveVariableRequest*>(
               &_ISubscriptionServiceRemoveVariableRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ISubscriptionServiceRemoveVariableRequest& a, ISubscriptionServiceRemoveVariableRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceRemoveVariableRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceRemoveVariableRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceRemoveVariableRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceRemoveVariableRequest>(nullptr);
  }

  ISubscriptionServiceRemoveVariableRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceRemoveVariableRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceRemoveVariableRequest& from);
  void MergeFrom(const ISubscriptionServiceRemoveVariableRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceRemoveVariableRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest";
  }
  protected:
  explicit ISubscriptionServiceRemoveVariableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableNameFieldNumber = 2,
    kSubscriptionIdFieldNumber = 1,
  };
  // string variableName = 2;
  void clear_variablename();
  const std::string& variablename() const;
  void set_variablename(const std::string& value);
  void set_variablename(std::string&& value);
  void set_variablename(const char* value);
  void set_variablename(const char* value, size_t size);
  std::string* mutable_variablename();
  std::string* release_variablename();
  void set_allocated_variablename(std::string* variablename);
  private:
  const std::string& _internal_variablename() const;
  void _internal_set_variablename(const std::string& value);
  std::string* _internal_mutable_variablename();
  public:

  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr variablename_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceSubscribeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest) */ {
 public:
  inline ISubscriptionServiceSubscribeRequest() : ISubscriptionServiceSubscribeRequest(nullptr) {}
  virtual ~ISubscriptionServiceSubscribeRequest();

  ISubscriptionServiceSubscribeRequest(const ISubscriptionServiceSubscribeRequest& from);
  ISubscriptionServiceSubscribeRequest(ISubscriptionServiceSubscribeRequest&& from) noexcept
    : ISubscriptionServiceSubscribeRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceSubscribeRequest& operator=(const ISubscriptionServiceSubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceSubscribeRequest& operator=(ISubscriptionServiceSubscribeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceSubscribeRequest& default_instance();

  static inline const ISubscriptionServiceSubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceSubscribeRequest*>(
               &_ISubscriptionServiceSubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ISubscriptionServiceSubscribeRequest& a, ISubscriptionServiceSubscribeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceSubscribeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceSubscribeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceSubscribeRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceSubscribeRequest>(nullptr);
  }

  ISubscriptionServiceSubscribeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceSubscribeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceSubscribeRequest& from);
  void MergeFrom(const ISubscriptionServiceSubscribeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceSubscribeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest";
  }
  protected:
  explicit ISubscriptionServiceSubscribeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSampleRateFieldNumber = 2,
    kSubscriptionIdFieldNumber = 1,
  };
  // uint64 sampleRate = 2;
  void clear_samplerate();
  ::PROTOBUF_NAMESPACE_ID::uint64 samplerate() const;
  void set_samplerate(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samplerate() const;
  void _internal_set_samplerate(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 samplerate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceResubscribeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest) */ {
 public:
  inline ISubscriptionServiceResubscribeRequest() : ISubscriptionServiceResubscribeRequest(nullptr) {}
  virtual ~ISubscriptionServiceResubscribeRequest();

  ISubscriptionServiceResubscribeRequest(const ISubscriptionServiceResubscribeRequest& from);
  ISubscriptionServiceResubscribeRequest(ISubscriptionServiceResubscribeRequest&& from) noexcept
    : ISubscriptionServiceResubscribeRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceResubscribeRequest& operator=(const ISubscriptionServiceResubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceResubscribeRequest& operator=(ISubscriptionServiceResubscribeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceResubscribeRequest& default_instance();

  static inline const ISubscriptionServiceResubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceResubscribeRequest*>(
               &_ISubscriptionServiceResubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ISubscriptionServiceResubscribeRequest& a, ISubscriptionServiceResubscribeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceResubscribeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceResubscribeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceResubscribeRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceResubscribeRequest>(nullptr);
  }

  ISubscriptionServiceResubscribeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceResubscribeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceResubscribeRequest& from);
  void MergeFrom(const ISubscriptionServiceResubscribeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceResubscribeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest";
  }
  protected:
  explicit ISubscriptionServiceResubscribeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSampleRateFieldNumber = 2,
    kSubscriptionIdFieldNumber = 1,
  };
  // uint64 sampleRate = 2;
  void clear_samplerate();
  ::PROTOBUF_NAMESPACE_ID::uint64 samplerate() const;
  void set_samplerate(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_samplerate() const;
  void _internal_set_samplerate(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 samplerate_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceUnsubscribeRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest) */ {
 public:
  inline ISubscriptionServiceUnsubscribeRequest() : ISubscriptionServiceUnsubscribeRequest(nullptr) {}
  virtual ~ISubscriptionServiceUnsubscribeRequest();

  ISubscriptionServiceUnsubscribeRequest(const ISubscriptionServiceUnsubscribeRequest& from);
  ISubscriptionServiceUnsubscribeRequest(ISubscriptionServiceUnsubscribeRequest&& from) noexcept
    : ISubscriptionServiceUnsubscribeRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceUnsubscribeRequest& operator=(const ISubscriptionServiceUnsubscribeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceUnsubscribeRequest& operator=(ISubscriptionServiceUnsubscribeRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceUnsubscribeRequest& default_instance();

  static inline const ISubscriptionServiceUnsubscribeRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceUnsubscribeRequest*>(
               &_ISubscriptionServiceUnsubscribeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ISubscriptionServiceUnsubscribeRequest& a, ISubscriptionServiceUnsubscribeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceUnsubscribeRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceUnsubscribeRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceUnsubscribeRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceUnsubscribeRequest>(nullptr);
  }

  ISubscriptionServiceUnsubscribeRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceUnsubscribeRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceUnsubscribeRequest& from);
  void MergeFrom(const ISubscriptionServiceUnsubscribeRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceUnsubscribeRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest";
  }
  protected:
  explicit ISubscriptionServiceUnsubscribeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriptionIdFieldNumber = 1,
  };
  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceDeleteSubscriptionRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest) */ {
 public:
  inline ISubscriptionServiceDeleteSubscriptionRequest() : ISubscriptionServiceDeleteSubscriptionRequest(nullptr) {}
  virtual ~ISubscriptionServiceDeleteSubscriptionRequest();

  ISubscriptionServiceDeleteSubscriptionRequest(const ISubscriptionServiceDeleteSubscriptionRequest& from);
  ISubscriptionServiceDeleteSubscriptionRequest(ISubscriptionServiceDeleteSubscriptionRequest&& from) noexcept
    : ISubscriptionServiceDeleteSubscriptionRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceDeleteSubscriptionRequest& operator=(const ISubscriptionServiceDeleteSubscriptionRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceDeleteSubscriptionRequest& operator=(ISubscriptionServiceDeleteSubscriptionRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceDeleteSubscriptionRequest& default_instance();

  static inline const ISubscriptionServiceDeleteSubscriptionRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceDeleteSubscriptionRequest*>(
               &_ISubscriptionServiceDeleteSubscriptionRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ISubscriptionServiceDeleteSubscriptionRequest& a, ISubscriptionServiceDeleteSubscriptionRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceDeleteSubscriptionRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceDeleteSubscriptionRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceDeleteSubscriptionRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceDeleteSubscriptionRequest>(nullptr);
  }

  ISubscriptionServiceDeleteSubscriptionRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceDeleteSubscriptionRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceDeleteSubscriptionRequest& from);
  void MergeFrom(const ISubscriptionServiceDeleteSubscriptionRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceDeleteSubscriptionRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest";
  }
  protected:
  explicit ISubscriptionServiceDeleteSubscriptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriptionIdFieldNumber = 1,
  };
  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceGetVariableInfosRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest) */ {
 public:
  inline ISubscriptionServiceGetVariableInfosRequest() : ISubscriptionServiceGetVariableInfosRequest(nullptr) {}
  virtual ~ISubscriptionServiceGetVariableInfosRequest();

  ISubscriptionServiceGetVariableInfosRequest(const ISubscriptionServiceGetVariableInfosRequest& from);
  ISubscriptionServiceGetVariableInfosRequest(ISubscriptionServiceGetVariableInfosRequest&& from) noexcept
    : ISubscriptionServiceGetVariableInfosRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceGetVariableInfosRequest& operator=(const ISubscriptionServiceGetVariableInfosRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceGetVariableInfosRequest& operator=(ISubscriptionServiceGetVariableInfosRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceGetVariableInfosRequest& default_instance();

  static inline const ISubscriptionServiceGetVariableInfosRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceGetVariableInfosRequest*>(
               &_ISubscriptionServiceGetVariableInfosRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ISubscriptionServiceGetVariableInfosRequest& a, ISubscriptionServiceGetVariableInfosRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceGetVariableInfosRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceGetVariableInfosRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceGetVariableInfosRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceGetVariableInfosRequest>(nullptr);
  }

  ISubscriptionServiceGetVariableInfosRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceGetVariableInfosRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceGetVariableInfosRequest& from);
  void MergeFrom(const ISubscriptionServiceGetVariableInfosRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceGetVariableInfosRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest";
  }
  protected:
  explicit ISubscriptionServiceGetVariableInfosRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriptionIdFieldNumber = 1,
  };
  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceGetTimeStampedVariableInfosRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest) */ {
 public:
  inline ISubscriptionServiceGetTimeStampedVariableInfosRequest() : ISubscriptionServiceGetTimeStampedVariableInfosRequest(nullptr) {}
  virtual ~ISubscriptionServiceGetTimeStampedVariableInfosRequest();

  ISubscriptionServiceGetTimeStampedVariableInfosRequest(const ISubscriptionServiceGetTimeStampedVariableInfosRequest& from);
  ISubscriptionServiceGetTimeStampedVariableInfosRequest(ISubscriptionServiceGetTimeStampedVariableInfosRequest&& from) noexcept
    : ISubscriptionServiceGetTimeStampedVariableInfosRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceGetTimeStampedVariableInfosRequest& operator=(const ISubscriptionServiceGetTimeStampedVariableInfosRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceGetTimeStampedVariableInfosRequest& operator=(ISubscriptionServiceGetTimeStampedVariableInfosRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceGetTimeStampedVariableInfosRequest& default_instance();

  static inline const ISubscriptionServiceGetTimeStampedVariableInfosRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceGetTimeStampedVariableInfosRequest*>(
               &_ISubscriptionServiceGetTimeStampedVariableInfosRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ISubscriptionServiceGetTimeStampedVariableInfosRequest& a, ISubscriptionServiceGetTimeStampedVariableInfosRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceGetTimeStampedVariableInfosRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceGetTimeStampedVariableInfosRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceGetTimeStampedVariableInfosRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceGetTimeStampedVariableInfosRequest>(nullptr);
  }

  ISubscriptionServiceGetTimeStampedVariableInfosRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceGetTimeStampedVariableInfosRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceGetTimeStampedVariableInfosRequest& from);
  void MergeFrom(const ISubscriptionServiceGetTimeStampedVariableInfosRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceGetTimeStampedVariableInfosRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest";
  }
  protected:
  explicit ISubscriptionServiceGetTimeStampedVariableInfosRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriptionIdFieldNumber = 1,
  };
  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceGetRecordInfosRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest) */ {
 public:
  inline ISubscriptionServiceGetRecordInfosRequest() : ISubscriptionServiceGetRecordInfosRequest(nullptr) {}
  virtual ~ISubscriptionServiceGetRecordInfosRequest();

  ISubscriptionServiceGetRecordInfosRequest(const ISubscriptionServiceGetRecordInfosRequest& from);
  ISubscriptionServiceGetRecordInfosRequest(ISubscriptionServiceGetRecordInfosRequest&& from) noexcept
    : ISubscriptionServiceGetRecordInfosRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceGetRecordInfosRequest& operator=(const ISubscriptionServiceGetRecordInfosRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceGetRecordInfosRequest& operator=(ISubscriptionServiceGetRecordInfosRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceGetRecordInfosRequest& default_instance();

  static inline const ISubscriptionServiceGetRecordInfosRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceGetRecordInfosRequest*>(
               &_ISubscriptionServiceGetRecordInfosRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ISubscriptionServiceGetRecordInfosRequest& a, ISubscriptionServiceGetRecordInfosRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceGetRecordInfosRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceGetRecordInfosRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceGetRecordInfosRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceGetRecordInfosRequest>(nullptr);
  }

  ISubscriptionServiceGetRecordInfosRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceGetRecordInfosRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceGetRecordInfosRequest& from);
  void MergeFrom(const ISubscriptionServiceGetRecordInfosRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceGetRecordInfosRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest";
  }
  protected:
  explicit ISubscriptionServiceGetRecordInfosRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriptionIdFieldNumber = 1,
  };
  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceReadValuesRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest) */ {
 public:
  inline ISubscriptionServiceReadValuesRequest() : ISubscriptionServiceReadValuesRequest(nullptr) {}
  virtual ~ISubscriptionServiceReadValuesRequest();

  ISubscriptionServiceReadValuesRequest(const ISubscriptionServiceReadValuesRequest& from);
  ISubscriptionServiceReadValuesRequest(ISubscriptionServiceReadValuesRequest&& from) noexcept
    : ISubscriptionServiceReadValuesRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceReadValuesRequest& operator=(const ISubscriptionServiceReadValuesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceReadValuesRequest& operator=(ISubscriptionServiceReadValuesRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceReadValuesRequest& default_instance();

  static inline const ISubscriptionServiceReadValuesRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceReadValuesRequest*>(
               &_ISubscriptionServiceReadValuesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ISubscriptionServiceReadValuesRequest& a, ISubscriptionServiceReadValuesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceReadValuesRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceReadValuesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceReadValuesRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceReadValuesRequest>(nullptr);
  }

  ISubscriptionServiceReadValuesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceReadValuesRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceReadValuesRequest& from);
  void MergeFrom(const ISubscriptionServiceReadValuesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceReadValuesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest";
  }
  protected:
  explicit ISubscriptionServiceReadValuesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriptionIdFieldNumber = 1,
  };
  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceReadTimeStampedValuesRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest) */ {
 public:
  inline ISubscriptionServiceReadTimeStampedValuesRequest() : ISubscriptionServiceReadTimeStampedValuesRequest(nullptr) {}
  virtual ~ISubscriptionServiceReadTimeStampedValuesRequest();

  ISubscriptionServiceReadTimeStampedValuesRequest(const ISubscriptionServiceReadTimeStampedValuesRequest& from);
  ISubscriptionServiceReadTimeStampedValuesRequest(ISubscriptionServiceReadTimeStampedValuesRequest&& from) noexcept
    : ISubscriptionServiceReadTimeStampedValuesRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceReadTimeStampedValuesRequest& operator=(const ISubscriptionServiceReadTimeStampedValuesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceReadTimeStampedValuesRequest& operator=(ISubscriptionServiceReadTimeStampedValuesRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceReadTimeStampedValuesRequest& default_instance();

  static inline const ISubscriptionServiceReadTimeStampedValuesRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceReadTimeStampedValuesRequest*>(
               &_ISubscriptionServiceReadTimeStampedValuesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(ISubscriptionServiceReadTimeStampedValuesRequest& a, ISubscriptionServiceReadTimeStampedValuesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceReadTimeStampedValuesRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceReadTimeStampedValuesRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceReadTimeStampedValuesRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceReadTimeStampedValuesRequest>(nullptr);
  }

  ISubscriptionServiceReadTimeStampedValuesRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceReadTimeStampedValuesRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceReadTimeStampedValuesRequest& from);
  void MergeFrom(const ISubscriptionServiceReadTimeStampedValuesRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceReadTimeStampedValuesRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest";
  }
  protected:
  explicit ISubscriptionServiceReadTimeStampedValuesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriptionIdFieldNumber = 1,
  };
  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceReadRecordsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest) */ {
 public:
  inline ISubscriptionServiceReadRecordsRequest() : ISubscriptionServiceReadRecordsRequest(nullptr) {}
  virtual ~ISubscriptionServiceReadRecordsRequest();

  ISubscriptionServiceReadRecordsRequest(const ISubscriptionServiceReadRecordsRequest& from);
  ISubscriptionServiceReadRecordsRequest(ISubscriptionServiceReadRecordsRequest&& from) noexcept
    : ISubscriptionServiceReadRecordsRequest() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceReadRecordsRequest& operator=(const ISubscriptionServiceReadRecordsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceReadRecordsRequest& operator=(ISubscriptionServiceReadRecordsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceReadRecordsRequest& default_instance();

  static inline const ISubscriptionServiceReadRecordsRequest* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceReadRecordsRequest*>(
               &_ISubscriptionServiceReadRecordsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(ISubscriptionServiceReadRecordsRequest& a, ISubscriptionServiceReadRecordsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceReadRecordsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceReadRecordsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceReadRecordsRequest* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceReadRecordsRequest>(nullptr);
  }

  ISubscriptionServiceReadRecordsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceReadRecordsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceReadRecordsRequest& from);
  void MergeFrom(const ISubscriptionServiceReadRecordsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceReadRecordsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest";
  }
  protected:
  explicit ISubscriptionServiceReadRecordsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSubscriptionIdFieldNumber = 1,
    kCountFieldNumber = 2,
  };
  // uint32 subscriptionId = 1;
  void clear_subscriptionid();
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid() const;
  void set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_subscriptionid() const;
  void _internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // int32 count = 2;
  void clear_count();
  ::PROTOBUF_NAMESPACE_ID::int32 count() const;
  void set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_count() const;
  void _internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 subscriptionid_;
  ::PROTOBUF_NAMESPACE_ID::int32 count_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceCreateSubscriptionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse) */ {
 public:
  inline ISubscriptionServiceCreateSubscriptionResponse() : ISubscriptionServiceCreateSubscriptionResponse(nullptr) {}
  virtual ~ISubscriptionServiceCreateSubscriptionResponse();

  ISubscriptionServiceCreateSubscriptionResponse(const ISubscriptionServiceCreateSubscriptionResponse& from);
  ISubscriptionServiceCreateSubscriptionResponse(ISubscriptionServiceCreateSubscriptionResponse&& from) noexcept
    : ISubscriptionServiceCreateSubscriptionResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceCreateSubscriptionResponse& operator=(const ISubscriptionServiceCreateSubscriptionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceCreateSubscriptionResponse& operator=(ISubscriptionServiceCreateSubscriptionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceCreateSubscriptionResponse& default_instance();

  static inline const ISubscriptionServiceCreateSubscriptionResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceCreateSubscriptionResponse*>(
               &_ISubscriptionServiceCreateSubscriptionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(ISubscriptionServiceCreateSubscriptionResponse& a, ISubscriptionServiceCreateSubscriptionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceCreateSubscriptionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceCreateSubscriptionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceCreateSubscriptionResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceCreateSubscriptionResponse>(nullptr);
  }

  ISubscriptionServiceCreateSubscriptionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceCreateSubscriptionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceCreateSubscriptionResponse& from);
  void MergeFrom(const ISubscriptionServiceCreateSubscriptionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceCreateSubscriptionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse";
  }
  protected:
  explicit ISubscriptionServiceCreateSubscriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // uint32 _ReturnValue = 1;
  void clear__returnvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 _returnvalue() const;
  void set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal__returnvalue() const;
  void _internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceCreateRecordingSubscriptionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse) */ {
 public:
  inline ISubscriptionServiceCreateRecordingSubscriptionResponse() : ISubscriptionServiceCreateRecordingSubscriptionResponse(nullptr) {}
  virtual ~ISubscriptionServiceCreateRecordingSubscriptionResponse();

  ISubscriptionServiceCreateRecordingSubscriptionResponse(const ISubscriptionServiceCreateRecordingSubscriptionResponse& from);
  ISubscriptionServiceCreateRecordingSubscriptionResponse(ISubscriptionServiceCreateRecordingSubscriptionResponse&& from) noexcept
    : ISubscriptionServiceCreateRecordingSubscriptionResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceCreateRecordingSubscriptionResponse& operator=(const ISubscriptionServiceCreateRecordingSubscriptionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceCreateRecordingSubscriptionResponse& operator=(ISubscriptionServiceCreateRecordingSubscriptionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceCreateRecordingSubscriptionResponse& default_instance();

  static inline const ISubscriptionServiceCreateRecordingSubscriptionResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceCreateRecordingSubscriptionResponse*>(
               &_ISubscriptionServiceCreateRecordingSubscriptionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(ISubscriptionServiceCreateRecordingSubscriptionResponse& a, ISubscriptionServiceCreateRecordingSubscriptionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceCreateRecordingSubscriptionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceCreateRecordingSubscriptionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceCreateRecordingSubscriptionResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceCreateRecordingSubscriptionResponse>(nullptr);
  }

  ISubscriptionServiceCreateRecordingSubscriptionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceCreateRecordingSubscriptionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceCreateRecordingSubscriptionResponse& from);
  void MergeFrom(const ISubscriptionServiceCreateRecordingSubscriptionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceCreateRecordingSubscriptionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse";
  }
  protected:
  explicit ISubscriptionServiceCreateRecordingSubscriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // uint32 _ReturnValue = 1;
  void clear__returnvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 _returnvalue() const;
  void set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal__returnvalue() const;
  void _internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceAddVariableResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse) */ {
 public:
  inline ISubscriptionServiceAddVariableResponse() : ISubscriptionServiceAddVariableResponse(nullptr) {}
  virtual ~ISubscriptionServiceAddVariableResponse();

  ISubscriptionServiceAddVariableResponse(const ISubscriptionServiceAddVariableResponse& from);
  ISubscriptionServiceAddVariableResponse(ISubscriptionServiceAddVariableResponse&& from) noexcept
    : ISubscriptionServiceAddVariableResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceAddVariableResponse& operator=(const ISubscriptionServiceAddVariableResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceAddVariableResponse& operator=(ISubscriptionServiceAddVariableResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceAddVariableResponse& default_instance();

  static inline const ISubscriptionServiceAddVariableResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceAddVariableResponse*>(
               &_ISubscriptionServiceAddVariableResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(ISubscriptionServiceAddVariableResponse& a, ISubscriptionServiceAddVariableResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceAddVariableResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceAddVariableResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceAddVariableResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceAddVariableResponse>(nullptr);
  }

  ISubscriptionServiceAddVariableResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceAddVariableResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceAddVariableResponse& from);
  void MergeFrom(const ISubscriptionServiceAddVariableResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceAddVariableResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse";
  }
  protected:
  explicit ISubscriptionServiceAddVariableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceAddVariablesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse) */ {
 public:
  inline ISubscriptionServiceAddVariablesResponse() : ISubscriptionServiceAddVariablesResponse(nullptr) {}
  virtual ~ISubscriptionServiceAddVariablesResponse();

  ISubscriptionServiceAddVariablesResponse(const ISubscriptionServiceAddVariablesResponse& from);
  ISubscriptionServiceAddVariablesResponse(ISubscriptionServiceAddVariablesResponse&& from) noexcept
    : ISubscriptionServiceAddVariablesResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceAddVariablesResponse& operator=(const ISubscriptionServiceAddVariablesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceAddVariablesResponse& operator=(ISubscriptionServiceAddVariablesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceAddVariablesResponse& default_instance();

  static inline const ISubscriptionServiceAddVariablesResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceAddVariablesResponse*>(
               &_ISubscriptionServiceAddVariablesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(ISubscriptionServiceAddVariablesResponse& a, ISubscriptionServiceAddVariablesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceAddVariablesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceAddVariablesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceAddVariablesResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceAddVariablesResponse>(nullptr);
  }

  ISubscriptionServiceAddVariablesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceAddVariablesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceAddVariablesResponse& from);
  void MergeFrom(const ISubscriptionServiceAddVariablesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceAddVariablesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse";
  }
  protected:
  explicit ISubscriptionServiceAddVariablesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // repeated .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  int _returnvalue_size() const;
  private:
  int _internal__returnvalue_size() const;
  public:
  void clear__returnvalue();
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue(int index) const;
  void _internal_add__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* _internal_mutable__returnvalue();
  public:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue(int index) const;
  void set__returnvalue(int index, ::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  void add__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>& _returnvalue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>* mutable__returnvalue();

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField<int> _returnvalue_;
  mutable std::atomic<int> __returnvalue_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceRemoveVariableResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse) */ {
 public:
  inline ISubscriptionServiceRemoveVariableResponse() : ISubscriptionServiceRemoveVariableResponse(nullptr) {}
  virtual ~ISubscriptionServiceRemoveVariableResponse();

  ISubscriptionServiceRemoveVariableResponse(const ISubscriptionServiceRemoveVariableResponse& from);
  ISubscriptionServiceRemoveVariableResponse(ISubscriptionServiceRemoveVariableResponse&& from) noexcept
    : ISubscriptionServiceRemoveVariableResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceRemoveVariableResponse& operator=(const ISubscriptionServiceRemoveVariableResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceRemoveVariableResponse& operator=(ISubscriptionServiceRemoveVariableResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceRemoveVariableResponse& default_instance();

  static inline const ISubscriptionServiceRemoveVariableResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceRemoveVariableResponse*>(
               &_ISubscriptionServiceRemoveVariableResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(ISubscriptionServiceRemoveVariableResponse& a, ISubscriptionServiceRemoveVariableResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceRemoveVariableResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceRemoveVariableResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceRemoveVariableResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceRemoveVariableResponse>(nullptr);
  }

  ISubscriptionServiceRemoveVariableResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceRemoveVariableResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceRemoveVariableResponse& from);
  void MergeFrom(const ISubscriptionServiceRemoveVariableResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceRemoveVariableResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse";
  }
  protected:
  explicit ISubscriptionServiceRemoveVariableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceSubscribeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse) */ {
 public:
  inline ISubscriptionServiceSubscribeResponse() : ISubscriptionServiceSubscribeResponse(nullptr) {}
  virtual ~ISubscriptionServiceSubscribeResponse();

  ISubscriptionServiceSubscribeResponse(const ISubscriptionServiceSubscribeResponse& from);
  ISubscriptionServiceSubscribeResponse(ISubscriptionServiceSubscribeResponse&& from) noexcept
    : ISubscriptionServiceSubscribeResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceSubscribeResponse& operator=(const ISubscriptionServiceSubscribeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceSubscribeResponse& operator=(ISubscriptionServiceSubscribeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceSubscribeResponse& default_instance();

  static inline const ISubscriptionServiceSubscribeResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceSubscribeResponse*>(
               &_ISubscriptionServiceSubscribeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(ISubscriptionServiceSubscribeResponse& a, ISubscriptionServiceSubscribeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceSubscribeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceSubscribeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceSubscribeResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceSubscribeResponse>(nullptr);
  }

  ISubscriptionServiceSubscribeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceSubscribeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceSubscribeResponse& from);
  void MergeFrom(const ISubscriptionServiceSubscribeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceSubscribeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse";
  }
  protected:
  explicit ISubscriptionServiceSubscribeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceResubscribeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse) */ {
 public:
  inline ISubscriptionServiceResubscribeResponse() : ISubscriptionServiceResubscribeResponse(nullptr) {}
  virtual ~ISubscriptionServiceResubscribeResponse();

  ISubscriptionServiceResubscribeResponse(const ISubscriptionServiceResubscribeResponse& from);
  ISubscriptionServiceResubscribeResponse(ISubscriptionServiceResubscribeResponse&& from) noexcept
    : ISubscriptionServiceResubscribeResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceResubscribeResponse& operator=(const ISubscriptionServiceResubscribeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceResubscribeResponse& operator=(ISubscriptionServiceResubscribeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceResubscribeResponse& default_instance();

  static inline const ISubscriptionServiceResubscribeResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceResubscribeResponse*>(
               &_ISubscriptionServiceResubscribeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(ISubscriptionServiceResubscribeResponse& a, ISubscriptionServiceResubscribeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceResubscribeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceResubscribeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceResubscribeResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceResubscribeResponse>(nullptr);
  }

  ISubscriptionServiceResubscribeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceResubscribeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceResubscribeResponse& from);
  void MergeFrom(const ISubscriptionServiceResubscribeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceResubscribeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse";
  }
  protected:
  explicit ISubscriptionServiceResubscribeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceUnsubscribeResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse) */ {
 public:
  inline ISubscriptionServiceUnsubscribeResponse() : ISubscriptionServiceUnsubscribeResponse(nullptr) {}
  virtual ~ISubscriptionServiceUnsubscribeResponse();

  ISubscriptionServiceUnsubscribeResponse(const ISubscriptionServiceUnsubscribeResponse& from);
  ISubscriptionServiceUnsubscribeResponse(ISubscriptionServiceUnsubscribeResponse&& from) noexcept
    : ISubscriptionServiceUnsubscribeResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceUnsubscribeResponse& operator=(const ISubscriptionServiceUnsubscribeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceUnsubscribeResponse& operator=(ISubscriptionServiceUnsubscribeResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceUnsubscribeResponse& default_instance();

  static inline const ISubscriptionServiceUnsubscribeResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceUnsubscribeResponse*>(
               &_ISubscriptionServiceUnsubscribeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(ISubscriptionServiceUnsubscribeResponse& a, ISubscriptionServiceUnsubscribeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceUnsubscribeResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceUnsubscribeResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceUnsubscribeResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceUnsubscribeResponse>(nullptr);
  }

  ISubscriptionServiceUnsubscribeResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceUnsubscribeResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceUnsubscribeResponse& from);
  void MergeFrom(const ISubscriptionServiceUnsubscribeResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceUnsubscribeResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse";
  }
  protected:
  explicit ISubscriptionServiceUnsubscribeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceDeleteSubscriptionResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse) */ {
 public:
  inline ISubscriptionServiceDeleteSubscriptionResponse() : ISubscriptionServiceDeleteSubscriptionResponse(nullptr) {}
  virtual ~ISubscriptionServiceDeleteSubscriptionResponse();

  ISubscriptionServiceDeleteSubscriptionResponse(const ISubscriptionServiceDeleteSubscriptionResponse& from);
  ISubscriptionServiceDeleteSubscriptionResponse(ISubscriptionServiceDeleteSubscriptionResponse&& from) noexcept
    : ISubscriptionServiceDeleteSubscriptionResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceDeleteSubscriptionResponse& operator=(const ISubscriptionServiceDeleteSubscriptionResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceDeleteSubscriptionResponse& operator=(ISubscriptionServiceDeleteSubscriptionResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceDeleteSubscriptionResponse& default_instance();

  static inline const ISubscriptionServiceDeleteSubscriptionResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceDeleteSubscriptionResponse*>(
               &_ISubscriptionServiceDeleteSubscriptionResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(ISubscriptionServiceDeleteSubscriptionResponse& a, ISubscriptionServiceDeleteSubscriptionResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceDeleteSubscriptionResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceDeleteSubscriptionResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceDeleteSubscriptionResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceDeleteSubscriptionResponse>(nullptr);
  }

  ISubscriptionServiceDeleteSubscriptionResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceDeleteSubscriptionResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceDeleteSubscriptionResponse& from);
  void MergeFrom(const ISubscriptionServiceDeleteSubscriptionResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceDeleteSubscriptionResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse";
  }
  protected:
  explicit ISubscriptionServiceDeleteSubscriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceGetVariableInfosResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse) */ {
 public:
  inline ISubscriptionServiceGetVariableInfosResponse() : ISubscriptionServiceGetVariableInfosResponse(nullptr) {}
  virtual ~ISubscriptionServiceGetVariableInfosResponse();

  ISubscriptionServiceGetVariableInfosResponse(const ISubscriptionServiceGetVariableInfosResponse& from);
  ISubscriptionServiceGetVariableInfosResponse(ISubscriptionServiceGetVariableInfosResponse&& from) noexcept
    : ISubscriptionServiceGetVariableInfosResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceGetVariableInfosResponse& operator=(const ISubscriptionServiceGetVariableInfosResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceGetVariableInfosResponse& operator=(ISubscriptionServiceGetVariableInfosResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceGetVariableInfosResponse& default_instance();

  static inline const ISubscriptionServiceGetVariableInfosResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceGetVariableInfosResponse*>(
               &_ISubscriptionServiceGetVariableInfosResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(ISubscriptionServiceGetVariableInfosResponse& a, ISubscriptionServiceGetVariableInfosResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceGetVariableInfosResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceGetVariableInfosResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceGetVariableInfosResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceGetVariableInfosResponse>(nullptr);
  }

  ISubscriptionServiceGetVariableInfosResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceGetVariableInfosResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceGetVariableInfosResponse& from);
  void MergeFrom(const ISubscriptionServiceGetVariableInfosResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceGetVariableInfosResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse";
  }
  protected:
  explicit ISubscriptionServiceGetVariableInfosResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableInfoFieldNumber = 2,
    kReturnValueFieldNumber = 1,
  };
  // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo variableInfo = 2;
  int variableinfo_size() const;
  private:
  int _internal_variableinfo_size() const;
  public:
  void clear_variableinfo();
  ::Arp::Plc::Gds::Services::Grpc::VariableInfo* mutable_variableinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >*
      mutable_variableinfo();
  private:
  const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& _internal_variableinfo(int index) const;
  ::Arp::Plc::Gds::Services::Grpc::VariableInfo* _internal_add_variableinfo();
  public:
  const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& variableinfo(int index) const;
  ::Arp::Plc::Gds::Services::Grpc::VariableInfo* add_variableinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >&
      variableinfo() const;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo > variableinfo_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceGetTimeStampedVariableInfosResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse) */ {
 public:
  inline ISubscriptionServiceGetTimeStampedVariableInfosResponse() : ISubscriptionServiceGetTimeStampedVariableInfosResponse(nullptr) {}
  virtual ~ISubscriptionServiceGetTimeStampedVariableInfosResponse();

  ISubscriptionServiceGetTimeStampedVariableInfosResponse(const ISubscriptionServiceGetTimeStampedVariableInfosResponse& from);
  ISubscriptionServiceGetTimeStampedVariableInfosResponse(ISubscriptionServiceGetTimeStampedVariableInfosResponse&& from) noexcept
    : ISubscriptionServiceGetTimeStampedVariableInfosResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceGetTimeStampedVariableInfosResponse& operator=(const ISubscriptionServiceGetTimeStampedVariableInfosResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceGetTimeStampedVariableInfosResponse& operator=(ISubscriptionServiceGetTimeStampedVariableInfosResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceGetTimeStampedVariableInfosResponse& default_instance();

  static inline const ISubscriptionServiceGetTimeStampedVariableInfosResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceGetTimeStampedVariableInfosResponse*>(
               &_ISubscriptionServiceGetTimeStampedVariableInfosResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(ISubscriptionServiceGetTimeStampedVariableInfosResponse& a, ISubscriptionServiceGetTimeStampedVariableInfosResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceGetTimeStampedVariableInfosResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceGetTimeStampedVariableInfosResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceGetTimeStampedVariableInfosResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceGetTimeStampedVariableInfosResponse>(nullptr);
  }

  ISubscriptionServiceGetTimeStampedVariableInfosResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceGetTimeStampedVariableInfosResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceGetTimeStampedVariableInfosResponse& from);
  void MergeFrom(const ISubscriptionServiceGetTimeStampedVariableInfosResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceGetTimeStampedVariableInfosResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse";
  }
  protected:
  explicit ISubscriptionServiceGetTimeStampedVariableInfosResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVariableInfoFieldNumber = 2,
    kReturnValueFieldNumber = 1,
  };
  // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo variableInfo = 2;
  int variableinfo_size() const;
  private:
  int _internal_variableinfo_size() const;
  public:
  void clear_variableinfo();
  ::Arp::Plc::Gds::Services::Grpc::VariableInfo* mutable_variableinfo(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >*
      mutable_variableinfo();
  private:
  const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& _internal_variableinfo(int index) const;
  ::Arp::Plc::Gds::Services::Grpc::VariableInfo* _internal_add_variableinfo();
  public:
  const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& variableinfo(int index) const;
  ::Arp::Plc::Gds::Services::Grpc::VariableInfo* add_variableinfo();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >&
      variableinfo() const;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo > variableinfo_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceGetRecordInfosResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse) */ {
 public:
  inline ISubscriptionServiceGetRecordInfosResponse() : ISubscriptionServiceGetRecordInfosResponse(nullptr) {}
  virtual ~ISubscriptionServiceGetRecordInfosResponse();

  ISubscriptionServiceGetRecordInfosResponse(const ISubscriptionServiceGetRecordInfosResponse& from);
  ISubscriptionServiceGetRecordInfosResponse(ISubscriptionServiceGetRecordInfosResponse&& from) noexcept
    : ISubscriptionServiceGetRecordInfosResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceGetRecordInfosResponse& operator=(const ISubscriptionServiceGetRecordInfosResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceGetRecordInfosResponse& operator=(ISubscriptionServiceGetRecordInfosResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceGetRecordInfosResponse& default_instance();

  static inline const ISubscriptionServiceGetRecordInfosResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceGetRecordInfosResponse*>(
               &_ISubscriptionServiceGetRecordInfosResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(ISubscriptionServiceGetRecordInfosResponse& a, ISubscriptionServiceGetRecordInfosResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceGetRecordInfosResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceGetRecordInfosResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceGetRecordInfosResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceGetRecordInfosResponse>(nullptr);
  }

  ISubscriptionServiceGetRecordInfosResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceGetRecordInfosResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceGetRecordInfosResponse& from);
  void MergeFrom(const ISubscriptionServiceGetRecordInfosResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceGetRecordInfosResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse";
  }
  protected:
  explicit ISubscriptionServiceGetRecordInfosResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecordInfosFieldNumber = 2,
    kReturnValueFieldNumber = 1,
  };
  // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo recordInfos = 2;
  int recordinfos_size() const;
  private:
  int _internal_recordinfos_size() const;
  public:
  void clear_recordinfos();
  ::Arp::Plc::Gds::Services::Grpc::VariableInfo* mutable_recordinfos(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >*
      mutable_recordinfos();
  private:
  const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& _internal_recordinfos(int index) const;
  ::Arp::Plc::Gds::Services::Grpc::VariableInfo* _internal_add_recordinfos();
  public:
  const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& recordinfos(int index) const;
  ::Arp::Plc::Gds::Services::Grpc::VariableInfo* add_recordinfos();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >&
      recordinfos() const;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo > recordinfos_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceReadValuesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse) */ {
 public:
  inline ISubscriptionServiceReadValuesResponse() : ISubscriptionServiceReadValuesResponse(nullptr) {}
  virtual ~ISubscriptionServiceReadValuesResponse();

  ISubscriptionServiceReadValuesResponse(const ISubscriptionServiceReadValuesResponse& from);
  ISubscriptionServiceReadValuesResponse(ISubscriptionServiceReadValuesResponse&& from) noexcept
    : ISubscriptionServiceReadValuesResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceReadValuesResponse& operator=(const ISubscriptionServiceReadValuesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceReadValuesResponse& operator=(ISubscriptionServiceReadValuesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceReadValuesResponse& default_instance();

  static inline const ISubscriptionServiceReadValuesResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceReadValuesResponse*>(
               &_ISubscriptionServiceReadValuesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(ISubscriptionServiceReadValuesResponse& a, ISubscriptionServiceReadValuesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceReadValuesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceReadValuesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceReadValuesResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceReadValuesResponse>(nullptr);
  }

  ISubscriptionServiceReadValuesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceReadValuesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceReadValuesResponse& from);
  void MergeFrom(const ISubscriptionServiceReadValuesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceReadValuesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse";
  }
  protected:
  explicit ISubscriptionServiceReadValuesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 2,
    kReturnValueFieldNumber = 1,
  };
  // repeated .Arp.Type.Grpc.ObjectType values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  ::Arp::Type::Grpc::ObjectType* mutable_values(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
      mutable_values();
  private:
  const ::Arp::Type::Grpc::ObjectType& _internal_values(int index) const;
  ::Arp::Type::Grpc::ObjectType* _internal_add_values();
  public:
  const ::Arp::Type::Grpc::ObjectType& values(int index) const;
  ::Arp::Type::Grpc::ObjectType* add_values();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
      values() const;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType > values_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceReadTimeStampedValuesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse) */ {
 public:
  inline ISubscriptionServiceReadTimeStampedValuesResponse() : ISubscriptionServiceReadTimeStampedValuesResponse(nullptr) {}
  virtual ~ISubscriptionServiceReadTimeStampedValuesResponse();

  ISubscriptionServiceReadTimeStampedValuesResponse(const ISubscriptionServiceReadTimeStampedValuesResponse& from);
  ISubscriptionServiceReadTimeStampedValuesResponse(ISubscriptionServiceReadTimeStampedValuesResponse&& from) noexcept
    : ISubscriptionServiceReadTimeStampedValuesResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceReadTimeStampedValuesResponse& operator=(const ISubscriptionServiceReadTimeStampedValuesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceReadTimeStampedValuesResponse& operator=(ISubscriptionServiceReadTimeStampedValuesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceReadTimeStampedValuesResponse& default_instance();

  static inline const ISubscriptionServiceReadTimeStampedValuesResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceReadTimeStampedValuesResponse*>(
               &_ISubscriptionServiceReadTimeStampedValuesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(ISubscriptionServiceReadTimeStampedValuesResponse& a, ISubscriptionServiceReadTimeStampedValuesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceReadTimeStampedValuesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceReadTimeStampedValuesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceReadTimeStampedValuesResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceReadTimeStampedValuesResponse>(nullptr);
  }

  ISubscriptionServiceReadTimeStampedValuesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceReadTimeStampedValuesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceReadTimeStampedValuesResponse& from);
  void MergeFrom(const ISubscriptionServiceReadTimeStampedValuesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceReadTimeStampedValuesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse";
  }
  protected:
  explicit ISubscriptionServiceReadTimeStampedValuesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 2,
    kReturnValueFieldNumber = 1,
  };
  // repeated .Arp.Type.Grpc.ObjectType values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  ::Arp::Type::Grpc::ObjectType* mutable_values(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
      mutable_values();
  private:
  const ::Arp::Type::Grpc::ObjectType& _internal_values(int index) const;
  ::Arp::Type::Grpc::ObjectType* _internal_add_values();
  public:
  const ::Arp::Type::Grpc::ObjectType& values(int index) const;
  ::Arp::Type::Grpc::ObjectType* add_values();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
      values() const;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType > values_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// -------------------------------------------------------------------

class ISubscriptionServiceReadRecordsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse) */ {
 public:
  inline ISubscriptionServiceReadRecordsResponse() : ISubscriptionServiceReadRecordsResponse(nullptr) {}
  virtual ~ISubscriptionServiceReadRecordsResponse();

  ISubscriptionServiceReadRecordsResponse(const ISubscriptionServiceReadRecordsResponse& from);
  ISubscriptionServiceReadRecordsResponse(ISubscriptionServiceReadRecordsResponse&& from) noexcept
    : ISubscriptionServiceReadRecordsResponse() {
    *this = ::std::move(from);
  }

  inline ISubscriptionServiceReadRecordsResponse& operator=(const ISubscriptionServiceReadRecordsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ISubscriptionServiceReadRecordsResponse& operator=(ISubscriptionServiceReadRecordsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ISubscriptionServiceReadRecordsResponse& default_instance();

  static inline const ISubscriptionServiceReadRecordsResponse* internal_default_instance() {
    return reinterpret_cast<const ISubscriptionServiceReadRecordsResponse*>(
               &_ISubscriptionServiceReadRecordsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(ISubscriptionServiceReadRecordsResponse& a, ISubscriptionServiceReadRecordsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ISubscriptionServiceReadRecordsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ISubscriptionServiceReadRecordsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ISubscriptionServiceReadRecordsResponse* New() const final {
    return CreateMaybeMessage<ISubscriptionServiceReadRecordsResponse>(nullptr);
  }

  ISubscriptionServiceReadRecordsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ISubscriptionServiceReadRecordsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ISubscriptionServiceReadRecordsResponse& from);
  void MergeFrom(const ISubscriptionServiceReadRecordsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ISubscriptionServiceReadRecordsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse";
  }
  protected:
  explicit ISubscriptionServiceReadRecordsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ISubscriptionService_2eproto);
    return ::descriptor_table_ISubscriptionService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecordsFieldNumber = 2,
    kReturnValueFieldNumber = 1,
  };
  // repeated .Arp.Type.Grpc.ObjectType records = 2;
  int records_size() const;
  private:
  int _internal_records_size() const;
  public:
  void clear_records();
  ::Arp::Type::Grpc::ObjectType* mutable_records(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
      mutable_records();
  private:
  const ::Arp::Type::Grpc::ObjectType& _internal_records(int index) const;
  ::Arp::Type::Grpc::ObjectType* _internal_add_records();
  public:
  const ::Arp::Type::Grpc::ObjectType& records(int index) const;
  ::Arp::Type::Grpc::ObjectType* add_records();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
      records() const;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _returnvalue() const;
  void set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  private:
  ::Arp::Plc::Gds::Services::Grpc::DataAccessError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType > records_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ISubscriptionService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ISubscriptionServiceCreateSubscriptionRequest

// .Arp.Plc.Gds.Services.Grpc.SubscriptionKind kind = 1;
inline void ISubscriptionServiceCreateSubscriptionRequest::clear_kind() {
  kind_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::SubscriptionKind ISubscriptionServiceCreateSubscriptionRequest::_internal_kind() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::SubscriptionKind >(kind_);
}
inline ::Arp::Plc::Gds::Services::Grpc::SubscriptionKind ISubscriptionServiceCreateSubscriptionRequest::kind() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest.kind)
  return _internal_kind();
}
inline void ISubscriptionServiceCreateSubscriptionRequest::_internal_set_kind(::Arp::Plc::Gds::Services::Grpc::SubscriptionKind value) {
  
  kind_ = value;
}
inline void ISubscriptionServiceCreateSubscriptionRequest::set_kind(::Arp::Plc::Gds::Services::Grpc::SubscriptionKind value) {
  _internal_set_kind(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest.kind)
}

// -------------------------------------------------------------------

// ISubscriptionServiceCreateRecordingSubscriptionRequest

// int32 recordCount = 1;
inline void ISubscriptionServiceCreateRecordingSubscriptionRequest::clear_recordcount() {
  recordcount_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ISubscriptionServiceCreateRecordingSubscriptionRequest::_internal_recordcount() const {
  return recordcount_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ISubscriptionServiceCreateRecordingSubscriptionRequest::recordcount() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest.recordCount)
  return _internal_recordcount();
}
inline void ISubscriptionServiceCreateRecordingSubscriptionRequest::_internal_set_recordcount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  recordcount_ = value;
}
inline void ISubscriptionServiceCreateRecordingSubscriptionRequest::set_recordcount(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_recordcount(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest.recordCount)
}

// -------------------------------------------------------------------

// ISubscriptionServiceAddVariableRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceAddVariableRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceAddVariableRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceAddVariableRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceAddVariableRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceAddVariableRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.subscriptionId)
}

// string variableName = 2;
inline void ISubscriptionServiceAddVariableRequest::clear_variablename() {
  variablename_.ClearToEmpty();
}
inline const std::string& ISubscriptionServiceAddVariableRequest::variablename() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.variableName)
  return _internal_variablename();
}
inline void ISubscriptionServiceAddVariableRequest::set_variablename(const std::string& value) {
  _internal_set_variablename(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.variableName)
}
inline std::string* ISubscriptionServiceAddVariableRequest::mutable_variablename() {
  // @@protoc_insertion_point(field_mutable:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.variableName)
  return _internal_mutable_variablename();
}
inline const std::string& ISubscriptionServiceAddVariableRequest::_internal_variablename() const {
  return variablename_.Get();
}
inline void ISubscriptionServiceAddVariableRequest::_internal_set_variablename(const std::string& value) {
  
  variablename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ISubscriptionServiceAddVariableRequest::set_variablename(std::string&& value) {
  
  variablename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.variableName)
}
inline void ISubscriptionServiceAddVariableRequest::set_variablename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  variablename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.variableName)
}
inline void ISubscriptionServiceAddVariableRequest::set_variablename(const char* value,
    size_t size) {
  
  variablename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.variableName)
}
inline std::string* ISubscriptionServiceAddVariableRequest::_internal_mutable_variablename() {
  
  return variablename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ISubscriptionServiceAddVariableRequest::release_variablename() {
  // @@protoc_insertion_point(field_release:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.variableName)
  return variablename_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ISubscriptionServiceAddVariableRequest::set_allocated_variablename(std::string* variablename) {
  if (variablename != nullptr) {
    
  } else {
    
  }
  variablename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), variablename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.variableName)
}

// -------------------------------------------------------------------

// ISubscriptionServiceAddVariablesRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceAddVariablesRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceAddVariablesRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceAddVariablesRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceAddVariablesRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceAddVariablesRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.subscriptionId)
}

// repeated string variableNames = 2;
inline int ISubscriptionServiceAddVariablesRequest::_internal_variablenames_size() const {
  return variablenames_.size();
}
inline int ISubscriptionServiceAddVariablesRequest::variablenames_size() const {
  return _internal_variablenames_size();
}
inline void ISubscriptionServiceAddVariablesRequest::clear_variablenames() {
  variablenames_.Clear();
}
inline std::string* ISubscriptionServiceAddVariablesRequest::add_variablenames() {
  // @@protoc_insertion_point(field_add_mutable:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
  return _internal_add_variablenames();
}
inline const std::string& ISubscriptionServiceAddVariablesRequest::_internal_variablenames(int index) const {
  return variablenames_.Get(index);
}
inline const std::string& ISubscriptionServiceAddVariablesRequest::variablenames(int index) const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
  return _internal_variablenames(index);
}
inline std::string* ISubscriptionServiceAddVariablesRequest::mutable_variablenames(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
  return variablenames_.Mutable(index);
}
inline void ISubscriptionServiceAddVariablesRequest::set_variablenames(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
  variablenames_.Mutable(index)->assign(value);
}
inline void ISubscriptionServiceAddVariablesRequest::set_variablenames(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
  variablenames_.Mutable(index)->assign(std::move(value));
}
inline void ISubscriptionServiceAddVariablesRequest::set_variablenames(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  variablenames_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
}
inline void ISubscriptionServiceAddVariablesRequest::set_variablenames(int index, const char* value, size_t size) {
  variablenames_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
}
inline std::string* ISubscriptionServiceAddVariablesRequest::_internal_add_variablenames() {
  return variablenames_.Add();
}
inline void ISubscriptionServiceAddVariablesRequest::add_variablenames(const std::string& value) {
  variablenames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
}
inline void ISubscriptionServiceAddVariablesRequest::add_variablenames(std::string&& value) {
  variablenames_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
}
inline void ISubscriptionServiceAddVariablesRequest::add_variablenames(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  variablenames_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
}
inline void ISubscriptionServiceAddVariablesRequest::add_variablenames(const char* value, size_t size) {
  variablenames_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ISubscriptionServiceAddVariablesRequest::variablenames() const {
  // @@protoc_insertion_point(field_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
  return variablenames_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ISubscriptionServiceAddVariablesRequest::mutable_variablenames() {
  // @@protoc_insertion_point(field_mutable_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames)
  return &variablenames_;
}

// -------------------------------------------------------------------

// ISubscriptionServiceRemoveVariableRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceRemoveVariableRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceRemoveVariableRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceRemoveVariableRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceRemoveVariableRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceRemoveVariableRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.subscriptionId)
}

// string variableName = 2;
inline void ISubscriptionServiceRemoveVariableRequest::clear_variablename() {
  variablename_.ClearToEmpty();
}
inline const std::string& ISubscriptionServiceRemoveVariableRequest::variablename() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.variableName)
  return _internal_variablename();
}
inline void ISubscriptionServiceRemoveVariableRequest::set_variablename(const std::string& value) {
  _internal_set_variablename(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.variableName)
}
inline std::string* ISubscriptionServiceRemoveVariableRequest::mutable_variablename() {
  // @@protoc_insertion_point(field_mutable:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.variableName)
  return _internal_mutable_variablename();
}
inline const std::string& ISubscriptionServiceRemoveVariableRequest::_internal_variablename() const {
  return variablename_.Get();
}
inline void ISubscriptionServiceRemoveVariableRequest::_internal_set_variablename(const std::string& value) {
  
  variablename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ISubscriptionServiceRemoveVariableRequest::set_variablename(std::string&& value) {
  
  variablename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.variableName)
}
inline void ISubscriptionServiceRemoveVariableRequest::set_variablename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  variablename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.variableName)
}
inline void ISubscriptionServiceRemoveVariableRequest::set_variablename(const char* value,
    size_t size) {
  
  variablename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.variableName)
}
inline std::string* ISubscriptionServiceRemoveVariableRequest::_internal_mutable_variablename() {
  
  return variablename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ISubscriptionServiceRemoveVariableRequest::release_variablename() {
  // @@protoc_insertion_point(field_release:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.variableName)
  return variablename_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ISubscriptionServiceRemoveVariableRequest::set_allocated_variablename(std::string* variablename) {
  if (variablename != nullptr) {
    
  } else {
    
  }
  variablename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), variablename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.variableName)
}

// -------------------------------------------------------------------

// ISubscriptionServiceSubscribeRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceSubscribeRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceSubscribeRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceSubscribeRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceSubscribeRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceSubscribeRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest.subscriptionId)
}

// uint64 sampleRate = 2;
inline void ISubscriptionServiceSubscribeRequest::clear_samplerate() {
  samplerate_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ISubscriptionServiceSubscribeRequest::_internal_samplerate() const {
  return samplerate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ISubscriptionServiceSubscribeRequest::samplerate() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest.sampleRate)
  return _internal_samplerate();
}
inline void ISubscriptionServiceSubscribeRequest::_internal_set_samplerate(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  samplerate_ = value;
}
inline void ISubscriptionServiceSubscribeRequest::set_samplerate(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samplerate(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest.sampleRate)
}

// -------------------------------------------------------------------

// ISubscriptionServiceResubscribeRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceResubscribeRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceResubscribeRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceResubscribeRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceResubscribeRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceResubscribeRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest.subscriptionId)
}

// uint64 sampleRate = 2;
inline void ISubscriptionServiceResubscribeRequest::clear_samplerate() {
  samplerate_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ISubscriptionServiceResubscribeRequest::_internal_samplerate() const {
  return samplerate_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ISubscriptionServiceResubscribeRequest::samplerate() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest.sampleRate)
  return _internal_samplerate();
}
inline void ISubscriptionServiceResubscribeRequest::_internal_set_samplerate(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  samplerate_ = value;
}
inline void ISubscriptionServiceResubscribeRequest::set_samplerate(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_samplerate(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest.sampleRate)
}

// -------------------------------------------------------------------

// ISubscriptionServiceUnsubscribeRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceUnsubscribeRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceUnsubscribeRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceUnsubscribeRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceUnsubscribeRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceUnsubscribeRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest.subscriptionId)
}

// -------------------------------------------------------------------

// ISubscriptionServiceDeleteSubscriptionRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceDeleteSubscriptionRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceDeleteSubscriptionRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceDeleteSubscriptionRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceDeleteSubscriptionRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceDeleteSubscriptionRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest.subscriptionId)
}

// -------------------------------------------------------------------

// ISubscriptionServiceGetVariableInfosRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceGetVariableInfosRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceGetVariableInfosRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceGetVariableInfosRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceGetVariableInfosRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceGetVariableInfosRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest.subscriptionId)
}

// -------------------------------------------------------------------

// ISubscriptionServiceGetTimeStampedVariableInfosRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceGetTimeStampedVariableInfosRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceGetTimeStampedVariableInfosRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceGetTimeStampedVariableInfosRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceGetTimeStampedVariableInfosRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceGetTimeStampedVariableInfosRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest.subscriptionId)
}

// -------------------------------------------------------------------

// ISubscriptionServiceGetRecordInfosRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceGetRecordInfosRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceGetRecordInfosRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceGetRecordInfosRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceGetRecordInfosRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceGetRecordInfosRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest.subscriptionId)
}

// -------------------------------------------------------------------

// ISubscriptionServiceReadValuesRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceReadValuesRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceReadValuesRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceReadValuesRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceReadValuesRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceReadValuesRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest.subscriptionId)
}

// -------------------------------------------------------------------

// ISubscriptionServiceReadTimeStampedValuesRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceReadTimeStampedValuesRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceReadTimeStampedValuesRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceReadTimeStampedValuesRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceReadTimeStampedValuesRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceReadTimeStampedValuesRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest.subscriptionId)
}

// -------------------------------------------------------------------

// ISubscriptionServiceReadRecordsRequest

// uint32 subscriptionId = 1;
inline void ISubscriptionServiceReadRecordsRequest::clear_subscriptionid() {
  subscriptionid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceReadRecordsRequest::_internal_subscriptionid() const {
  return subscriptionid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceReadRecordsRequest::subscriptionid() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest.subscriptionId)
  return _internal_subscriptionid();
}
inline void ISubscriptionServiceReadRecordsRequest::_internal_set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  subscriptionid_ = value;
}
inline void ISubscriptionServiceReadRecordsRequest::set_subscriptionid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_subscriptionid(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest.subscriptionId)
}

// int32 count = 2;
inline void ISubscriptionServiceReadRecordsRequest::clear_count() {
  count_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ISubscriptionServiceReadRecordsRequest::_internal_count() const {
  return count_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ISubscriptionServiceReadRecordsRequest::count() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest.count)
  return _internal_count();
}
inline void ISubscriptionServiceReadRecordsRequest::_internal_set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  count_ = value;
}
inline void ISubscriptionServiceReadRecordsRequest::set_count(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_count(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest.count)
}

// -------------------------------------------------------------------

// ISubscriptionServiceCreateSubscriptionResponse

// uint32 _ReturnValue = 1;
inline void ISubscriptionServiceCreateSubscriptionResponse::clear__returnvalue() {
  _returnvalue_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceCreateSubscriptionResponse::_internal__returnvalue() const {
  return _returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceCreateSubscriptionResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceCreateSubscriptionResponse::_internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceCreateSubscriptionResponse::set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse._ReturnValue)
}

// -------------------------------------------------------------------

// ISubscriptionServiceCreateRecordingSubscriptionResponse

// uint32 _ReturnValue = 1;
inline void ISubscriptionServiceCreateRecordingSubscriptionResponse::clear__returnvalue() {
  _returnvalue_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceCreateRecordingSubscriptionResponse::_internal__returnvalue() const {
  return _returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ISubscriptionServiceCreateRecordingSubscriptionResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceCreateRecordingSubscriptionResponse::_internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceCreateRecordingSubscriptionResponse::set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse._ReturnValue)
}

// -------------------------------------------------------------------

// ISubscriptionServiceAddVariableResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceAddVariableResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceAddVariableResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceAddVariableResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceAddVariableResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceAddVariableResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse._ReturnValue)
}

// -------------------------------------------------------------------

// ISubscriptionServiceAddVariablesResponse

// repeated .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline int ISubscriptionServiceAddVariablesResponse::_internal__returnvalue_size() const {
  return _returnvalue_.size();
}
inline int ISubscriptionServiceAddVariablesResponse::_returnvalue_size() const {
  return _internal__returnvalue_size();
}
inline void ISubscriptionServiceAddVariablesResponse::clear__returnvalue() {
  _returnvalue_.Clear();
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceAddVariablesResponse::_internal__returnvalue(int index) const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_.Get(index));
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceAddVariablesResponse::_returnvalue(int index) const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse._ReturnValue)
  return _internal__returnvalue(index);
}
inline void ISubscriptionServiceAddVariablesResponse::set__returnvalue(int index, ::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _returnvalue_.Set(index, value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse._ReturnValue)
}
inline void ISubscriptionServiceAddVariablesResponse::_internal_add__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _returnvalue_.Add(value);
}
inline void ISubscriptionServiceAddVariablesResponse::add__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  // @@protoc_insertion_point(field_add:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse._ReturnValue)
  _internal_add__returnvalue(value);
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>&
ISubscriptionServiceAddVariablesResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse._ReturnValue)
  return _returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
ISubscriptionServiceAddVariablesResponse::_internal_mutable__returnvalue() {
  return &_returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField<int>*
ISubscriptionServiceAddVariablesResponse::mutable__returnvalue() {
  // @@protoc_insertion_point(field_mutable_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse._ReturnValue)
  return _internal_mutable__returnvalue();
}

// -------------------------------------------------------------------

// ISubscriptionServiceRemoveVariableResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceRemoveVariableResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceRemoveVariableResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceRemoveVariableResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceRemoveVariableResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceRemoveVariableResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse._ReturnValue)
}

// -------------------------------------------------------------------

// ISubscriptionServiceSubscribeResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceSubscribeResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceSubscribeResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceSubscribeResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceSubscribeResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceSubscribeResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse._ReturnValue)
}

// -------------------------------------------------------------------

// ISubscriptionServiceResubscribeResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceResubscribeResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceResubscribeResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceResubscribeResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceResubscribeResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceResubscribeResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse._ReturnValue)
}

// -------------------------------------------------------------------

// ISubscriptionServiceUnsubscribeResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceUnsubscribeResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceUnsubscribeResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceUnsubscribeResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceUnsubscribeResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceUnsubscribeResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse._ReturnValue)
}

// -------------------------------------------------------------------

// ISubscriptionServiceDeleteSubscriptionResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceDeleteSubscriptionResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceDeleteSubscriptionResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceDeleteSubscriptionResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceDeleteSubscriptionResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceDeleteSubscriptionResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse._ReturnValue)
}

// -------------------------------------------------------------------

// ISubscriptionServiceGetVariableInfosResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceGetVariableInfosResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceGetVariableInfosResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceGetVariableInfosResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceGetVariableInfosResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceGetVariableInfosResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse._ReturnValue)
}

// repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo variableInfo = 2;
inline int ISubscriptionServiceGetVariableInfosResponse::_internal_variableinfo_size() const {
  return variableinfo_.size();
}
inline int ISubscriptionServiceGetVariableInfosResponse::variableinfo_size() const {
  return _internal_variableinfo_size();
}
inline ::Arp::Plc::Gds::Services::Grpc::VariableInfo* ISubscriptionServiceGetVariableInfosResponse::mutable_variableinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse.variableInfo)
  return variableinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >*
ISubscriptionServiceGetVariableInfosResponse::mutable_variableinfo() {
  // @@protoc_insertion_point(field_mutable_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse.variableInfo)
  return &variableinfo_;
}
inline const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& ISubscriptionServiceGetVariableInfosResponse::_internal_variableinfo(int index) const {
  return variableinfo_.Get(index);
}
inline const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& ISubscriptionServiceGetVariableInfosResponse::variableinfo(int index) const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse.variableInfo)
  return _internal_variableinfo(index);
}
inline ::Arp::Plc::Gds::Services::Grpc::VariableInfo* ISubscriptionServiceGetVariableInfosResponse::_internal_add_variableinfo() {
  return variableinfo_.Add();
}
inline ::Arp::Plc::Gds::Services::Grpc::VariableInfo* ISubscriptionServiceGetVariableInfosResponse::add_variableinfo() {
  // @@protoc_insertion_point(field_add:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse.variableInfo)
  return _internal_add_variableinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >&
ISubscriptionServiceGetVariableInfosResponse::variableinfo() const {
  // @@protoc_insertion_point(field_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse.variableInfo)
  return variableinfo_;
}

// -------------------------------------------------------------------

// ISubscriptionServiceGetTimeStampedVariableInfosResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceGetTimeStampedVariableInfosResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceGetTimeStampedVariableInfosResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceGetTimeStampedVariableInfosResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceGetTimeStampedVariableInfosResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceGetTimeStampedVariableInfosResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse._ReturnValue)
}

// repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo variableInfo = 2;
inline int ISubscriptionServiceGetTimeStampedVariableInfosResponse::_internal_variableinfo_size() const {
  return variableinfo_.size();
}
inline int ISubscriptionServiceGetTimeStampedVariableInfosResponse::variableinfo_size() const {
  return _internal_variableinfo_size();
}
inline ::Arp::Plc::Gds::Services::Grpc::VariableInfo* ISubscriptionServiceGetTimeStampedVariableInfosResponse::mutable_variableinfo(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse.variableInfo)
  return variableinfo_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >*
ISubscriptionServiceGetTimeStampedVariableInfosResponse::mutable_variableinfo() {
  // @@protoc_insertion_point(field_mutable_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse.variableInfo)
  return &variableinfo_;
}
inline const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& ISubscriptionServiceGetTimeStampedVariableInfosResponse::_internal_variableinfo(int index) const {
  return variableinfo_.Get(index);
}
inline const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& ISubscriptionServiceGetTimeStampedVariableInfosResponse::variableinfo(int index) const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse.variableInfo)
  return _internal_variableinfo(index);
}
inline ::Arp::Plc::Gds::Services::Grpc::VariableInfo* ISubscriptionServiceGetTimeStampedVariableInfosResponse::_internal_add_variableinfo() {
  return variableinfo_.Add();
}
inline ::Arp::Plc::Gds::Services::Grpc::VariableInfo* ISubscriptionServiceGetTimeStampedVariableInfosResponse::add_variableinfo() {
  // @@protoc_insertion_point(field_add:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse.variableInfo)
  return _internal_add_variableinfo();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >&
ISubscriptionServiceGetTimeStampedVariableInfosResponse::variableinfo() const {
  // @@protoc_insertion_point(field_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse.variableInfo)
  return variableinfo_;
}

// -------------------------------------------------------------------

// ISubscriptionServiceGetRecordInfosResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceGetRecordInfosResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceGetRecordInfosResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceGetRecordInfosResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceGetRecordInfosResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceGetRecordInfosResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse._ReturnValue)
}

// repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo recordInfos = 2;
inline int ISubscriptionServiceGetRecordInfosResponse::_internal_recordinfos_size() const {
  return recordinfos_.size();
}
inline int ISubscriptionServiceGetRecordInfosResponse::recordinfos_size() const {
  return _internal_recordinfos_size();
}
inline ::Arp::Plc::Gds::Services::Grpc::VariableInfo* ISubscriptionServiceGetRecordInfosResponse::mutable_recordinfos(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse.recordInfos)
  return recordinfos_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >*
ISubscriptionServiceGetRecordInfosResponse::mutable_recordinfos() {
  // @@protoc_insertion_point(field_mutable_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse.recordInfos)
  return &recordinfos_;
}
inline const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& ISubscriptionServiceGetRecordInfosResponse::_internal_recordinfos(int index) const {
  return recordinfos_.Get(index);
}
inline const ::Arp::Plc::Gds::Services::Grpc::VariableInfo& ISubscriptionServiceGetRecordInfosResponse::recordinfos(int index) const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse.recordInfos)
  return _internal_recordinfos(index);
}
inline ::Arp::Plc::Gds::Services::Grpc::VariableInfo* ISubscriptionServiceGetRecordInfosResponse::_internal_add_recordinfos() {
  return recordinfos_.Add();
}
inline ::Arp::Plc::Gds::Services::Grpc::VariableInfo* ISubscriptionServiceGetRecordInfosResponse::add_recordinfos() {
  // @@protoc_insertion_point(field_add:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse.recordInfos)
  return _internal_add_recordinfos();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Plc::Gds::Services::Grpc::VariableInfo >&
ISubscriptionServiceGetRecordInfosResponse::recordinfos() const {
  // @@protoc_insertion_point(field_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse.recordInfos)
  return recordinfos_;
}

// -------------------------------------------------------------------

// ISubscriptionServiceReadValuesResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceReadValuesResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceReadValuesResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceReadValuesResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceReadValuesResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceReadValuesResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse._ReturnValue)
}

// repeated .Arp.Type.Grpc.ObjectType values = 2;
inline int ISubscriptionServiceReadValuesResponse::_internal_values_size() const {
  return values_.size();
}
inline int ISubscriptionServiceReadValuesResponse::values_size() const {
  return _internal_values_size();
}
inline ::Arp::Type::Grpc::ObjectType* ISubscriptionServiceReadValuesResponse::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse.values)
  return values_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
ISubscriptionServiceReadValuesResponse::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse.values)
  return &values_;
}
inline const ::Arp::Type::Grpc::ObjectType& ISubscriptionServiceReadValuesResponse::_internal_values(int index) const {
  return values_.Get(index);
}
inline const ::Arp::Type::Grpc::ObjectType& ISubscriptionServiceReadValuesResponse::values(int index) const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse.values)
  return _internal_values(index);
}
inline ::Arp::Type::Grpc::ObjectType* ISubscriptionServiceReadValuesResponse::_internal_add_values() {
  return values_.Add();
}
inline ::Arp::Type::Grpc::ObjectType* ISubscriptionServiceReadValuesResponse::add_values() {
  // @@protoc_insertion_point(field_add:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse.values)
  return _internal_add_values();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
ISubscriptionServiceReadValuesResponse::values() const {
  // @@protoc_insertion_point(field_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse.values)
  return values_;
}

// -------------------------------------------------------------------

// ISubscriptionServiceReadTimeStampedValuesResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceReadTimeStampedValuesResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceReadTimeStampedValuesResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceReadTimeStampedValuesResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceReadTimeStampedValuesResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceReadTimeStampedValuesResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse._ReturnValue)
}

// repeated .Arp.Type.Grpc.ObjectType values = 2;
inline int ISubscriptionServiceReadTimeStampedValuesResponse::_internal_values_size() const {
  return values_.size();
}
inline int ISubscriptionServiceReadTimeStampedValuesResponse::values_size() const {
  return _internal_values_size();
}
inline ::Arp::Type::Grpc::ObjectType* ISubscriptionServiceReadTimeStampedValuesResponse::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse.values)
  return values_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
ISubscriptionServiceReadTimeStampedValuesResponse::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse.values)
  return &values_;
}
inline const ::Arp::Type::Grpc::ObjectType& ISubscriptionServiceReadTimeStampedValuesResponse::_internal_values(int index) const {
  return values_.Get(index);
}
inline const ::Arp::Type::Grpc::ObjectType& ISubscriptionServiceReadTimeStampedValuesResponse::values(int index) const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse.values)
  return _internal_values(index);
}
inline ::Arp::Type::Grpc::ObjectType* ISubscriptionServiceReadTimeStampedValuesResponse::_internal_add_values() {
  return values_.Add();
}
inline ::Arp::Type::Grpc::ObjectType* ISubscriptionServiceReadTimeStampedValuesResponse::add_values() {
  // @@protoc_insertion_point(field_add:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse.values)
  return _internal_add_values();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
ISubscriptionServiceReadTimeStampedValuesResponse::values() const {
  // @@protoc_insertion_point(field_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse.values)
  return values_;
}

// -------------------------------------------------------------------

// ISubscriptionServiceReadRecordsResponse

// .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
inline void ISubscriptionServiceReadRecordsResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceReadRecordsResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::Plc::Gds::Services::Grpc::DataAccessError >(_returnvalue_);
}
inline ::Arp::Plc::Gds::Services::Grpc::DataAccessError ISubscriptionServiceReadRecordsResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void ISubscriptionServiceReadRecordsResponse::_internal_set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  
  _returnvalue_ = value;
}
inline void ISubscriptionServiceReadRecordsResponse::set__returnvalue(::Arp::Plc::Gds::Services::Grpc::DataAccessError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse._ReturnValue)
}

// repeated .Arp.Type.Grpc.ObjectType records = 2;
inline int ISubscriptionServiceReadRecordsResponse::_internal_records_size() const {
  return records_.size();
}
inline int ISubscriptionServiceReadRecordsResponse::records_size() const {
  return _internal_records_size();
}
inline ::Arp::Type::Grpc::ObjectType* ISubscriptionServiceReadRecordsResponse::mutable_records(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse.records)
  return records_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
ISubscriptionServiceReadRecordsResponse::mutable_records() {
  // @@protoc_insertion_point(field_mutable_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse.records)
  return &records_;
}
inline const ::Arp::Type::Grpc::ObjectType& ISubscriptionServiceReadRecordsResponse::_internal_records(int index) const {
  return records_.Get(index);
}
inline const ::Arp::Type::Grpc::ObjectType& ISubscriptionServiceReadRecordsResponse::records(int index) const {
  // @@protoc_insertion_point(field_get:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse.records)
  return _internal_records(index);
}
inline ::Arp::Type::Grpc::ObjectType* ISubscriptionServiceReadRecordsResponse::_internal_add_records() {
  return records_.Add();
}
inline ::Arp::Type::Grpc::ObjectType* ISubscriptionServiceReadRecordsResponse::add_records() {
  // @@protoc_insertion_point(field_add:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse.records)
  return _internal_add_records();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
ISubscriptionServiceReadRecordsResponse::records() const {
  // @@protoc_insertion_point(field_list:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse.records)
  return records_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Grpc
}  // namespace Services
}  // namespace Gds
}  // namespace Plc
}  // namespace Arp

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ISubscriptionService_2eproto
