// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ISubscriptionService.proto

#include "ISubscriptionService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_VariableInfo_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_VariableInfo_VariableInfo_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_ArpTypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectType_ArpTypes_2eproto;
namespace Arp {
namespace Plc {
namespace Gds {
namespace Services {
namespace Grpc {
class ISubscriptionServiceCreateSubscriptionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceCreateSubscriptionRequest> _instance;
} _ISubscriptionServiceCreateSubscriptionRequest_default_instance_;
class ISubscriptionServiceCreateRecordingSubscriptionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceCreateRecordingSubscriptionRequest> _instance;
} _ISubscriptionServiceCreateRecordingSubscriptionRequest_default_instance_;
class ISubscriptionServiceAddVariableRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceAddVariableRequest> _instance;
} _ISubscriptionServiceAddVariableRequest_default_instance_;
class ISubscriptionServiceAddVariablesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceAddVariablesRequest> _instance;
} _ISubscriptionServiceAddVariablesRequest_default_instance_;
class ISubscriptionServiceRemoveVariableRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceRemoveVariableRequest> _instance;
} _ISubscriptionServiceRemoveVariableRequest_default_instance_;
class ISubscriptionServiceSubscribeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceSubscribeRequest> _instance;
} _ISubscriptionServiceSubscribeRequest_default_instance_;
class ISubscriptionServiceResubscribeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceResubscribeRequest> _instance;
} _ISubscriptionServiceResubscribeRequest_default_instance_;
class ISubscriptionServiceUnsubscribeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceUnsubscribeRequest> _instance;
} _ISubscriptionServiceUnsubscribeRequest_default_instance_;
class ISubscriptionServiceDeleteSubscriptionRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceDeleteSubscriptionRequest> _instance;
} _ISubscriptionServiceDeleteSubscriptionRequest_default_instance_;
class ISubscriptionServiceGetVariableInfosRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceGetVariableInfosRequest> _instance;
} _ISubscriptionServiceGetVariableInfosRequest_default_instance_;
class ISubscriptionServiceGetTimeStampedVariableInfosRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceGetTimeStampedVariableInfosRequest> _instance;
} _ISubscriptionServiceGetTimeStampedVariableInfosRequest_default_instance_;
class ISubscriptionServiceGetRecordInfosRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceGetRecordInfosRequest> _instance;
} _ISubscriptionServiceGetRecordInfosRequest_default_instance_;
class ISubscriptionServiceReadValuesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceReadValuesRequest> _instance;
} _ISubscriptionServiceReadValuesRequest_default_instance_;
class ISubscriptionServiceReadTimeStampedValuesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceReadTimeStampedValuesRequest> _instance;
} _ISubscriptionServiceReadTimeStampedValuesRequest_default_instance_;
class ISubscriptionServiceReadRecordsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceReadRecordsRequest> _instance;
} _ISubscriptionServiceReadRecordsRequest_default_instance_;
class ISubscriptionServiceCreateSubscriptionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceCreateSubscriptionResponse> _instance;
} _ISubscriptionServiceCreateSubscriptionResponse_default_instance_;
class ISubscriptionServiceCreateRecordingSubscriptionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceCreateRecordingSubscriptionResponse> _instance;
} _ISubscriptionServiceCreateRecordingSubscriptionResponse_default_instance_;
class ISubscriptionServiceAddVariableResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceAddVariableResponse> _instance;
} _ISubscriptionServiceAddVariableResponse_default_instance_;
class ISubscriptionServiceAddVariablesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceAddVariablesResponse> _instance;
} _ISubscriptionServiceAddVariablesResponse_default_instance_;
class ISubscriptionServiceRemoveVariableResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceRemoveVariableResponse> _instance;
} _ISubscriptionServiceRemoveVariableResponse_default_instance_;
class ISubscriptionServiceSubscribeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceSubscribeResponse> _instance;
} _ISubscriptionServiceSubscribeResponse_default_instance_;
class ISubscriptionServiceResubscribeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceResubscribeResponse> _instance;
} _ISubscriptionServiceResubscribeResponse_default_instance_;
class ISubscriptionServiceUnsubscribeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceUnsubscribeResponse> _instance;
} _ISubscriptionServiceUnsubscribeResponse_default_instance_;
class ISubscriptionServiceDeleteSubscriptionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceDeleteSubscriptionResponse> _instance;
} _ISubscriptionServiceDeleteSubscriptionResponse_default_instance_;
class ISubscriptionServiceGetVariableInfosResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceGetVariableInfosResponse> _instance;
} _ISubscriptionServiceGetVariableInfosResponse_default_instance_;
class ISubscriptionServiceGetTimeStampedVariableInfosResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceGetTimeStampedVariableInfosResponse> _instance;
} _ISubscriptionServiceGetTimeStampedVariableInfosResponse_default_instance_;
class ISubscriptionServiceGetRecordInfosResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceGetRecordInfosResponse> _instance;
} _ISubscriptionServiceGetRecordInfosResponse_default_instance_;
class ISubscriptionServiceReadValuesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceReadValuesResponse> _instance;
} _ISubscriptionServiceReadValuesResponse_default_instance_;
class ISubscriptionServiceReadTimeStampedValuesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceReadTimeStampedValuesResponse> _instance;
} _ISubscriptionServiceReadTimeStampedValuesResponse_default_instance_;
class ISubscriptionServiceReadRecordsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ISubscriptionServiceReadRecordsResponse> _instance;
} _ISubscriptionServiceReadRecordsResponse_default_instance_;
}  // namespace Grpc
}  // namespace Services
}  // namespace Gds
}  // namespace Plc
}  // namespace Arp
static void InitDefaultsscc_info_ISubscriptionServiceAddVariableRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceAddVariableRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceAddVariableRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceAddVariableRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceAddVariableResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceAddVariableResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceAddVariableResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceAddVariableResponse_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceAddVariablesRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceAddVariablesRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceAddVariablesRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceAddVariablesRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceAddVariablesResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceAddVariablesResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceAddVariablesResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceAddVariablesResponse_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceCreateRecordingSubscriptionRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceCreateRecordingSubscriptionRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceCreateRecordingSubscriptionRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceCreateRecordingSubscriptionRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceCreateRecordingSubscriptionResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceCreateRecordingSubscriptionResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceCreateRecordingSubscriptionResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceCreateRecordingSubscriptionResponse_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceCreateSubscriptionRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceCreateSubscriptionRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceCreateSubscriptionRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceCreateSubscriptionRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceCreateSubscriptionResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceCreateSubscriptionResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceCreateSubscriptionResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceCreateSubscriptionResponse_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceDeleteSubscriptionRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceDeleteSubscriptionRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceDeleteSubscriptionRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceDeleteSubscriptionRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceDeleteSubscriptionResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceDeleteSubscriptionResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceDeleteSubscriptionResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceDeleteSubscriptionResponse_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceGetRecordInfosRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetRecordInfosRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceGetRecordInfosRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceGetRecordInfosRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceGetRecordInfosResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetRecordInfosResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ISubscriptionServiceGetRecordInfosResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ISubscriptionServiceGetRecordInfosResponse_ISubscriptionService_2eproto}, {
      &scc_info_VariableInfo_VariableInfo_2eproto.base,}};

static void InitDefaultsscc_info_ISubscriptionServiceGetTimeStampedVariableInfosRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetTimeStampedVariableInfosRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceGetTimeStampedVariableInfosRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceGetTimeStampedVariableInfosRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceGetTimeStampedVariableInfosResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetTimeStampedVariableInfosResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ISubscriptionServiceGetTimeStampedVariableInfosResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ISubscriptionServiceGetTimeStampedVariableInfosResponse_ISubscriptionService_2eproto}, {
      &scc_info_VariableInfo_VariableInfo_2eproto.base,}};

static void InitDefaultsscc_info_ISubscriptionServiceGetVariableInfosRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetVariableInfosRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceGetVariableInfosRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceGetVariableInfosRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceGetVariableInfosResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetVariableInfosResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ISubscriptionServiceGetVariableInfosResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ISubscriptionServiceGetVariableInfosResponse_ISubscriptionService_2eproto}, {
      &scc_info_VariableInfo_VariableInfo_2eproto.base,}};

static void InitDefaultsscc_info_ISubscriptionServiceReadRecordsRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadRecordsRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceReadRecordsRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceReadRecordsRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceReadRecordsResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadRecordsResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ISubscriptionServiceReadRecordsResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ISubscriptionServiceReadRecordsResponse_ISubscriptionService_2eproto}, {
      &scc_info_ObjectType_ArpTypes_2eproto.base,}};

static void InitDefaultsscc_info_ISubscriptionServiceReadTimeStampedValuesRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadTimeStampedValuesRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceReadTimeStampedValuesRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceReadTimeStampedValuesRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceReadTimeStampedValuesResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadTimeStampedValuesResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ISubscriptionServiceReadTimeStampedValuesResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ISubscriptionServiceReadTimeStampedValuesResponse_ISubscriptionService_2eproto}, {
      &scc_info_ObjectType_ArpTypes_2eproto.base,}};

static void InitDefaultsscc_info_ISubscriptionServiceReadValuesRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadValuesRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceReadValuesRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceReadValuesRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceReadValuesResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadValuesResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ISubscriptionServiceReadValuesResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ISubscriptionServiceReadValuesResponse_ISubscriptionService_2eproto}, {
      &scc_info_ObjectType_ArpTypes_2eproto.base,}};

static void InitDefaultsscc_info_ISubscriptionServiceRemoveVariableRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceRemoveVariableRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceRemoveVariableRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceRemoveVariableRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceRemoveVariableResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceRemoveVariableResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceRemoveVariableResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceRemoveVariableResponse_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceResubscribeRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceResubscribeRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceResubscribeRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceResubscribeRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceResubscribeResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceResubscribeResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceResubscribeResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceResubscribeResponse_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceSubscribeRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceSubscribeRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceSubscribeRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceSubscribeRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceSubscribeResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceSubscribeResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceSubscribeResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceSubscribeResponse_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceUnsubscribeRequest_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceUnsubscribeRequest_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceUnsubscribeRequest_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceUnsubscribeRequest_ISubscriptionService_2eproto}, {}};

static void InitDefaultsscc_info_ISubscriptionServiceUnsubscribeResponse_ISubscriptionService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceUnsubscribeResponse_default_instance_;
    new (ptr) ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ISubscriptionServiceUnsubscribeResponse_ISubscriptionService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ISubscriptionServiceUnsubscribeResponse_ISubscriptionService_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ISubscriptionService_2eproto[30];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_ISubscriptionService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ISubscriptionService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ISubscriptionService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionRequest, kind_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionRequest, recordcount_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableRequest, subscriptionid_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableRequest, variablename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesRequest, subscriptionid_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesRequest, variablenames_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableRequest, subscriptionid_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableRequest, variablename_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeRequest, subscriptionid_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeRequest, samplerate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeRequest, subscriptionid_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeRequest, samplerate_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeRequest, subscriptionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionRequest, subscriptionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosRequest, subscriptionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosRequest, subscriptionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosRequest, subscriptionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesRequest, subscriptionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesRequest, subscriptionid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsRequest, subscriptionid_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsRequest, count_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosResponse, _returnvalue_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosResponse, variableinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosResponse, _returnvalue_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosResponse, variableinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosResponse, _returnvalue_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosResponse, recordinfos_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesResponse, _returnvalue_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesResponse, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesResponse, _returnvalue_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesResponse, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsResponse, _returnvalue_),
  PROTOBUF_FIELD_OFFSET(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsResponse, records_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionRequest)},
  { 6, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionRequest)},
  { 12, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableRequest)},
  { 19, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesRequest)},
  { 26, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableRequest)},
  { 33, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeRequest)},
  { 40, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeRequest)},
  { 47, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeRequest)},
  { 53, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionRequest)},
  { 59, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosRequest)},
  { 65, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosRequest)},
  { 71, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosRequest)},
  { 77, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesRequest)},
  { 83, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesRequest)},
  { 89, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsRequest)},
  { 96, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionResponse)},
  { 102, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionResponse)},
  { 108, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableResponse)},
  { 114, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesResponse)},
  { 120, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableResponse)},
  { 126, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeResponse)},
  { 132, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeResponse)},
  { 138, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeResponse)},
  { 144, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionResponse)},
  { 150, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosResponse)},
  { 157, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosResponse)},
  { 164, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosResponse)},
  { 171, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesResponse)},
  { 178, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesResponse)},
  { 185, -1, sizeof(::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceCreateSubscriptionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceCreateRecordingSubscriptionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceAddVariableRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceAddVariablesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceRemoveVariableRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceSubscribeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceResubscribeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceUnsubscribeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceDeleteSubscriptionRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetVariableInfosRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetTimeStampedVariableInfosRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetRecordInfosRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadValuesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadTimeStampedValuesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadRecordsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceCreateSubscriptionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceCreateRecordingSubscriptionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceAddVariableResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceAddVariablesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceRemoveVariableResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceSubscribeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceResubscribeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceUnsubscribeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceDeleteSubscriptionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetVariableInfosResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetTimeStampedVariableInfosResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceGetRecordInfosResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadValuesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadTimeStampedValuesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Plc::Gds::Services::Grpc::_ISubscriptionServiceReadRecordsResponse_default_instance_),
};

const char descriptor_table_protodef_ISubscriptionService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032ISubscriptionService.proto\022\031Arp.Plc.Gd"
  "s.Services.Grpc\032\025DataAccessError.proto\032\026"
  "SubscriptionKind.proto\032\022VariableInfo.pro"
  "to\032\016ArpTypes.proto\"j\n-ISubscriptionServi"
  "ceCreateSubscriptionRequest\0229\n\004kind\030\001 \001("
  "\0162+.Arp.Plc.Gds.Services.Grpc.Subscripti"
  "onKind\"M\n6ISubscriptionServiceCreateReco"
  "rdingSubscriptionRequest\022\023\n\013recordCount\030"
  "\001 \001(\005\"V\n&ISubscriptionServiceAddVariable"
  "Request\022\026\n\016subscriptionId\030\001 \001(\r\022\024\n\014varia"
  "bleName\030\002 \001(\t\"X\n\'ISubscriptionServiceAdd"
  "VariablesRequest\022\026\n\016subscriptionId\030\001 \001(\r"
  "\022\025\n\rvariableNames\030\002 \003(\t\"Y\n)ISubscription"
  "ServiceRemoveVariableRequest\022\026\n\016subscrip"
  "tionId\030\001 \001(\r\022\024\n\014variableName\030\002 \001(\t\"R\n$IS"
  "ubscriptionServiceSubscribeRequest\022\026\n\016su"
  "bscriptionId\030\001 \001(\r\022\022\n\nsampleRate\030\002 \001(\004\"T"
  "\n&ISubscriptionServiceResubscribeRequest"
  "\022\026\n\016subscriptionId\030\001 \001(\r\022\022\n\nsampleRate\030\002"
  " \001(\004\"@\n&ISubscriptionServiceUnsubscribeR"
  "equest\022\026\n\016subscriptionId\030\001 \001(\r\"G\n-ISubsc"
  "riptionServiceDeleteSubscriptionRequest\022"
  "\026\n\016subscriptionId\030\001 \001(\r\"E\n+ISubscription"
  "ServiceGetVariableInfosRequest\022\026\n\016subscr"
  "iptionId\030\001 \001(\r\"P\n6ISubscriptionServiceGe"
  "tTimeStampedVariableInfosRequest\022\026\n\016subs"
  "criptionId\030\001 \001(\r\"C\n)ISubscriptionService"
  "GetRecordInfosRequest\022\026\n\016subscriptionId\030"
  "\001 \001(\r\"\?\n%ISubscriptionServiceReadValuesR"
  "equest\022\026\n\016subscriptionId\030\001 \001(\r\"J\n0ISubsc"
  "riptionServiceReadTimeStampedValuesReque"
  "st\022\026\n\016subscriptionId\030\001 \001(\r\"O\n&ISubscript"
  "ionServiceReadRecordsRequest\022\026\n\016subscrip"
  "tionId\030\001 \001(\r\022\r\n\005count\030\002 \001(\005\"F\n.ISubscrip"
  "tionServiceCreateSubscriptionResponse\022\024\n"
  "\014_ReturnValue\030\001 \001(\r\"O\n7ISubscriptionServ"
  "iceCreateRecordingSubscriptionResponse\022\024"
  "\n\014_ReturnValue\030\001 \001(\r\"k\n\'ISubscriptionSer"
  "viceAddVariableResponse\022@\n\014_ReturnValue\030"
  "\001 \001(\0162*.Arp.Plc.Gds.Services.Grpc.DataAc"
  "cessError\"l\n(ISubscriptionServiceAddVari"
  "ablesResponse\022@\n\014_ReturnValue\030\001 \003(\0162*.Ar"
  "p.Plc.Gds.Services.Grpc.DataAccessError\""
  "n\n*ISubscriptionServiceRemoveVariableRes"
  "ponse\022@\n\014_ReturnValue\030\001 \001(\0162*.Arp.Plc.Gd"
  "s.Services.Grpc.DataAccessError\"i\n%ISubs"
  "criptionServiceSubscribeResponse\022@\n\014_Ret"
  "urnValue\030\001 \001(\0162*.Arp.Plc.Gds.Services.Gr"
  "pc.DataAccessError\"k\n\'ISubscriptionServi"
  "ceResubscribeResponse\022@\n\014_ReturnValue\030\001 "
  "\001(\0162*.Arp.Plc.Gds.Services.Grpc.DataAcce"
  "ssError\"k\n\'ISubscriptionServiceUnsubscri"
  "beResponse\022@\n\014_ReturnValue\030\001 \001(\0162*.Arp.P"
  "lc.Gds.Services.Grpc.DataAccessError\"r\n."
  "ISubscriptionServiceDeleteSubscriptionRe"
  "sponse\022@\n\014_ReturnValue\030\001 \001(\0162*.Arp.Plc.G"
  "ds.Services.Grpc.DataAccessError\"\257\001\n,ISu"
  "bscriptionServiceGetVariableInfosRespons"
  "e\022@\n\014_ReturnValue\030\001 \001(\0162*.Arp.Plc.Gds.Se"
  "rvices.Grpc.DataAccessError\022=\n\014variableI"
  "nfo\030\002 \003(\0132\'.Arp.Plc.Gds.Services.Grpc.Va"
  "riableInfo\"\272\001\n7ISubscriptionServiceGetTi"
  "meStampedVariableInfosResponse\022@\n\014_Retur"
  "nValue\030\001 \001(\0162*.Arp.Plc.Gds.Services.Grpc"
  ".DataAccessError\022=\n\014variableInfo\030\002 \003(\0132\'"
  ".Arp.Plc.Gds.Services.Grpc.VariableInfo\""
  "\254\001\n*ISubscriptionServiceGetRecordInfosRe"
  "sponse\022@\n\014_ReturnValue\030\001 \001(\0162*.Arp.Plc.G"
  "ds.Services.Grpc.DataAccessError\022<\n\013reco"
  "rdInfos\030\002 \003(\0132\'.Arp.Plc.Gds.Services.Grp"
  "c.VariableInfo\"\225\001\n&ISubscriptionServiceR"
  "eadValuesResponse\022@\n\014_ReturnValue\030\001 \001(\0162"
  "*.Arp.Plc.Gds.Services.Grpc.DataAccessEr"
  "ror\022)\n\006values\030\002 \003(\0132\031.Arp.Type.Grpc.Obje"
  "ctType\"\240\001\n1ISubscriptionServiceReadTimeS"
  "tampedValuesResponse\022@\n\014_ReturnValue\030\001 \001"
  "(\0162*.Arp.Plc.Gds.Services.Grpc.DataAcces"
  "sError\022)\n\006values\030\002 \003(\0132\031.Arp.Type.Grpc.O"
  "bjectType\"\227\001\n\'ISubscriptionServiceReadRe"
  "cordsResponse\022@\n\014_ReturnValue\030\001 \001(\0162*.Ar"
  "p.Plc.Gds.Services.Grpc.DataAccessError\022"
  "*\n\007records\030\002 \003(\0132\031.Arp.Type.Grpc.ObjectT"
  "ype2\320\023\n\024ISubscriptionService\022\253\001\n\022CreateS"
  "ubscription\022H.Arp.Plc.Gds.Services.Grpc."
  "ISubscriptionServiceCreateSubscriptionRe"
  "quest\032I.Arp.Plc.Gds.Services.Grpc.ISubsc"
  "riptionServiceCreateSubscriptionResponse"
  "\"\000\022\306\001\n\033CreateRecordingSubscription\022Q.Arp"
  ".Plc.Gds.Services.Grpc.ISubscriptionServ"
  "iceCreateRecordingSubscriptionRequest\032R."
  "Arp.Plc.Gds.Services.Grpc.ISubscriptionS"
  "erviceCreateRecordingSubscriptionRespons"
  "e\"\000\022\226\001\n\013AddVariable\022A.Arp.Plc.Gds.Servic"
  "es.Grpc.ISubscriptionServiceAddVariableR"
  "equest\032B.Arp.Plc.Gds.Services.Grpc.ISubs"
  "criptionServiceAddVariableResponse\"\000\022\231\001\n"
  "\014AddVariables\022B.Arp.Plc.Gds.Services.Grp"
  "c.ISubscriptionServiceAddVariablesReques"
  "t\032C.Arp.Plc.Gds.Services.Grpc.ISubscript"
  "ionServiceAddVariablesResponse\"\000\022\237\001\n\016Rem"
  "oveVariable\022D.Arp.Plc.Gds.Services.Grpc."
  "ISubscriptionServiceRemoveVariableReques"
  "t\032E.Arp.Plc.Gds.Services.Grpc.ISubscript"
  "ionServiceRemoveVariableResponse\"\000\022\220\001\n\tS"
  "ubscribe\022\?.Arp.Plc.Gds.Services.Grpc.ISu"
  "bscriptionServiceSubscribeRequest\032@.Arp."
  "Plc.Gds.Services.Grpc.ISubscriptionServi"
  "ceSubscribeResponse\"\000\022\226\001\n\013Resubscribe\022A."
  "Arp.Plc.Gds.Services.Grpc.ISubscriptionS"
  "erviceResubscribeRequest\032B.Arp.Plc.Gds.S"
  "ervices.Grpc.ISubscriptionServiceResubsc"
  "ribeResponse\"\000\022\226\001\n\013Unsubscribe\022A.Arp.Plc"
  ".Gds.Services.Grpc.ISubscriptionServiceU"
  "nsubscribeRequest\032B.Arp.Plc.Gds.Services"
  ".Grpc.ISubscriptionServiceUnsubscribeRes"
  "ponse\"\000\022\253\001\n\022DeleteSubscription\022H.Arp.Plc"
  ".Gds.Services.Grpc.ISubscriptionServiceD"
  "eleteSubscriptionRequest\032I.Arp.Plc.Gds.S"
  "ervices.Grpc.ISubscriptionServiceDeleteS"
  "ubscriptionResponse\"\000\022\245\001\n\020GetVariableInf"
  "os\022F.Arp.Plc.Gds.Services.Grpc.ISubscrip"
  "tionServiceGetVariableInfosRequest\032G.Arp"
  ".Plc.Gds.Services.Grpc.ISubscriptionServ"
  "iceGetVariableInfosResponse\"\000\022\306\001\n\033GetTim"
  "eStampedVariableInfos\022Q.Arp.Plc.Gds.Serv"
  "ices.Grpc.ISubscriptionServiceGetTimeSta"
  "mpedVariableInfosRequest\032R.Arp.Plc.Gds.S"
  "ervices.Grpc.ISubscriptionServiceGetTime"
  "StampedVariableInfosResponse\"\000\022\237\001\n\016GetRe"
  "cordInfos\022D.Arp.Plc.Gds.Services.Grpc.IS"
  "ubscriptionServiceGetRecordInfosRequest\032"
  "E.Arp.Plc.Gds.Services.Grpc.ISubscriptio"
  "nServiceGetRecordInfosResponse\"\000\022\223\001\n\nRea"
  "dValues\022@.Arp.Plc.Gds.Services.Grpc.ISub"
  "scriptionServiceReadValuesRequest\032A.Arp."
  "Plc.Gds.Services.Grpc.ISubscriptionServi"
  "ceReadValuesResponse\"\000\022\264\001\n\025ReadTimeStamp"
  "edValues\022K.Arp.Plc.Gds.Services.Grpc.ISu"
  "bscriptionServiceReadTimeStampedValuesRe"
  "quest\032L.Arp.Plc.Gds.Services.Grpc.ISubsc"
  "riptionServiceReadTimeStampedValuesRespo"
  "nse\"\000\022\226\001\n\013ReadRecords\022A.Arp.Plc.Gds.Serv"
  "ices.Grpc.ISubscriptionServiceReadRecord"
  "sRequest\032B.Arp.Plc.Gds.Services.Grpc.ISu"
  "bscriptionServiceReadRecordsResponse\"\000b\006"
  "proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ISubscriptionService_2eproto_deps[4] = {
  &::descriptor_table_ArpTypes_2eproto,
  &::descriptor_table_DataAccessError_2eproto,
  &::descriptor_table_SubscriptionKind_2eproto,
  &::descriptor_table_VariableInfo_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ISubscriptionService_2eproto_sccs[30] = {
  &scc_info_ISubscriptionServiceAddVariableRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceAddVariableResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceAddVariablesRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceAddVariablesResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceCreateRecordingSubscriptionRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceCreateRecordingSubscriptionResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceCreateSubscriptionRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceCreateSubscriptionResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceDeleteSubscriptionRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceDeleteSubscriptionResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceGetRecordInfosRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceGetRecordInfosResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceGetTimeStampedVariableInfosRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceGetTimeStampedVariableInfosResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceGetVariableInfosRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceGetVariableInfosResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceReadRecordsRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceReadRecordsResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceReadTimeStampedValuesRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceReadTimeStampedValuesResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceReadValuesRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceReadValuesResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceRemoveVariableRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceRemoveVariableResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceResubscribeRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceResubscribeResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceSubscribeRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceSubscribeResponse_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceUnsubscribeRequest_ISubscriptionService_2eproto.base,
  &scc_info_ISubscriptionServiceUnsubscribeResponse_ISubscriptionService_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ISubscriptionService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ISubscriptionService_2eproto = {
  false, false, descriptor_table_protodef_ISubscriptionService_2eproto, "ISubscriptionService.proto", 5806,
  &descriptor_table_ISubscriptionService_2eproto_once, descriptor_table_ISubscriptionService_2eproto_sccs, descriptor_table_ISubscriptionService_2eproto_deps, 30, 4,
  schemas, file_default_instances, TableStruct_ISubscriptionService_2eproto::offsets,
  file_level_metadata_ISubscriptionService_2eproto, 30, file_level_enum_descriptors_ISubscriptionService_2eproto, file_level_service_descriptors_ISubscriptionService_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ISubscriptionService_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ISubscriptionService_2eproto)), true);
namespace Arp {
namespace Plc {
namespace Gds {
namespace Services {
namespace Grpc {

// ===================================================================

class ISubscriptionServiceCreateSubscriptionRequest::_Internal {
 public:
};

ISubscriptionServiceCreateSubscriptionRequest::ISubscriptionServiceCreateSubscriptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
}
ISubscriptionServiceCreateSubscriptionRequest::ISubscriptionServiceCreateSubscriptionRequest(const ISubscriptionServiceCreateSubscriptionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  kind_ = from.kind_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
}

void ISubscriptionServiceCreateSubscriptionRequest::SharedCtor() {
  kind_ = 0;
}

ISubscriptionServiceCreateSubscriptionRequest::~ISubscriptionServiceCreateSubscriptionRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceCreateSubscriptionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceCreateSubscriptionRequest::ArenaDtor(void* object) {
  ISubscriptionServiceCreateSubscriptionRequest* _this = reinterpret_cast< ISubscriptionServiceCreateSubscriptionRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceCreateSubscriptionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceCreateSubscriptionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceCreateSubscriptionRequest& ISubscriptionServiceCreateSubscriptionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceCreateSubscriptionRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceCreateSubscriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  kind_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceCreateSubscriptionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.SubscriptionKind kind = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_kind(static_cast<::Arp::Plc::Gds::Services::Grpc::SubscriptionKind>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceCreateSubscriptionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.SubscriptionKind kind = 1;
  if (this->kind() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_kind(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
  return target;
}

size_t ISubscriptionServiceCreateSubscriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.SubscriptionKind kind = 1;
  if (this->kind() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_kind());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceCreateSubscriptionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceCreateSubscriptionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceCreateSubscriptionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceCreateSubscriptionRequest::MergeFrom(const ISubscriptionServiceCreateSubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.kind() != 0) {
    _internal_set_kind(from._internal_kind());
  }
}

void ISubscriptionServiceCreateSubscriptionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceCreateSubscriptionRequest::CopyFrom(const ISubscriptionServiceCreateSubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceCreateSubscriptionRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceCreateSubscriptionRequest::InternalSwap(ISubscriptionServiceCreateSubscriptionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(kind_, other->kind_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceCreateSubscriptionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceCreateRecordingSubscriptionRequest::_Internal {
 public:
};

ISubscriptionServiceCreateRecordingSubscriptionRequest::ISubscriptionServiceCreateRecordingSubscriptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
}
ISubscriptionServiceCreateRecordingSubscriptionRequest::ISubscriptionServiceCreateRecordingSubscriptionRequest(const ISubscriptionServiceCreateRecordingSubscriptionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recordcount_ = from.recordcount_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
}

void ISubscriptionServiceCreateRecordingSubscriptionRequest::SharedCtor() {
  recordcount_ = 0;
}

ISubscriptionServiceCreateRecordingSubscriptionRequest::~ISubscriptionServiceCreateRecordingSubscriptionRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceCreateRecordingSubscriptionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceCreateRecordingSubscriptionRequest::ArenaDtor(void* object) {
  ISubscriptionServiceCreateRecordingSubscriptionRequest* _this = reinterpret_cast< ISubscriptionServiceCreateRecordingSubscriptionRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceCreateRecordingSubscriptionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceCreateRecordingSubscriptionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceCreateRecordingSubscriptionRequest& ISubscriptionServiceCreateRecordingSubscriptionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceCreateRecordingSubscriptionRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceCreateRecordingSubscriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recordcount_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceCreateRecordingSubscriptionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 recordCount = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          recordcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceCreateRecordingSubscriptionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 recordCount = 1;
  if (this->recordcount() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_recordcount(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
  return target;
}

size_t ISubscriptionServiceCreateRecordingSubscriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 recordCount = 1;
  if (this->recordcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_recordcount());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceCreateRecordingSubscriptionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceCreateRecordingSubscriptionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceCreateRecordingSubscriptionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceCreateRecordingSubscriptionRequest::MergeFrom(const ISubscriptionServiceCreateRecordingSubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recordcount() != 0) {
    _internal_set_recordcount(from._internal_recordcount());
  }
}

void ISubscriptionServiceCreateRecordingSubscriptionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceCreateRecordingSubscriptionRequest::CopyFrom(const ISubscriptionServiceCreateRecordingSubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceCreateRecordingSubscriptionRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceCreateRecordingSubscriptionRequest::InternalSwap(ISubscriptionServiceCreateRecordingSubscriptionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(recordcount_, other->recordcount_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceCreateRecordingSubscriptionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceAddVariableRequest::_Internal {
 public:
};

ISubscriptionServiceAddVariableRequest::ISubscriptionServiceAddVariableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
}
ISubscriptionServiceAddVariableRequest::ISubscriptionServiceAddVariableRequest(const ISubscriptionServiceAddVariableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  variablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_variablename().empty()) {
    variablename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_variablename(), 
      GetArena());
  }
  subscriptionid_ = from.subscriptionid_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
}

void ISubscriptionServiceAddVariableRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ISubscriptionServiceAddVariableRequest_ISubscriptionService_2eproto.base);
  variablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscriptionid_ = 0u;
}

ISubscriptionServiceAddVariableRequest::~ISubscriptionServiceAddVariableRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceAddVariableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  variablename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ISubscriptionServiceAddVariableRequest::ArenaDtor(void* object) {
  ISubscriptionServiceAddVariableRequest* _this = reinterpret_cast< ISubscriptionServiceAddVariableRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceAddVariableRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceAddVariableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceAddVariableRequest& ISubscriptionServiceAddVariableRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceAddVariableRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceAddVariableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variablename_.ClearToEmpty();
  subscriptionid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceAddVariableRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string variableName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_variablename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.variableName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceAddVariableRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  // string variableName = 2;
  if (this->variablename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_variablename().data(), static_cast<int>(this->_internal_variablename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest.variableName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_variablename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
  return target;
}

size_t ISubscriptionServiceAddVariableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string variableName = 2;
  if (this->variablename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_variablename());
  }

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceAddVariableRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceAddVariableRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceAddVariableRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceAddVariableRequest::MergeFrom(const ISubscriptionServiceAddVariableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.variablename().size() > 0) {
    _internal_set_variablename(from._internal_variablename());
  }
  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceAddVariableRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceAddVariableRequest::CopyFrom(const ISubscriptionServiceAddVariableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceAddVariableRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceAddVariableRequest::InternalSwap(ISubscriptionServiceAddVariableRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  variablename_.Swap(&other->variablename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(subscriptionid_, other->subscriptionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceAddVariableRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceAddVariablesRequest::_Internal {
 public:
};

ISubscriptionServiceAddVariablesRequest::ISubscriptionServiceAddVariablesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  variablenames_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
}
ISubscriptionServiceAddVariablesRequest::ISubscriptionServiceAddVariablesRequest(const ISubscriptionServiceAddVariablesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      variablenames_(from.variablenames_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subscriptionid_ = from.subscriptionid_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
}

void ISubscriptionServiceAddVariablesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ISubscriptionServiceAddVariablesRequest_ISubscriptionService_2eproto.base);
  subscriptionid_ = 0u;
}

ISubscriptionServiceAddVariablesRequest::~ISubscriptionServiceAddVariablesRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceAddVariablesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceAddVariablesRequest::ArenaDtor(void* object) {
  ISubscriptionServiceAddVariablesRequest* _this = reinterpret_cast< ISubscriptionServiceAddVariablesRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceAddVariablesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceAddVariablesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceAddVariablesRequest& ISubscriptionServiceAddVariablesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceAddVariablesRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceAddVariablesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variablenames_.Clear();
  subscriptionid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceAddVariablesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string variableNames = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_variablenames();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceAddVariablesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  // repeated string variableNames = 2;
  for (int i = 0, n = this->_internal_variablenames_size(); i < n; i++) {
    const auto& s = this->_internal_variablenames(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest.variableNames");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
  return target;
}

size_t ISubscriptionServiceAddVariablesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string variableNames = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(variablenames_.size());
  for (int i = 0, n = variablenames_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      variablenames_.Get(i));
  }

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceAddVariablesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceAddVariablesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceAddVariablesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceAddVariablesRequest::MergeFrom(const ISubscriptionServiceAddVariablesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variablenames_.MergeFrom(from.variablenames_);
  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceAddVariablesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceAddVariablesRequest::CopyFrom(const ISubscriptionServiceAddVariablesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceAddVariablesRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceAddVariablesRequest::InternalSwap(ISubscriptionServiceAddVariablesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  variablenames_.InternalSwap(&other->variablenames_);
  swap(subscriptionid_, other->subscriptionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceAddVariablesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceRemoveVariableRequest::_Internal {
 public:
};

ISubscriptionServiceRemoveVariableRequest::ISubscriptionServiceRemoveVariableRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
}
ISubscriptionServiceRemoveVariableRequest::ISubscriptionServiceRemoveVariableRequest(const ISubscriptionServiceRemoveVariableRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  variablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_variablename().empty()) {
    variablename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_variablename(), 
      GetArena());
  }
  subscriptionid_ = from.subscriptionid_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
}

void ISubscriptionServiceRemoveVariableRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ISubscriptionServiceRemoveVariableRequest_ISubscriptionService_2eproto.base);
  variablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  subscriptionid_ = 0u;
}

ISubscriptionServiceRemoveVariableRequest::~ISubscriptionServiceRemoveVariableRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceRemoveVariableRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  variablename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ISubscriptionServiceRemoveVariableRequest::ArenaDtor(void* object) {
  ISubscriptionServiceRemoveVariableRequest* _this = reinterpret_cast< ISubscriptionServiceRemoveVariableRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceRemoveVariableRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceRemoveVariableRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceRemoveVariableRequest& ISubscriptionServiceRemoveVariableRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceRemoveVariableRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceRemoveVariableRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variablename_.ClearToEmpty();
  subscriptionid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceRemoveVariableRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string variableName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_variablename();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.variableName"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceRemoveVariableRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  // string variableName = 2;
  if (this->variablename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_variablename().data(), static_cast<int>(this->_internal_variablename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest.variableName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_variablename(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
  return target;
}

size_t ISubscriptionServiceRemoveVariableRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string variableName = 2;
  if (this->variablename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_variablename());
  }

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceRemoveVariableRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceRemoveVariableRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceRemoveVariableRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceRemoveVariableRequest::MergeFrom(const ISubscriptionServiceRemoveVariableRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.variablename().size() > 0) {
    _internal_set_variablename(from._internal_variablename());
  }
  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceRemoveVariableRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceRemoveVariableRequest::CopyFrom(const ISubscriptionServiceRemoveVariableRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceRemoveVariableRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceRemoveVariableRequest::InternalSwap(ISubscriptionServiceRemoveVariableRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  variablename_.Swap(&other->variablename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(subscriptionid_, other->subscriptionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceRemoveVariableRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceSubscribeRequest::_Internal {
 public:
};

ISubscriptionServiceSubscribeRequest::ISubscriptionServiceSubscribeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
}
ISubscriptionServiceSubscribeRequest::ISubscriptionServiceSubscribeRequest(const ISubscriptionServiceSubscribeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&samplerate_, &from.samplerate_,
    static_cast<size_t>(reinterpret_cast<char*>(&subscriptionid_) -
    reinterpret_cast<char*>(&samplerate_)) + sizeof(subscriptionid_));
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
}

void ISubscriptionServiceSubscribeRequest::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&samplerate_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&subscriptionid_) -
      reinterpret_cast<char*>(&samplerate_)) + sizeof(subscriptionid_));
}

ISubscriptionServiceSubscribeRequest::~ISubscriptionServiceSubscribeRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceSubscribeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceSubscribeRequest::ArenaDtor(void* object) {
  ISubscriptionServiceSubscribeRequest* _this = reinterpret_cast< ISubscriptionServiceSubscribeRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceSubscribeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceSubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceSubscribeRequest& ISubscriptionServiceSubscribeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceSubscribeRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceSubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&samplerate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&subscriptionid_) -
      reinterpret_cast<char*>(&samplerate_)) + sizeof(subscriptionid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceSubscribeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 sampleRate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          samplerate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceSubscribeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  // uint64 sampleRate = 2;
  if (this->samplerate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_samplerate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
  return target;
}

size_t ISubscriptionServiceSubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 sampleRate = 2;
  if (this->samplerate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_samplerate());
  }

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceSubscribeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceSubscribeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceSubscribeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceSubscribeRequest::MergeFrom(const ISubscriptionServiceSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.samplerate() != 0) {
    _internal_set_samplerate(from._internal_samplerate());
  }
  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceSubscribeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceSubscribeRequest::CopyFrom(const ISubscriptionServiceSubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceSubscribeRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceSubscribeRequest::InternalSwap(ISubscriptionServiceSubscribeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ISubscriptionServiceSubscribeRequest, subscriptionid_)
      + sizeof(ISubscriptionServiceSubscribeRequest::subscriptionid_)
      - PROTOBUF_FIELD_OFFSET(ISubscriptionServiceSubscribeRequest, samplerate_)>(
          reinterpret_cast<char*>(&samplerate_),
          reinterpret_cast<char*>(&other->samplerate_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceSubscribeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceResubscribeRequest::_Internal {
 public:
};

ISubscriptionServiceResubscribeRequest::ISubscriptionServiceResubscribeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
}
ISubscriptionServiceResubscribeRequest::ISubscriptionServiceResubscribeRequest(const ISubscriptionServiceResubscribeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&samplerate_, &from.samplerate_,
    static_cast<size_t>(reinterpret_cast<char*>(&subscriptionid_) -
    reinterpret_cast<char*>(&samplerate_)) + sizeof(subscriptionid_));
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
}

void ISubscriptionServiceResubscribeRequest::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&samplerate_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&subscriptionid_) -
      reinterpret_cast<char*>(&samplerate_)) + sizeof(subscriptionid_));
}

ISubscriptionServiceResubscribeRequest::~ISubscriptionServiceResubscribeRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceResubscribeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceResubscribeRequest::ArenaDtor(void* object) {
  ISubscriptionServiceResubscribeRequest* _this = reinterpret_cast< ISubscriptionServiceResubscribeRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceResubscribeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceResubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceResubscribeRequest& ISubscriptionServiceResubscribeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceResubscribeRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceResubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&samplerate_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&subscriptionid_) -
      reinterpret_cast<char*>(&samplerate_)) + sizeof(subscriptionid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceResubscribeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 sampleRate = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          samplerate_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceResubscribeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  // uint64 sampleRate = 2;
  if (this->samplerate() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_samplerate(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
  return target;
}

size_t ISubscriptionServiceResubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 sampleRate = 2;
  if (this->samplerate() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_samplerate());
  }

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceResubscribeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceResubscribeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceResubscribeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceResubscribeRequest::MergeFrom(const ISubscriptionServiceResubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.samplerate() != 0) {
    _internal_set_samplerate(from._internal_samplerate());
  }
  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceResubscribeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceResubscribeRequest::CopyFrom(const ISubscriptionServiceResubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceResubscribeRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceResubscribeRequest::InternalSwap(ISubscriptionServiceResubscribeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ISubscriptionServiceResubscribeRequest, subscriptionid_)
      + sizeof(ISubscriptionServiceResubscribeRequest::subscriptionid_)
      - PROTOBUF_FIELD_OFFSET(ISubscriptionServiceResubscribeRequest, samplerate_)>(
          reinterpret_cast<char*>(&samplerate_),
          reinterpret_cast<char*>(&other->samplerate_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceResubscribeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceUnsubscribeRequest::_Internal {
 public:
};

ISubscriptionServiceUnsubscribeRequest::ISubscriptionServiceUnsubscribeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
}
ISubscriptionServiceUnsubscribeRequest::ISubscriptionServiceUnsubscribeRequest(const ISubscriptionServiceUnsubscribeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subscriptionid_ = from.subscriptionid_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
}

void ISubscriptionServiceUnsubscribeRequest::SharedCtor() {
  subscriptionid_ = 0u;
}

ISubscriptionServiceUnsubscribeRequest::~ISubscriptionServiceUnsubscribeRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceUnsubscribeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceUnsubscribeRequest::ArenaDtor(void* object) {
  ISubscriptionServiceUnsubscribeRequest* _this = reinterpret_cast< ISubscriptionServiceUnsubscribeRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceUnsubscribeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceUnsubscribeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceUnsubscribeRequest& ISubscriptionServiceUnsubscribeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceUnsubscribeRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceUnsubscribeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriptionid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceUnsubscribeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceUnsubscribeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
  return target;
}

size_t ISubscriptionServiceUnsubscribeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceUnsubscribeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceUnsubscribeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceUnsubscribeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceUnsubscribeRequest::MergeFrom(const ISubscriptionServiceUnsubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceUnsubscribeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceUnsubscribeRequest::CopyFrom(const ISubscriptionServiceUnsubscribeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceUnsubscribeRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceUnsubscribeRequest::InternalSwap(ISubscriptionServiceUnsubscribeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(subscriptionid_, other->subscriptionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceUnsubscribeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceDeleteSubscriptionRequest::_Internal {
 public:
};

ISubscriptionServiceDeleteSubscriptionRequest::ISubscriptionServiceDeleteSubscriptionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
}
ISubscriptionServiceDeleteSubscriptionRequest::ISubscriptionServiceDeleteSubscriptionRequest(const ISubscriptionServiceDeleteSubscriptionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subscriptionid_ = from.subscriptionid_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
}

void ISubscriptionServiceDeleteSubscriptionRequest::SharedCtor() {
  subscriptionid_ = 0u;
}

ISubscriptionServiceDeleteSubscriptionRequest::~ISubscriptionServiceDeleteSubscriptionRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceDeleteSubscriptionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceDeleteSubscriptionRequest::ArenaDtor(void* object) {
  ISubscriptionServiceDeleteSubscriptionRequest* _this = reinterpret_cast< ISubscriptionServiceDeleteSubscriptionRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceDeleteSubscriptionRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceDeleteSubscriptionRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceDeleteSubscriptionRequest& ISubscriptionServiceDeleteSubscriptionRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceDeleteSubscriptionRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceDeleteSubscriptionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriptionid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceDeleteSubscriptionRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceDeleteSubscriptionRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
  return target;
}

size_t ISubscriptionServiceDeleteSubscriptionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceDeleteSubscriptionRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceDeleteSubscriptionRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceDeleteSubscriptionRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceDeleteSubscriptionRequest::MergeFrom(const ISubscriptionServiceDeleteSubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceDeleteSubscriptionRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceDeleteSubscriptionRequest::CopyFrom(const ISubscriptionServiceDeleteSubscriptionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceDeleteSubscriptionRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceDeleteSubscriptionRequest::InternalSwap(ISubscriptionServiceDeleteSubscriptionRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(subscriptionid_, other->subscriptionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceDeleteSubscriptionRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceGetVariableInfosRequest::_Internal {
 public:
};

ISubscriptionServiceGetVariableInfosRequest::ISubscriptionServiceGetVariableInfosRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
}
ISubscriptionServiceGetVariableInfosRequest::ISubscriptionServiceGetVariableInfosRequest(const ISubscriptionServiceGetVariableInfosRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subscriptionid_ = from.subscriptionid_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
}

void ISubscriptionServiceGetVariableInfosRequest::SharedCtor() {
  subscriptionid_ = 0u;
}

ISubscriptionServiceGetVariableInfosRequest::~ISubscriptionServiceGetVariableInfosRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceGetVariableInfosRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceGetVariableInfosRequest::ArenaDtor(void* object) {
  ISubscriptionServiceGetVariableInfosRequest* _this = reinterpret_cast< ISubscriptionServiceGetVariableInfosRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceGetVariableInfosRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceGetVariableInfosRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceGetVariableInfosRequest& ISubscriptionServiceGetVariableInfosRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceGetVariableInfosRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceGetVariableInfosRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriptionid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceGetVariableInfosRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceGetVariableInfosRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
  return target;
}

size_t ISubscriptionServiceGetVariableInfosRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceGetVariableInfosRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceGetVariableInfosRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceGetVariableInfosRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceGetVariableInfosRequest::MergeFrom(const ISubscriptionServiceGetVariableInfosRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceGetVariableInfosRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceGetVariableInfosRequest::CopyFrom(const ISubscriptionServiceGetVariableInfosRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceGetVariableInfosRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceGetVariableInfosRequest::InternalSwap(ISubscriptionServiceGetVariableInfosRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(subscriptionid_, other->subscriptionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceGetVariableInfosRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceGetTimeStampedVariableInfosRequest::_Internal {
 public:
};

ISubscriptionServiceGetTimeStampedVariableInfosRequest::ISubscriptionServiceGetTimeStampedVariableInfosRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
}
ISubscriptionServiceGetTimeStampedVariableInfosRequest::ISubscriptionServiceGetTimeStampedVariableInfosRequest(const ISubscriptionServiceGetTimeStampedVariableInfosRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subscriptionid_ = from.subscriptionid_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
}

void ISubscriptionServiceGetTimeStampedVariableInfosRequest::SharedCtor() {
  subscriptionid_ = 0u;
}

ISubscriptionServiceGetTimeStampedVariableInfosRequest::~ISubscriptionServiceGetTimeStampedVariableInfosRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceGetTimeStampedVariableInfosRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceGetTimeStampedVariableInfosRequest::ArenaDtor(void* object) {
  ISubscriptionServiceGetTimeStampedVariableInfosRequest* _this = reinterpret_cast< ISubscriptionServiceGetTimeStampedVariableInfosRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceGetTimeStampedVariableInfosRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceGetTimeStampedVariableInfosRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceGetTimeStampedVariableInfosRequest& ISubscriptionServiceGetTimeStampedVariableInfosRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceGetTimeStampedVariableInfosRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceGetTimeStampedVariableInfosRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriptionid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceGetTimeStampedVariableInfosRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceGetTimeStampedVariableInfosRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
  return target;
}

size_t ISubscriptionServiceGetTimeStampedVariableInfosRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceGetTimeStampedVariableInfosRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceGetTimeStampedVariableInfosRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceGetTimeStampedVariableInfosRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceGetTimeStampedVariableInfosRequest::MergeFrom(const ISubscriptionServiceGetTimeStampedVariableInfosRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceGetTimeStampedVariableInfosRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceGetTimeStampedVariableInfosRequest::CopyFrom(const ISubscriptionServiceGetTimeStampedVariableInfosRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceGetTimeStampedVariableInfosRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceGetTimeStampedVariableInfosRequest::InternalSwap(ISubscriptionServiceGetTimeStampedVariableInfosRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(subscriptionid_, other->subscriptionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceGetTimeStampedVariableInfosRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceGetRecordInfosRequest::_Internal {
 public:
};

ISubscriptionServiceGetRecordInfosRequest::ISubscriptionServiceGetRecordInfosRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
}
ISubscriptionServiceGetRecordInfosRequest::ISubscriptionServiceGetRecordInfosRequest(const ISubscriptionServiceGetRecordInfosRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subscriptionid_ = from.subscriptionid_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
}

void ISubscriptionServiceGetRecordInfosRequest::SharedCtor() {
  subscriptionid_ = 0u;
}

ISubscriptionServiceGetRecordInfosRequest::~ISubscriptionServiceGetRecordInfosRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceGetRecordInfosRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceGetRecordInfosRequest::ArenaDtor(void* object) {
  ISubscriptionServiceGetRecordInfosRequest* _this = reinterpret_cast< ISubscriptionServiceGetRecordInfosRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceGetRecordInfosRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceGetRecordInfosRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceGetRecordInfosRequest& ISubscriptionServiceGetRecordInfosRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceGetRecordInfosRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceGetRecordInfosRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriptionid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceGetRecordInfosRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceGetRecordInfosRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
  return target;
}

size_t ISubscriptionServiceGetRecordInfosRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceGetRecordInfosRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceGetRecordInfosRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceGetRecordInfosRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceGetRecordInfosRequest::MergeFrom(const ISubscriptionServiceGetRecordInfosRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceGetRecordInfosRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceGetRecordInfosRequest::CopyFrom(const ISubscriptionServiceGetRecordInfosRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceGetRecordInfosRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceGetRecordInfosRequest::InternalSwap(ISubscriptionServiceGetRecordInfosRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(subscriptionid_, other->subscriptionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceGetRecordInfosRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceReadValuesRequest::_Internal {
 public:
};

ISubscriptionServiceReadValuesRequest::ISubscriptionServiceReadValuesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
}
ISubscriptionServiceReadValuesRequest::ISubscriptionServiceReadValuesRequest(const ISubscriptionServiceReadValuesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subscriptionid_ = from.subscriptionid_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
}

void ISubscriptionServiceReadValuesRequest::SharedCtor() {
  subscriptionid_ = 0u;
}

ISubscriptionServiceReadValuesRequest::~ISubscriptionServiceReadValuesRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceReadValuesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceReadValuesRequest::ArenaDtor(void* object) {
  ISubscriptionServiceReadValuesRequest* _this = reinterpret_cast< ISubscriptionServiceReadValuesRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceReadValuesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceReadValuesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceReadValuesRequest& ISubscriptionServiceReadValuesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceReadValuesRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceReadValuesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriptionid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceReadValuesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceReadValuesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
  return target;
}

size_t ISubscriptionServiceReadValuesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceReadValuesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceReadValuesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceReadValuesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceReadValuesRequest::MergeFrom(const ISubscriptionServiceReadValuesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceReadValuesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceReadValuesRequest::CopyFrom(const ISubscriptionServiceReadValuesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceReadValuesRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceReadValuesRequest::InternalSwap(ISubscriptionServiceReadValuesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(subscriptionid_, other->subscriptionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceReadValuesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceReadTimeStampedValuesRequest::_Internal {
 public:
};

ISubscriptionServiceReadTimeStampedValuesRequest::ISubscriptionServiceReadTimeStampedValuesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
}
ISubscriptionServiceReadTimeStampedValuesRequest::ISubscriptionServiceReadTimeStampedValuesRequest(const ISubscriptionServiceReadTimeStampedValuesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  subscriptionid_ = from.subscriptionid_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
}

void ISubscriptionServiceReadTimeStampedValuesRequest::SharedCtor() {
  subscriptionid_ = 0u;
}

ISubscriptionServiceReadTimeStampedValuesRequest::~ISubscriptionServiceReadTimeStampedValuesRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceReadTimeStampedValuesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceReadTimeStampedValuesRequest::ArenaDtor(void* object) {
  ISubscriptionServiceReadTimeStampedValuesRequest* _this = reinterpret_cast< ISubscriptionServiceReadTimeStampedValuesRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceReadTimeStampedValuesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceReadTimeStampedValuesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceReadTimeStampedValuesRequest& ISubscriptionServiceReadTimeStampedValuesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceReadTimeStampedValuesRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceReadTimeStampedValuesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subscriptionid_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceReadTimeStampedValuesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceReadTimeStampedValuesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
  return target;
}

size_t ISubscriptionServiceReadTimeStampedValuesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceReadTimeStampedValuesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceReadTimeStampedValuesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceReadTimeStampedValuesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceReadTimeStampedValuesRequest::MergeFrom(const ISubscriptionServiceReadTimeStampedValuesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
}

void ISubscriptionServiceReadTimeStampedValuesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceReadTimeStampedValuesRequest::CopyFrom(const ISubscriptionServiceReadTimeStampedValuesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceReadTimeStampedValuesRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceReadTimeStampedValuesRequest::InternalSwap(ISubscriptionServiceReadTimeStampedValuesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(subscriptionid_, other->subscriptionid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceReadTimeStampedValuesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceReadRecordsRequest::_Internal {
 public:
};

ISubscriptionServiceReadRecordsRequest::ISubscriptionServiceReadRecordsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
}
ISubscriptionServiceReadRecordsRequest::ISubscriptionServiceReadRecordsRequest(const ISubscriptionServiceReadRecordsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&subscriptionid_, &from.subscriptionid_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&subscriptionid_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
}

void ISubscriptionServiceReadRecordsRequest::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&subscriptionid_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&subscriptionid_)) + sizeof(count_));
}

ISubscriptionServiceReadRecordsRequest::~ISubscriptionServiceReadRecordsRequest() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceReadRecordsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceReadRecordsRequest::ArenaDtor(void* object) {
  ISubscriptionServiceReadRecordsRequest* _this = reinterpret_cast< ISubscriptionServiceReadRecordsRequest* >(object);
  (void)_this;
}
void ISubscriptionServiceReadRecordsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceReadRecordsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceReadRecordsRequest& ISubscriptionServiceReadRecordsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceReadRecordsRequest_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceReadRecordsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&subscriptionid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&subscriptionid_)) + sizeof(count_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceReadRecordsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 subscriptionId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          subscriptionid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 count = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          count_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceReadRecordsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_subscriptionid(), target);
  }

  // int32 count = 2;
  if (this->count() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_count(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
  return target;
}

size_t ISubscriptionServiceReadRecordsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 subscriptionId = 1;
  if (this->subscriptionid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_subscriptionid());
  }

  // int32 count = 2;
  if (this->count() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_count());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceReadRecordsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceReadRecordsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceReadRecordsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceReadRecordsRequest::MergeFrom(const ISubscriptionServiceReadRecordsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.subscriptionid() != 0) {
    _internal_set_subscriptionid(from._internal_subscriptionid());
  }
  if (from.count() != 0) {
    _internal_set_count(from._internal_count());
  }
}

void ISubscriptionServiceReadRecordsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceReadRecordsRequest::CopyFrom(const ISubscriptionServiceReadRecordsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceReadRecordsRequest::IsInitialized() const {
  return true;
}

void ISubscriptionServiceReadRecordsRequest::InternalSwap(ISubscriptionServiceReadRecordsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ISubscriptionServiceReadRecordsRequest, count_)
      + sizeof(ISubscriptionServiceReadRecordsRequest::count_)
      - PROTOBUF_FIELD_OFFSET(ISubscriptionServiceReadRecordsRequest, subscriptionid_)>(
          reinterpret_cast<char*>(&subscriptionid_),
          reinterpret_cast<char*>(&other->subscriptionid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceReadRecordsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceCreateSubscriptionResponse::_Internal {
 public:
};

ISubscriptionServiceCreateSubscriptionResponse::ISubscriptionServiceCreateSubscriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
}
ISubscriptionServiceCreateSubscriptionResponse::ISubscriptionServiceCreateSubscriptionResponse(const ISubscriptionServiceCreateSubscriptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
}

void ISubscriptionServiceCreateSubscriptionResponse::SharedCtor() {
  _returnvalue_ = 0u;
}

ISubscriptionServiceCreateSubscriptionResponse::~ISubscriptionServiceCreateSubscriptionResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceCreateSubscriptionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceCreateSubscriptionResponse::ArenaDtor(void* object) {
  ISubscriptionServiceCreateSubscriptionResponse* _this = reinterpret_cast< ISubscriptionServiceCreateSubscriptionResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceCreateSubscriptionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceCreateSubscriptionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceCreateSubscriptionResponse& ISubscriptionServiceCreateSubscriptionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceCreateSubscriptionResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceCreateSubscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceCreateSubscriptionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _returnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceCreateSubscriptionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
  return target;
}

size_t ISubscriptionServiceCreateSubscriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceCreateSubscriptionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceCreateSubscriptionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceCreateSubscriptionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceCreateSubscriptionResponse::MergeFrom(const ISubscriptionServiceCreateSubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceCreateSubscriptionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceCreateSubscriptionResponse::CopyFrom(const ISubscriptionServiceCreateSubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateSubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceCreateSubscriptionResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceCreateSubscriptionResponse::InternalSwap(ISubscriptionServiceCreateSubscriptionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceCreateSubscriptionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceCreateRecordingSubscriptionResponse::_Internal {
 public:
};

ISubscriptionServiceCreateRecordingSubscriptionResponse::ISubscriptionServiceCreateRecordingSubscriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
}
ISubscriptionServiceCreateRecordingSubscriptionResponse::ISubscriptionServiceCreateRecordingSubscriptionResponse(const ISubscriptionServiceCreateRecordingSubscriptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
}

void ISubscriptionServiceCreateRecordingSubscriptionResponse::SharedCtor() {
  _returnvalue_ = 0u;
}

ISubscriptionServiceCreateRecordingSubscriptionResponse::~ISubscriptionServiceCreateRecordingSubscriptionResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceCreateRecordingSubscriptionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceCreateRecordingSubscriptionResponse::ArenaDtor(void* object) {
  ISubscriptionServiceCreateRecordingSubscriptionResponse* _this = reinterpret_cast< ISubscriptionServiceCreateRecordingSubscriptionResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceCreateRecordingSubscriptionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceCreateRecordingSubscriptionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceCreateRecordingSubscriptionResponse& ISubscriptionServiceCreateRecordingSubscriptionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceCreateRecordingSubscriptionResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceCreateRecordingSubscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceCreateRecordingSubscriptionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _returnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceCreateRecordingSubscriptionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
  return target;
}

size_t ISubscriptionServiceCreateRecordingSubscriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceCreateRecordingSubscriptionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceCreateRecordingSubscriptionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceCreateRecordingSubscriptionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceCreateRecordingSubscriptionResponse::MergeFrom(const ISubscriptionServiceCreateRecordingSubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceCreateRecordingSubscriptionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceCreateRecordingSubscriptionResponse::CopyFrom(const ISubscriptionServiceCreateRecordingSubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceCreateRecordingSubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceCreateRecordingSubscriptionResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceCreateRecordingSubscriptionResponse::InternalSwap(ISubscriptionServiceCreateRecordingSubscriptionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceCreateRecordingSubscriptionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceAddVariableResponse::_Internal {
 public:
};

ISubscriptionServiceAddVariableResponse::ISubscriptionServiceAddVariableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
}
ISubscriptionServiceAddVariableResponse::ISubscriptionServiceAddVariableResponse(const ISubscriptionServiceAddVariableResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
}

void ISubscriptionServiceAddVariableResponse::SharedCtor() {
  _returnvalue_ = 0;
}

ISubscriptionServiceAddVariableResponse::~ISubscriptionServiceAddVariableResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceAddVariableResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceAddVariableResponse::ArenaDtor(void* object) {
  ISubscriptionServiceAddVariableResponse* _this = reinterpret_cast< ISubscriptionServiceAddVariableResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceAddVariableResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceAddVariableResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceAddVariableResponse& ISubscriptionServiceAddVariableResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceAddVariableResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceAddVariableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceAddVariableResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceAddVariableResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
  return target;
}

size_t ISubscriptionServiceAddVariableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceAddVariableResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceAddVariableResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceAddVariableResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceAddVariableResponse::MergeFrom(const ISubscriptionServiceAddVariableResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceAddVariableResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceAddVariableResponse::CopyFrom(const ISubscriptionServiceAddVariableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceAddVariableResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceAddVariableResponse::InternalSwap(ISubscriptionServiceAddVariableResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceAddVariableResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceAddVariablesResponse::_Internal {
 public:
};

ISubscriptionServiceAddVariablesResponse::ISubscriptionServiceAddVariablesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  _returnvalue_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
}
ISubscriptionServiceAddVariablesResponse::ISubscriptionServiceAddVariablesResponse(const ISubscriptionServiceAddVariablesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _returnvalue_(from._returnvalue_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
}

void ISubscriptionServiceAddVariablesResponse::SharedCtor() {
}

ISubscriptionServiceAddVariablesResponse::~ISubscriptionServiceAddVariablesResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceAddVariablesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceAddVariablesResponse::ArenaDtor(void* object) {
  ISubscriptionServiceAddVariablesResponse* _this = reinterpret_cast< ISubscriptionServiceAddVariablesResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceAddVariablesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceAddVariablesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceAddVariablesResponse& ISubscriptionServiceAddVariablesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceAddVariablesResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceAddVariablesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceAddVariablesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedEnumParser(_internal_mutable__returnvalue(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_add__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceAddVariablesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  {
    int byte_size = __returnvalue_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteEnumPacked(
          1, _returnvalue_, byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
  return target;
}

size_t ISubscriptionServiceAddVariablesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->_internal__returnvalue_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(
        this->_internal__returnvalue(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    __returnvalue_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceAddVariablesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceAddVariablesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceAddVariablesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceAddVariablesResponse::MergeFrom(const ISubscriptionServiceAddVariablesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  _returnvalue_.MergeFrom(from._returnvalue_);
}

void ISubscriptionServiceAddVariablesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceAddVariablesResponse::CopyFrom(const ISubscriptionServiceAddVariablesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceAddVariablesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceAddVariablesResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceAddVariablesResponse::InternalSwap(ISubscriptionServiceAddVariablesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  _returnvalue_.InternalSwap(&other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceAddVariablesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceRemoveVariableResponse::_Internal {
 public:
};

ISubscriptionServiceRemoveVariableResponse::ISubscriptionServiceRemoveVariableResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
}
ISubscriptionServiceRemoveVariableResponse::ISubscriptionServiceRemoveVariableResponse(const ISubscriptionServiceRemoveVariableResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
}

void ISubscriptionServiceRemoveVariableResponse::SharedCtor() {
  _returnvalue_ = 0;
}

ISubscriptionServiceRemoveVariableResponse::~ISubscriptionServiceRemoveVariableResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceRemoveVariableResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceRemoveVariableResponse::ArenaDtor(void* object) {
  ISubscriptionServiceRemoveVariableResponse* _this = reinterpret_cast< ISubscriptionServiceRemoveVariableResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceRemoveVariableResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceRemoveVariableResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceRemoveVariableResponse& ISubscriptionServiceRemoveVariableResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceRemoveVariableResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceRemoveVariableResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceRemoveVariableResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceRemoveVariableResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
  return target;
}

size_t ISubscriptionServiceRemoveVariableResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceRemoveVariableResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceRemoveVariableResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceRemoveVariableResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceRemoveVariableResponse::MergeFrom(const ISubscriptionServiceRemoveVariableResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceRemoveVariableResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceRemoveVariableResponse::CopyFrom(const ISubscriptionServiceRemoveVariableResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceRemoveVariableResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceRemoveVariableResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceRemoveVariableResponse::InternalSwap(ISubscriptionServiceRemoveVariableResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceRemoveVariableResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceSubscribeResponse::_Internal {
 public:
};

ISubscriptionServiceSubscribeResponse::ISubscriptionServiceSubscribeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
}
ISubscriptionServiceSubscribeResponse::ISubscriptionServiceSubscribeResponse(const ISubscriptionServiceSubscribeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
}

void ISubscriptionServiceSubscribeResponse::SharedCtor() {
  _returnvalue_ = 0;
}

ISubscriptionServiceSubscribeResponse::~ISubscriptionServiceSubscribeResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceSubscribeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceSubscribeResponse::ArenaDtor(void* object) {
  ISubscriptionServiceSubscribeResponse* _this = reinterpret_cast< ISubscriptionServiceSubscribeResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceSubscribeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceSubscribeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceSubscribeResponse& ISubscriptionServiceSubscribeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceSubscribeResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceSubscribeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceSubscribeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceSubscribeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
  return target;
}

size_t ISubscriptionServiceSubscribeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceSubscribeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceSubscribeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceSubscribeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceSubscribeResponse::MergeFrom(const ISubscriptionServiceSubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceSubscribeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceSubscribeResponse::CopyFrom(const ISubscriptionServiceSubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceSubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceSubscribeResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceSubscribeResponse::InternalSwap(ISubscriptionServiceSubscribeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceSubscribeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceResubscribeResponse::_Internal {
 public:
};

ISubscriptionServiceResubscribeResponse::ISubscriptionServiceResubscribeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
}
ISubscriptionServiceResubscribeResponse::ISubscriptionServiceResubscribeResponse(const ISubscriptionServiceResubscribeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
}

void ISubscriptionServiceResubscribeResponse::SharedCtor() {
  _returnvalue_ = 0;
}

ISubscriptionServiceResubscribeResponse::~ISubscriptionServiceResubscribeResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceResubscribeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceResubscribeResponse::ArenaDtor(void* object) {
  ISubscriptionServiceResubscribeResponse* _this = reinterpret_cast< ISubscriptionServiceResubscribeResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceResubscribeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceResubscribeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceResubscribeResponse& ISubscriptionServiceResubscribeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceResubscribeResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceResubscribeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceResubscribeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceResubscribeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
  return target;
}

size_t ISubscriptionServiceResubscribeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceResubscribeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceResubscribeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceResubscribeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceResubscribeResponse::MergeFrom(const ISubscriptionServiceResubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceResubscribeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceResubscribeResponse::CopyFrom(const ISubscriptionServiceResubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceResubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceResubscribeResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceResubscribeResponse::InternalSwap(ISubscriptionServiceResubscribeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceResubscribeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceUnsubscribeResponse::_Internal {
 public:
};

ISubscriptionServiceUnsubscribeResponse::ISubscriptionServiceUnsubscribeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
}
ISubscriptionServiceUnsubscribeResponse::ISubscriptionServiceUnsubscribeResponse(const ISubscriptionServiceUnsubscribeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
}

void ISubscriptionServiceUnsubscribeResponse::SharedCtor() {
  _returnvalue_ = 0;
}

ISubscriptionServiceUnsubscribeResponse::~ISubscriptionServiceUnsubscribeResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceUnsubscribeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceUnsubscribeResponse::ArenaDtor(void* object) {
  ISubscriptionServiceUnsubscribeResponse* _this = reinterpret_cast< ISubscriptionServiceUnsubscribeResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceUnsubscribeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceUnsubscribeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceUnsubscribeResponse& ISubscriptionServiceUnsubscribeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceUnsubscribeResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceUnsubscribeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceUnsubscribeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceUnsubscribeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
  return target;
}

size_t ISubscriptionServiceUnsubscribeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceUnsubscribeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceUnsubscribeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceUnsubscribeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceUnsubscribeResponse::MergeFrom(const ISubscriptionServiceUnsubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceUnsubscribeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceUnsubscribeResponse::CopyFrom(const ISubscriptionServiceUnsubscribeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceUnsubscribeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceUnsubscribeResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceUnsubscribeResponse::InternalSwap(ISubscriptionServiceUnsubscribeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceUnsubscribeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceDeleteSubscriptionResponse::_Internal {
 public:
};

ISubscriptionServiceDeleteSubscriptionResponse::ISubscriptionServiceDeleteSubscriptionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
}
ISubscriptionServiceDeleteSubscriptionResponse::ISubscriptionServiceDeleteSubscriptionResponse(const ISubscriptionServiceDeleteSubscriptionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
}

void ISubscriptionServiceDeleteSubscriptionResponse::SharedCtor() {
  _returnvalue_ = 0;
}

ISubscriptionServiceDeleteSubscriptionResponse::~ISubscriptionServiceDeleteSubscriptionResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceDeleteSubscriptionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceDeleteSubscriptionResponse::ArenaDtor(void* object) {
  ISubscriptionServiceDeleteSubscriptionResponse* _this = reinterpret_cast< ISubscriptionServiceDeleteSubscriptionResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceDeleteSubscriptionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceDeleteSubscriptionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceDeleteSubscriptionResponse& ISubscriptionServiceDeleteSubscriptionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceDeleteSubscriptionResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceDeleteSubscriptionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceDeleteSubscriptionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceDeleteSubscriptionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
  return target;
}

size_t ISubscriptionServiceDeleteSubscriptionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceDeleteSubscriptionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceDeleteSubscriptionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceDeleteSubscriptionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceDeleteSubscriptionResponse::MergeFrom(const ISubscriptionServiceDeleteSubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceDeleteSubscriptionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceDeleteSubscriptionResponse::CopyFrom(const ISubscriptionServiceDeleteSubscriptionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceDeleteSubscriptionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceDeleteSubscriptionResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceDeleteSubscriptionResponse::InternalSwap(ISubscriptionServiceDeleteSubscriptionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceDeleteSubscriptionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceGetVariableInfosResponse::_Internal {
 public:
};

void ISubscriptionServiceGetVariableInfosResponse::clear_variableinfo() {
  variableinfo_.Clear();
}
ISubscriptionServiceGetVariableInfosResponse::ISubscriptionServiceGetVariableInfosResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  variableinfo_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
}
ISubscriptionServiceGetVariableInfosResponse::ISubscriptionServiceGetVariableInfosResponse(const ISubscriptionServiceGetVariableInfosResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      variableinfo_(from.variableinfo_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
}

void ISubscriptionServiceGetVariableInfosResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ISubscriptionServiceGetVariableInfosResponse_ISubscriptionService_2eproto.base);
  _returnvalue_ = 0;
}

ISubscriptionServiceGetVariableInfosResponse::~ISubscriptionServiceGetVariableInfosResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceGetVariableInfosResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceGetVariableInfosResponse::ArenaDtor(void* object) {
  ISubscriptionServiceGetVariableInfosResponse* _this = reinterpret_cast< ISubscriptionServiceGetVariableInfosResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceGetVariableInfosResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceGetVariableInfosResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceGetVariableInfosResponse& ISubscriptionServiceGetVariableInfosResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceGetVariableInfosResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceGetVariableInfosResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variableinfo_.Clear();
  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceGetVariableInfosResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo variableInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_variableinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceGetVariableInfosResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo variableInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_variableinfo_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_variableinfo(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
  return target;
}

size_t ISubscriptionServiceGetVariableInfosResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo variableInfo = 2;
  total_size += 1UL * this->_internal_variableinfo_size();
  for (const auto& msg : this->variableinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceGetVariableInfosResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceGetVariableInfosResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceGetVariableInfosResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceGetVariableInfosResponse::MergeFrom(const ISubscriptionServiceGetVariableInfosResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variableinfo_.MergeFrom(from.variableinfo_);
  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceGetVariableInfosResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceGetVariableInfosResponse::CopyFrom(const ISubscriptionServiceGetVariableInfosResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetVariableInfosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceGetVariableInfosResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceGetVariableInfosResponse::InternalSwap(ISubscriptionServiceGetVariableInfosResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  variableinfo_.InternalSwap(&other->variableinfo_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceGetVariableInfosResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceGetTimeStampedVariableInfosResponse::_Internal {
 public:
};

void ISubscriptionServiceGetTimeStampedVariableInfosResponse::clear_variableinfo() {
  variableinfo_.Clear();
}
ISubscriptionServiceGetTimeStampedVariableInfosResponse::ISubscriptionServiceGetTimeStampedVariableInfosResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  variableinfo_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
}
ISubscriptionServiceGetTimeStampedVariableInfosResponse::ISubscriptionServiceGetTimeStampedVariableInfosResponse(const ISubscriptionServiceGetTimeStampedVariableInfosResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      variableinfo_(from.variableinfo_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
}

void ISubscriptionServiceGetTimeStampedVariableInfosResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ISubscriptionServiceGetTimeStampedVariableInfosResponse_ISubscriptionService_2eproto.base);
  _returnvalue_ = 0;
}

ISubscriptionServiceGetTimeStampedVariableInfosResponse::~ISubscriptionServiceGetTimeStampedVariableInfosResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceGetTimeStampedVariableInfosResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceGetTimeStampedVariableInfosResponse::ArenaDtor(void* object) {
  ISubscriptionServiceGetTimeStampedVariableInfosResponse* _this = reinterpret_cast< ISubscriptionServiceGetTimeStampedVariableInfosResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceGetTimeStampedVariableInfosResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceGetTimeStampedVariableInfosResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceGetTimeStampedVariableInfosResponse& ISubscriptionServiceGetTimeStampedVariableInfosResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceGetTimeStampedVariableInfosResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceGetTimeStampedVariableInfosResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  variableinfo_.Clear();
  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceGetTimeStampedVariableInfosResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo variableInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_variableinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceGetTimeStampedVariableInfosResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo variableInfo = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_variableinfo_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_variableinfo(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
  return target;
}

size_t ISubscriptionServiceGetTimeStampedVariableInfosResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo variableInfo = 2;
  total_size += 1UL * this->_internal_variableinfo_size();
  for (const auto& msg : this->variableinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceGetTimeStampedVariableInfosResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceGetTimeStampedVariableInfosResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceGetTimeStampedVariableInfosResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceGetTimeStampedVariableInfosResponse::MergeFrom(const ISubscriptionServiceGetTimeStampedVariableInfosResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  variableinfo_.MergeFrom(from.variableinfo_);
  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceGetTimeStampedVariableInfosResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceGetTimeStampedVariableInfosResponse::CopyFrom(const ISubscriptionServiceGetTimeStampedVariableInfosResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetTimeStampedVariableInfosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceGetTimeStampedVariableInfosResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceGetTimeStampedVariableInfosResponse::InternalSwap(ISubscriptionServiceGetTimeStampedVariableInfosResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  variableinfo_.InternalSwap(&other->variableinfo_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceGetTimeStampedVariableInfosResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceGetRecordInfosResponse::_Internal {
 public:
};

void ISubscriptionServiceGetRecordInfosResponse::clear_recordinfos() {
  recordinfos_.Clear();
}
ISubscriptionServiceGetRecordInfosResponse::ISubscriptionServiceGetRecordInfosResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  recordinfos_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
}
ISubscriptionServiceGetRecordInfosResponse::ISubscriptionServiceGetRecordInfosResponse(const ISubscriptionServiceGetRecordInfosResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      recordinfos_(from.recordinfos_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
}

void ISubscriptionServiceGetRecordInfosResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ISubscriptionServiceGetRecordInfosResponse_ISubscriptionService_2eproto.base);
  _returnvalue_ = 0;
}

ISubscriptionServiceGetRecordInfosResponse::~ISubscriptionServiceGetRecordInfosResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceGetRecordInfosResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceGetRecordInfosResponse::ArenaDtor(void* object) {
  ISubscriptionServiceGetRecordInfosResponse* _this = reinterpret_cast< ISubscriptionServiceGetRecordInfosResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceGetRecordInfosResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceGetRecordInfosResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceGetRecordInfosResponse& ISubscriptionServiceGetRecordInfosResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceGetRecordInfosResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceGetRecordInfosResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recordinfos_.Clear();
  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceGetRecordInfosResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo recordInfos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_recordinfos(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceGetRecordInfosResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo recordInfos = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_recordinfos_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_recordinfos(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
  return target;
}

size_t ISubscriptionServiceGetRecordInfosResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Plc.Gds.Services.Grpc.VariableInfo recordInfos = 2;
  total_size += 1UL * this->_internal_recordinfos_size();
  for (const auto& msg : this->recordinfos_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceGetRecordInfosResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceGetRecordInfosResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceGetRecordInfosResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceGetRecordInfosResponse::MergeFrom(const ISubscriptionServiceGetRecordInfosResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  recordinfos_.MergeFrom(from.recordinfos_);
  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceGetRecordInfosResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceGetRecordInfosResponse::CopyFrom(const ISubscriptionServiceGetRecordInfosResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceGetRecordInfosResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceGetRecordInfosResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceGetRecordInfosResponse::InternalSwap(ISubscriptionServiceGetRecordInfosResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recordinfos_.InternalSwap(&other->recordinfos_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceGetRecordInfosResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceReadValuesResponse::_Internal {
 public:
};

void ISubscriptionServiceReadValuesResponse::clear_values() {
  values_.Clear();
}
ISubscriptionServiceReadValuesResponse::ISubscriptionServiceReadValuesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
}
ISubscriptionServiceReadValuesResponse::ISubscriptionServiceReadValuesResponse(const ISubscriptionServiceReadValuesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
}

void ISubscriptionServiceReadValuesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ISubscriptionServiceReadValuesResponse_ISubscriptionService_2eproto.base);
  _returnvalue_ = 0;
}

ISubscriptionServiceReadValuesResponse::~ISubscriptionServiceReadValuesResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceReadValuesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceReadValuesResponse::ArenaDtor(void* object) {
  ISubscriptionServiceReadValuesResponse* _this = reinterpret_cast< ISubscriptionServiceReadValuesResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceReadValuesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceReadValuesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceReadValuesResponse& ISubscriptionServiceReadValuesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceReadValuesResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceReadValuesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceReadValuesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      // repeated .Arp.Type.Grpc.ObjectType values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceReadValuesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  // repeated .Arp.Type.Grpc.ObjectType values = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
  return target;
}

size_t ISubscriptionServiceReadValuesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Type.Grpc.ObjectType values = 2;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceReadValuesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceReadValuesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceReadValuesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceReadValuesResponse::MergeFrom(const ISubscriptionServiceReadValuesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceReadValuesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceReadValuesResponse::CopyFrom(const ISubscriptionServiceReadValuesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadValuesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceReadValuesResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceReadValuesResponse::InternalSwap(ISubscriptionServiceReadValuesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceReadValuesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceReadTimeStampedValuesResponse::_Internal {
 public:
};

void ISubscriptionServiceReadTimeStampedValuesResponse::clear_values() {
  values_.Clear();
}
ISubscriptionServiceReadTimeStampedValuesResponse::ISubscriptionServiceReadTimeStampedValuesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
}
ISubscriptionServiceReadTimeStampedValuesResponse::ISubscriptionServiceReadTimeStampedValuesResponse(const ISubscriptionServiceReadTimeStampedValuesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
}

void ISubscriptionServiceReadTimeStampedValuesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ISubscriptionServiceReadTimeStampedValuesResponse_ISubscriptionService_2eproto.base);
  _returnvalue_ = 0;
}

ISubscriptionServiceReadTimeStampedValuesResponse::~ISubscriptionServiceReadTimeStampedValuesResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceReadTimeStampedValuesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceReadTimeStampedValuesResponse::ArenaDtor(void* object) {
  ISubscriptionServiceReadTimeStampedValuesResponse* _this = reinterpret_cast< ISubscriptionServiceReadTimeStampedValuesResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceReadTimeStampedValuesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceReadTimeStampedValuesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceReadTimeStampedValuesResponse& ISubscriptionServiceReadTimeStampedValuesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceReadTimeStampedValuesResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceReadTimeStampedValuesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceReadTimeStampedValuesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      // repeated .Arp.Type.Grpc.ObjectType values = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceReadTimeStampedValuesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  // repeated .Arp.Type.Grpc.ObjectType values = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
  return target;
}

size_t ISubscriptionServiceReadTimeStampedValuesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Type.Grpc.ObjectType values = 2;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceReadTimeStampedValuesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceReadTimeStampedValuesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceReadTimeStampedValuesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceReadTimeStampedValuesResponse::MergeFrom(const ISubscriptionServiceReadTimeStampedValuesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceReadTimeStampedValuesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceReadTimeStampedValuesResponse::CopyFrom(const ISubscriptionServiceReadTimeStampedValuesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadTimeStampedValuesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceReadTimeStampedValuesResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceReadTimeStampedValuesResponse::InternalSwap(ISubscriptionServiceReadTimeStampedValuesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceReadTimeStampedValuesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ISubscriptionServiceReadRecordsResponse::_Internal {
 public:
};

void ISubscriptionServiceReadRecordsResponse::clear_records() {
  records_.Clear();
}
ISubscriptionServiceReadRecordsResponse::ISubscriptionServiceReadRecordsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  records_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
}
ISubscriptionServiceReadRecordsResponse::ISubscriptionServiceReadRecordsResponse(const ISubscriptionServiceReadRecordsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      records_(from.records_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
}

void ISubscriptionServiceReadRecordsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ISubscriptionServiceReadRecordsResponse_ISubscriptionService_2eproto.base);
  _returnvalue_ = 0;
}

ISubscriptionServiceReadRecordsResponse::~ISubscriptionServiceReadRecordsResponse() {
  // @@protoc_insertion_point(destructor:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ISubscriptionServiceReadRecordsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ISubscriptionServiceReadRecordsResponse::ArenaDtor(void* object) {
  ISubscriptionServiceReadRecordsResponse* _this = reinterpret_cast< ISubscriptionServiceReadRecordsResponse* >(object);
  (void)_this;
}
void ISubscriptionServiceReadRecordsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ISubscriptionServiceReadRecordsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ISubscriptionServiceReadRecordsResponse& ISubscriptionServiceReadRecordsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ISubscriptionServiceReadRecordsResponse_ISubscriptionService_2eproto.base);
  return *internal_default_instance();
}


void ISubscriptionServiceReadRecordsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  records_.Clear();
  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ISubscriptionServiceReadRecordsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::Plc::Gds::Services::Grpc::DataAccessError>(val));
        } else goto handle_unusual;
        continue;
      // repeated .Arp.Type.Grpc.ObjectType records = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_records(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ISubscriptionServiceReadRecordsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  // repeated .Arp.Type.Grpc.ObjectType records = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_records_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_records(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
  return target;
}

size_t ISubscriptionServiceReadRecordsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Type.Grpc.ObjectType records = 2;
  total_size += 1UL * this->_internal_records_size();
  for (const auto& msg : this->records_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .Arp.Plc.Gds.Services.Grpc.DataAccessError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ISubscriptionServiceReadRecordsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ISubscriptionServiceReadRecordsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ISubscriptionServiceReadRecordsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
    MergeFrom(*source);
  }
}

void ISubscriptionServiceReadRecordsResponse::MergeFrom(const ISubscriptionServiceReadRecordsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  records_.MergeFrom(from.records_);
  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void ISubscriptionServiceReadRecordsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ISubscriptionServiceReadRecordsResponse::CopyFrom(const ISubscriptionServiceReadRecordsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Plc.Gds.Services.Grpc.ISubscriptionServiceReadRecordsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ISubscriptionServiceReadRecordsResponse::IsInitialized() const {
  return true;
}

void ISubscriptionServiceReadRecordsResponse::InternalSwap(ISubscriptionServiceReadRecordsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  records_.InternalSwap(&other->records_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ISubscriptionServiceReadRecordsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Grpc
}  // namespace Services
}  // namespace Gds
}  // namespace Plc
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsRequest* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateSubscriptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceCreateRecordingSubscriptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariableResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceAddVariablesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceRemoveVariableResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceSubscribeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceResubscribeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceUnsubscribeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceDeleteSubscriptionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetVariableInfosResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetTimeStampedVariableInfosResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceGetRecordInfosResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadValuesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadTimeStampedValuesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsResponse* Arena::CreateMaybeMessage< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Plc::Gds::Services::Grpc::ISubscriptionServiceReadRecordsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
