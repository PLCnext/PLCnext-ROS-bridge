// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ArpTypes.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_ArpTypes_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_ArpTypes_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_ArpTypes_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_ArpTypes_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ArpTypes_2eproto;
namespace Arp {
namespace Type {
namespace Grpc {
class ObjectType;
class ObjectTypeDefaultTypeInternal;
extern ObjectTypeDefaultTypeInternal _ObjectType_default_instance_;
class TypeArray;
class TypeArrayDefaultTypeInternal;
extern TypeArrayDefaultTypeInternal _TypeArray_default_instance_;
class TypeStruct;
class TypeStructDefaultTypeInternal;
extern TypeStructDefaultTypeInternal _TypeStruct_default_instance_;
}  // namespace Grpc
}  // namespace Type
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
template<> ::Arp::Type::Grpc::ObjectType* Arena::CreateMaybeMessage<::Arp::Type::Grpc::ObjectType>(Arena*);
template<> ::Arp::Type::Grpc::TypeArray* Arena::CreateMaybeMessage<::Arp::Type::Grpc::TypeArray>(Arena*);
template<> ::Arp::Type::Grpc::TypeStruct* Arena::CreateMaybeMessage<::Arp::Type::Grpc::TypeStruct>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Arp {
namespace Type {
namespace Grpc {

enum CoreType : int {
  CT_None = 0,
  CT_End = 0,
  CT_Void = 1,
  CT_Boolean = 2,
  CT_Char = 3,
  CT_Int8 = 4,
  CT_Uint8 = 5,
  CT_Int16 = 6,
  CT_Uint16 = 7,
  CT_Int32 = 8,
  CT_Uint32 = 9,
  CT_Int64 = 10,
  CT_Uint64 = 11,
  CT_Real32 = 12,
  CT_Real64 = 13,
  CT_Struct = 18,
  CT_String = 19,
  CT_Utf8String = 19,
  CT_Array = 20,
  CT_DateTime = 23,
  CT_Version = 24,
  CT_Guid = 25,
  CT_AnsiString = 26,
  CT_Object = 28,
  CT_Utf16String = 30,
  CT_Stream = 34,
  CT_Enumerator = 35,
  CT_SecureString = 36,
  CT_Enum = 37,
  CT_Dictionary = 38,
  CT_SecurityToken = 39,
  CT_Exception = 40,
  CT_IecTime = 41,
  CT_IecTime64 = 42,
  CT_IecDate = 43,
  CT_IecDate64 = 44,
  CT_IecDateTime = 45,
  CT_IecDateTime64 = 46,
  CT_IecTimeOfDay = 47,
  CT_IecTimeOfDay64 = 48,
  CoreType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::min(),
  CoreType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::PROTOBUF_NAMESPACE_ID::int32>::max()
};
bool CoreType_IsValid(int value);
constexpr CoreType CoreType_MIN = CT_None;
constexpr CoreType CoreType_MAX = CT_IecTimeOfDay64;
constexpr int CoreType_ARRAYSIZE = CoreType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CoreType_descriptor();
template<typename T>
inline const std::string& CoreType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, CoreType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function CoreType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    CoreType_descriptor(), enum_t_value);
}
inline bool CoreType_Parse(
    ::PROTOBUF_NAMESPACE_ID::ConstStringParam name, CoreType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<CoreType>(
    CoreType_descriptor(), name, value);
}
// ===================================================================

class TypeStruct PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Type.Grpc.TypeStruct) */ {
 public:
  inline TypeStruct() : TypeStruct(nullptr) {}
  virtual ~TypeStruct();

  TypeStruct(const TypeStruct& from);
  TypeStruct(TypeStruct&& from) noexcept
    : TypeStruct() {
    *this = ::std::move(from);
  }

  inline TypeStruct& operator=(const TypeStruct& from) {
    CopyFrom(from);
    return *this;
  }
  inline TypeStruct& operator=(TypeStruct&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TypeStruct& default_instance();

  static inline const TypeStruct* internal_default_instance() {
    return reinterpret_cast<const TypeStruct*>(
               &_TypeStruct_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TypeStruct& a, TypeStruct& b) {
    a.Swap(&b);
  }
  inline void Swap(TypeStruct* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TypeStruct* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TypeStruct* New() const final {
    return CreateMaybeMessage<TypeStruct>(nullptr);
  }

  TypeStruct* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TypeStruct>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TypeStruct& from);
  void MergeFrom(const TypeStruct& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TypeStruct* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Type.Grpc.TypeStruct";
  }
  protected:
  explicit TypeStruct(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ArpTypes_2eproto);
    return ::descriptor_table_ArpTypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStructElementsFieldNumber = 1,
  };
  // repeated .Arp.Type.Grpc.ObjectType StructElements = 1;
  int structelements_size() const;
  private:
  int _internal_structelements_size() const;
  public:
  void clear_structelements();
  ::Arp::Type::Grpc::ObjectType* mutable_structelements(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
      mutable_structelements();
  private:
  const ::Arp::Type::Grpc::ObjectType& _internal_structelements(int index) const;
  ::Arp::Type::Grpc::ObjectType* _internal_add_structelements();
  public:
  const ::Arp::Type::Grpc::ObjectType& structelements(int index) const;
  ::Arp::Type::Grpc::ObjectType* add_structelements();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
      structelements() const;

  // @@protoc_insertion_point(class_scope:Arp.Type.Grpc.TypeStruct)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType > structelements_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ArpTypes_2eproto;
};
// -------------------------------------------------------------------

class TypeArray PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Type.Grpc.TypeArray) */ {
 public:
  inline TypeArray() : TypeArray(nullptr) {}
  virtual ~TypeArray();

  TypeArray(const TypeArray& from);
  TypeArray(TypeArray&& from) noexcept
    : TypeArray() {
    *this = ::std::move(from);
  }

  inline TypeArray& operator=(const TypeArray& from) {
    CopyFrom(from);
    return *this;
  }
  inline TypeArray& operator=(TypeArray&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TypeArray& default_instance();

  static inline const TypeArray* internal_default_instance() {
    return reinterpret_cast<const TypeArray*>(
               &_TypeArray_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TypeArray& a, TypeArray& b) {
    a.Swap(&b);
  }
  inline void Swap(TypeArray* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TypeArray* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TypeArray* New() const final {
    return CreateMaybeMessage<TypeArray>(nullptr);
  }

  TypeArray* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TypeArray>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TypeArray& from);
  void MergeFrom(const TypeArray& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TypeArray* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Type.Grpc.TypeArray";
  }
  protected:
  explicit TypeArray(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ArpTypes_2eproto);
    return ::descriptor_table_ArpTypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArrayElementsFieldNumber = 1,
  };
  // repeated .Arp.Type.Grpc.ObjectType ArrayElements = 1;
  int arrayelements_size() const;
  private:
  int _internal_arrayelements_size() const;
  public:
  void clear_arrayelements();
  ::Arp::Type::Grpc::ObjectType* mutable_arrayelements(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
      mutable_arrayelements();
  private:
  const ::Arp::Type::Grpc::ObjectType& _internal_arrayelements(int index) const;
  ::Arp::Type::Grpc::ObjectType* _internal_add_arrayelements();
  public:
  const ::Arp::Type::Grpc::ObjectType& arrayelements(int index) const;
  ::Arp::Type::Grpc::ObjectType* add_arrayelements();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
      arrayelements() const;

  // @@protoc_insertion_point(class_scope:Arp.Type.Grpc.TypeArray)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType > arrayelements_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_ArpTypes_2eproto;
};
// -------------------------------------------------------------------

class ObjectType PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.Type.Grpc.ObjectType) */ {
 public:
  inline ObjectType() : ObjectType(nullptr) {}
  virtual ~ObjectType();

  ObjectType(const ObjectType& from);
  ObjectType(ObjectType&& from) noexcept
    : ObjectType() {
    *this = ::std::move(from);
  }

  inline ObjectType& operator=(const ObjectType& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectType& operator=(ObjectType&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectType& default_instance();

  enum ValueCase {
    kBoolValue = 2,
    kCharValue = 3,
    kInt8Value = 4,
    kUint8Value = 5,
    kInt16Value = 6,
    kUint16Value = 7,
    kInt32Value = 8,
    kUint32Value = 9,
    kInt64Value = 10,
    kUIntValue = 11,
    kFloatValue = 12,
    kDoubleValue = 13,
    kStringValue = 14,
    kStructValue = 15,
    kArrayValue = 16,
    kEnumValue = 17,
    VALUE_NOT_SET = 0,
  };

  static inline const ObjectType* internal_default_instance() {
    return reinterpret_cast<const ObjectType*>(
               &_ObjectType_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ObjectType& a, ObjectType& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectType* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectType* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectType* New() const final {
    return CreateMaybeMessage<ObjectType>(nullptr);
  }

  ObjectType* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectType>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectType& from);
  void MergeFrom(const ObjectType& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectType* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.Type.Grpc.ObjectType";
  }
  protected:
  explicit ObjectType(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_ArpTypes_2eproto);
    return ::descriptor_table_ArpTypes_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTypeCodeFieldNumber = 1,
    kBoolValueFieldNumber = 2,
    kCharValueFieldNumber = 3,
    kInt8ValueFieldNumber = 4,
    kUint8ValueFieldNumber = 5,
    kInt16ValueFieldNumber = 6,
    kUint16ValueFieldNumber = 7,
    kInt32ValueFieldNumber = 8,
    kUint32ValueFieldNumber = 9,
    kInt64ValueFieldNumber = 10,
    kUIntValueFieldNumber = 11,
    kFloatValueFieldNumber = 12,
    kDoubleValueFieldNumber = 13,
    kStringValueFieldNumber = 14,
    kStructValueFieldNumber = 15,
    kArrayValueFieldNumber = 16,
    kEnumValueFieldNumber = 17,
  };
  // .Arp.Type.Grpc.CoreType TypeCode = 1;
  void clear_typecode();
  ::Arp::Type::Grpc::CoreType typecode() const;
  void set_typecode(::Arp::Type::Grpc::CoreType value);
  private:
  ::Arp::Type::Grpc::CoreType _internal_typecode() const;
  void _internal_set_typecode(::Arp::Type::Grpc::CoreType value);
  public:

  // bool BoolValue = 2;
  private:
  bool _internal_has_boolvalue() const;
  public:
  void clear_boolvalue();
  bool boolvalue() const;
  void set_boolvalue(bool value);
  private:
  bool _internal_boolvalue() const;
  void _internal_set_boolvalue(bool value);
  public:

  // sint32 CharValue = 3;
  private:
  bool _internal_has_charvalue() const;
  public:
  void clear_charvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 charvalue() const;
  void set_charvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_charvalue() const;
  void _internal_set_charvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // sint32 Int8Value = 4;
  private:
  bool _internal_has_int8value() const;
  public:
  void clear_int8value();
  ::PROTOBUF_NAMESPACE_ID::int32 int8value() const;
  void set_int8value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int8value() const;
  void _internal_set_int8value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 Uint8Value = 5;
  private:
  bool _internal_has_uint8value() const;
  public:
  void clear_uint8value();
  ::PROTOBUF_NAMESPACE_ID::uint32 uint8value() const;
  void set_uint8value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uint8value() const;
  void _internal_set_uint8value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // sint32 Int16Value = 6;
  private:
  bool _internal_has_int16value() const;
  public:
  void clear_int16value();
  ::PROTOBUF_NAMESPACE_ID::int32 int16value() const;
  void set_int16value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int16value() const;
  void _internal_set_int16value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 Uint16Value = 7;
  private:
  bool _internal_has_uint16value() const;
  public:
  void clear_uint16value();
  ::PROTOBUF_NAMESPACE_ID::uint32 uint16value() const;
  void set_uint16value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uint16value() const;
  void _internal_set_uint16value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // sint32 Int32Value = 8;
  private:
  bool _internal_has_int32value() const;
  public:
  void clear_int32value();
  ::PROTOBUF_NAMESPACE_ID::int32 int32value() const;
  void set_int32value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_int32value() const;
  void _internal_set_int32value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // uint32 Uint32Value = 9;
  private:
  bool _internal_has_uint32value() const;
  public:
  void clear_uint32value();
  ::PROTOBUF_NAMESPACE_ID::uint32 uint32value() const;
  void set_uint32value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_uint32value() const;
  void _internal_set_uint32value(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // sint64 Int64Value = 10;
  private:
  bool _internal_has_int64value() const;
  public:
  void clear_int64value();
  ::PROTOBUF_NAMESPACE_ID::int64 int64value() const;
  void set_int64value(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_int64value() const;
  void _internal_set_int64value(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // uint64 UIntValue = 11;
  private:
  bool _internal_has_uintvalue() const;
  public:
  void clear_uintvalue();
  ::PROTOBUF_NAMESPACE_ID::uint64 uintvalue() const;
  void set_uintvalue(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_uintvalue() const;
  void _internal_set_uintvalue(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // float FloatValue = 12;
  private:
  bool _internal_has_floatvalue() const;
  public:
  void clear_floatvalue();
  float floatvalue() const;
  void set_floatvalue(float value);
  private:
  float _internal_floatvalue() const;
  void _internal_set_floatvalue(float value);
  public:

  // double DoubleValue = 13;
  private:
  bool _internal_has_doublevalue() const;
  public:
  void clear_doublevalue();
  double doublevalue() const;
  void set_doublevalue(double value);
  private:
  double _internal_doublevalue() const;
  void _internal_set_doublevalue(double value);
  public:

  // string StringValue = 14;
  private:
  bool _internal_has_stringvalue() const;
  public:
  void clear_stringvalue();
  const std::string& stringvalue() const;
  void set_stringvalue(const std::string& value);
  void set_stringvalue(std::string&& value);
  void set_stringvalue(const char* value);
  void set_stringvalue(const char* value, size_t size);
  std::string* mutable_stringvalue();
  std::string* release_stringvalue();
  void set_allocated_stringvalue(std::string* stringvalue);
  private:
  const std::string& _internal_stringvalue() const;
  void _internal_set_stringvalue(const std::string& value);
  std::string* _internal_mutable_stringvalue();
  public:

  // .Arp.Type.Grpc.TypeStruct StructValue = 15;
  bool has_structvalue() const;
  private:
  bool _internal_has_structvalue() const;
  public:
  void clear_structvalue();
  const ::Arp::Type::Grpc::TypeStruct& structvalue() const;
  ::Arp::Type::Grpc::TypeStruct* release_structvalue();
  ::Arp::Type::Grpc::TypeStruct* mutable_structvalue();
  void set_allocated_structvalue(::Arp::Type::Grpc::TypeStruct* structvalue);
  private:
  const ::Arp::Type::Grpc::TypeStruct& _internal_structvalue() const;
  ::Arp::Type::Grpc::TypeStruct* _internal_mutable_structvalue();
  public:
  void unsafe_arena_set_allocated_structvalue(
      ::Arp::Type::Grpc::TypeStruct* structvalue);
  ::Arp::Type::Grpc::TypeStruct* unsafe_arena_release_structvalue();

  // .Arp.Type.Grpc.TypeArray ArrayValue = 16;
  bool has_arrayvalue() const;
  private:
  bool _internal_has_arrayvalue() const;
  public:
  void clear_arrayvalue();
  const ::Arp::Type::Grpc::TypeArray& arrayvalue() const;
  ::Arp::Type::Grpc::TypeArray* release_arrayvalue();
  ::Arp::Type::Grpc::TypeArray* mutable_arrayvalue();
  void set_allocated_arrayvalue(::Arp::Type::Grpc::TypeArray* arrayvalue);
  private:
  const ::Arp::Type::Grpc::TypeArray& _internal_arrayvalue() const;
  ::Arp::Type::Grpc::TypeArray* _internal_mutable_arrayvalue();
  public:
  void unsafe_arena_set_allocated_arrayvalue(
      ::Arp::Type::Grpc::TypeArray* arrayvalue);
  ::Arp::Type::Grpc::TypeArray* unsafe_arena_release_arrayvalue();

  // sint32 EnumValue = 17;
  private:
  bool _internal_has_enumvalue() const;
  public:
  void clear_enumvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 enumvalue() const;
  void set_enumvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_enumvalue() const;
  void _internal_set_enumvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  void clear_Value();
  ValueCase Value_case() const;
  // @@protoc_insertion_point(class_scope:Arp.Type.Grpc.ObjectType)
 private:
  class _Internal;
  void set_has_boolvalue();
  void set_has_charvalue();
  void set_has_int8value();
  void set_has_uint8value();
  void set_has_int16value();
  void set_has_uint16value();
  void set_has_int32value();
  void set_has_uint32value();
  void set_has_int64value();
  void set_has_uintvalue();
  void set_has_floatvalue();
  void set_has_doublevalue();
  void set_has_stringvalue();
  void set_has_structvalue();
  void set_has_arrayvalue();
  void set_has_enumvalue();

  inline bool has_Value() const;
  inline void clear_has_Value();

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int typecode_;
  union ValueUnion {
    ValueUnion() {}
    bool boolvalue_;
    ::PROTOBUF_NAMESPACE_ID::int32 charvalue_;
    ::PROTOBUF_NAMESPACE_ID::int32 int8value_;
    ::PROTOBUF_NAMESPACE_ID::uint32 uint8value_;
    ::PROTOBUF_NAMESPACE_ID::int32 int16value_;
    ::PROTOBUF_NAMESPACE_ID::uint32 uint16value_;
    ::PROTOBUF_NAMESPACE_ID::int32 int32value_;
    ::PROTOBUF_NAMESPACE_ID::uint32 uint32value_;
    ::PROTOBUF_NAMESPACE_ID::int64 int64value_;
    ::PROTOBUF_NAMESPACE_ID::uint64 uintvalue_;
    float floatvalue_;
    double doublevalue_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr stringvalue_;
    ::Arp::Type::Grpc::TypeStruct* structvalue_;
    ::Arp::Type::Grpc::TypeArray* arrayvalue_;
    ::PROTOBUF_NAMESPACE_ID::int32 enumvalue_;
  } Value_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _oneof_case_[1];

  friend struct ::TableStruct_ArpTypes_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TypeStruct

// repeated .Arp.Type.Grpc.ObjectType StructElements = 1;
inline int TypeStruct::_internal_structelements_size() const {
  return structelements_.size();
}
inline int TypeStruct::structelements_size() const {
  return _internal_structelements_size();
}
inline void TypeStruct::clear_structelements() {
  structelements_.Clear();
}
inline ::Arp::Type::Grpc::ObjectType* TypeStruct::mutable_structelements(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.Type.Grpc.TypeStruct.StructElements)
  return structelements_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
TypeStruct::mutable_structelements() {
  // @@protoc_insertion_point(field_mutable_list:Arp.Type.Grpc.TypeStruct.StructElements)
  return &structelements_;
}
inline const ::Arp::Type::Grpc::ObjectType& TypeStruct::_internal_structelements(int index) const {
  return structelements_.Get(index);
}
inline const ::Arp::Type::Grpc::ObjectType& TypeStruct::structelements(int index) const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.TypeStruct.StructElements)
  return _internal_structelements(index);
}
inline ::Arp::Type::Grpc::ObjectType* TypeStruct::_internal_add_structelements() {
  return structelements_.Add();
}
inline ::Arp::Type::Grpc::ObjectType* TypeStruct::add_structelements() {
  // @@protoc_insertion_point(field_add:Arp.Type.Grpc.TypeStruct.StructElements)
  return _internal_add_structelements();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
TypeStruct::structelements() const {
  // @@protoc_insertion_point(field_list:Arp.Type.Grpc.TypeStruct.StructElements)
  return structelements_;
}

// -------------------------------------------------------------------

// TypeArray

// repeated .Arp.Type.Grpc.ObjectType ArrayElements = 1;
inline int TypeArray::_internal_arrayelements_size() const {
  return arrayelements_.size();
}
inline int TypeArray::arrayelements_size() const {
  return _internal_arrayelements_size();
}
inline void TypeArray::clear_arrayelements() {
  arrayelements_.Clear();
}
inline ::Arp::Type::Grpc::ObjectType* TypeArray::mutable_arrayelements(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.Type.Grpc.TypeArray.ArrayElements)
  return arrayelements_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
TypeArray::mutable_arrayelements() {
  // @@protoc_insertion_point(field_mutable_list:Arp.Type.Grpc.TypeArray.ArrayElements)
  return &arrayelements_;
}
inline const ::Arp::Type::Grpc::ObjectType& TypeArray::_internal_arrayelements(int index) const {
  return arrayelements_.Get(index);
}
inline const ::Arp::Type::Grpc::ObjectType& TypeArray::arrayelements(int index) const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.TypeArray.ArrayElements)
  return _internal_arrayelements(index);
}
inline ::Arp::Type::Grpc::ObjectType* TypeArray::_internal_add_arrayelements() {
  return arrayelements_.Add();
}
inline ::Arp::Type::Grpc::ObjectType* TypeArray::add_arrayelements() {
  // @@protoc_insertion_point(field_add:Arp.Type.Grpc.TypeArray.ArrayElements)
  return _internal_add_arrayelements();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
TypeArray::arrayelements() const {
  // @@protoc_insertion_point(field_list:Arp.Type.Grpc.TypeArray.ArrayElements)
  return arrayelements_;
}

// -------------------------------------------------------------------

// ObjectType

// .Arp.Type.Grpc.CoreType TypeCode = 1;
inline void ObjectType::clear_typecode() {
  typecode_ = 0;
}
inline ::Arp::Type::Grpc::CoreType ObjectType::_internal_typecode() const {
  return static_cast< ::Arp::Type::Grpc::CoreType >(typecode_);
}
inline ::Arp::Type::Grpc::CoreType ObjectType::typecode() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.TypeCode)
  return _internal_typecode();
}
inline void ObjectType::_internal_set_typecode(::Arp::Type::Grpc::CoreType value) {
  
  typecode_ = value;
}
inline void ObjectType::set_typecode(::Arp::Type::Grpc::CoreType value) {
  _internal_set_typecode(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.TypeCode)
}

// bool BoolValue = 2;
inline bool ObjectType::_internal_has_boolvalue() const {
  return Value_case() == kBoolValue;
}
inline void ObjectType::set_has_boolvalue() {
  _oneof_case_[0] = kBoolValue;
}
inline void ObjectType::clear_boolvalue() {
  if (_internal_has_boolvalue()) {
    Value_.boolvalue_ = false;
    clear_has_Value();
  }
}
inline bool ObjectType::_internal_boolvalue() const {
  if (_internal_has_boolvalue()) {
    return Value_.boolvalue_;
  }
  return false;
}
inline void ObjectType::_internal_set_boolvalue(bool value) {
  if (!_internal_has_boolvalue()) {
    clear_Value();
    set_has_boolvalue();
  }
  Value_.boolvalue_ = value;
}
inline bool ObjectType::boolvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.BoolValue)
  return _internal_boolvalue();
}
inline void ObjectType::set_boolvalue(bool value) {
  _internal_set_boolvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.BoolValue)
}

// sint32 CharValue = 3;
inline bool ObjectType::_internal_has_charvalue() const {
  return Value_case() == kCharValue;
}
inline void ObjectType::set_has_charvalue() {
  _oneof_case_[0] = kCharValue;
}
inline void ObjectType::clear_charvalue() {
  if (_internal_has_charvalue()) {
    Value_.charvalue_ = 0;
    clear_has_Value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectType::_internal_charvalue() const {
  if (_internal_has_charvalue()) {
    return Value_.charvalue_;
  }
  return 0;
}
inline void ObjectType::_internal_set_charvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!_internal_has_charvalue()) {
    clear_Value();
    set_has_charvalue();
  }
  Value_.charvalue_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectType::charvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.CharValue)
  return _internal_charvalue();
}
inline void ObjectType::set_charvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_charvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.CharValue)
}

// sint32 Int8Value = 4;
inline bool ObjectType::_internal_has_int8value() const {
  return Value_case() == kInt8Value;
}
inline void ObjectType::set_has_int8value() {
  _oneof_case_[0] = kInt8Value;
}
inline void ObjectType::clear_int8value() {
  if (_internal_has_int8value()) {
    Value_.int8value_ = 0;
    clear_has_Value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectType::_internal_int8value() const {
  if (_internal_has_int8value()) {
    return Value_.int8value_;
  }
  return 0;
}
inline void ObjectType::_internal_set_int8value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!_internal_has_int8value()) {
    clear_Value();
    set_has_int8value();
  }
  Value_.int8value_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectType::int8value() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.Int8Value)
  return _internal_int8value();
}
inline void ObjectType::set_int8value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int8value(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.Int8Value)
}

// uint32 Uint8Value = 5;
inline bool ObjectType::_internal_has_uint8value() const {
  return Value_case() == kUint8Value;
}
inline void ObjectType::set_has_uint8value() {
  _oneof_case_[0] = kUint8Value;
}
inline void ObjectType::clear_uint8value() {
  if (_internal_has_uint8value()) {
    Value_.uint8value_ = 0u;
    clear_has_Value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ObjectType::_internal_uint8value() const {
  if (_internal_has_uint8value()) {
    return Value_.uint8value_;
  }
  return 0u;
}
inline void ObjectType::_internal_set_uint8value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  if (!_internal_has_uint8value()) {
    clear_Value();
    set_has_uint8value();
  }
  Value_.uint8value_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ObjectType::uint8value() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.Uint8Value)
  return _internal_uint8value();
}
inline void ObjectType::set_uint8value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uint8value(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.Uint8Value)
}

// sint32 Int16Value = 6;
inline bool ObjectType::_internal_has_int16value() const {
  return Value_case() == kInt16Value;
}
inline void ObjectType::set_has_int16value() {
  _oneof_case_[0] = kInt16Value;
}
inline void ObjectType::clear_int16value() {
  if (_internal_has_int16value()) {
    Value_.int16value_ = 0;
    clear_has_Value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectType::_internal_int16value() const {
  if (_internal_has_int16value()) {
    return Value_.int16value_;
  }
  return 0;
}
inline void ObjectType::_internal_set_int16value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!_internal_has_int16value()) {
    clear_Value();
    set_has_int16value();
  }
  Value_.int16value_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectType::int16value() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.Int16Value)
  return _internal_int16value();
}
inline void ObjectType::set_int16value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int16value(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.Int16Value)
}

// uint32 Uint16Value = 7;
inline bool ObjectType::_internal_has_uint16value() const {
  return Value_case() == kUint16Value;
}
inline void ObjectType::set_has_uint16value() {
  _oneof_case_[0] = kUint16Value;
}
inline void ObjectType::clear_uint16value() {
  if (_internal_has_uint16value()) {
    Value_.uint16value_ = 0u;
    clear_has_Value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ObjectType::_internal_uint16value() const {
  if (_internal_has_uint16value()) {
    return Value_.uint16value_;
  }
  return 0u;
}
inline void ObjectType::_internal_set_uint16value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  if (!_internal_has_uint16value()) {
    clear_Value();
    set_has_uint16value();
  }
  Value_.uint16value_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ObjectType::uint16value() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.Uint16Value)
  return _internal_uint16value();
}
inline void ObjectType::set_uint16value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uint16value(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.Uint16Value)
}

// sint32 Int32Value = 8;
inline bool ObjectType::_internal_has_int32value() const {
  return Value_case() == kInt32Value;
}
inline void ObjectType::set_has_int32value() {
  _oneof_case_[0] = kInt32Value;
}
inline void ObjectType::clear_int32value() {
  if (_internal_has_int32value()) {
    Value_.int32value_ = 0;
    clear_has_Value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectType::_internal_int32value() const {
  if (_internal_has_int32value()) {
    return Value_.int32value_;
  }
  return 0;
}
inline void ObjectType::_internal_set_int32value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!_internal_has_int32value()) {
    clear_Value();
    set_has_int32value();
  }
  Value_.int32value_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectType::int32value() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.Int32Value)
  return _internal_int32value();
}
inline void ObjectType::set_int32value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_int32value(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.Int32Value)
}

// uint32 Uint32Value = 9;
inline bool ObjectType::_internal_has_uint32value() const {
  return Value_case() == kUint32Value;
}
inline void ObjectType::set_has_uint32value() {
  _oneof_case_[0] = kUint32Value;
}
inline void ObjectType::clear_uint32value() {
  if (_internal_has_uint32value()) {
    Value_.uint32value_ = 0u;
    clear_has_Value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ObjectType::_internal_uint32value() const {
  if (_internal_has_uint32value()) {
    return Value_.uint32value_;
  }
  return 0u;
}
inline void ObjectType::_internal_set_uint32value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  if (!_internal_has_uint32value()) {
    clear_Value();
    set_has_uint32value();
  }
  Value_.uint32value_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 ObjectType::uint32value() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.Uint32Value)
  return _internal_uint32value();
}
inline void ObjectType::set_uint32value(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_uint32value(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.Uint32Value)
}

// sint64 Int64Value = 10;
inline bool ObjectType::_internal_has_int64value() const {
  return Value_case() == kInt64Value;
}
inline void ObjectType::set_has_int64value() {
  _oneof_case_[0] = kInt64Value;
}
inline void ObjectType::clear_int64value() {
  if (_internal_has_int64value()) {
    Value_.int64value_ = PROTOBUF_LONGLONG(0);
    clear_has_Value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ObjectType::_internal_int64value() const {
  if (_internal_has_int64value()) {
    return Value_.int64value_;
  }
  return PROTOBUF_LONGLONG(0);
}
inline void ObjectType::_internal_set_int64value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  if (!_internal_has_int64value()) {
    clear_Value();
    set_has_int64value();
  }
  Value_.int64value_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ObjectType::int64value() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.Int64Value)
  return _internal_int64value();
}
inline void ObjectType::set_int64value(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_int64value(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.Int64Value)
}

// uint64 UIntValue = 11;
inline bool ObjectType::_internal_has_uintvalue() const {
  return Value_case() == kUIntValue;
}
inline void ObjectType::set_has_uintvalue() {
  _oneof_case_[0] = kUIntValue;
}
inline void ObjectType::clear_uintvalue() {
  if (_internal_has_uintvalue()) {
    Value_.uintvalue_ = PROTOBUF_ULONGLONG(0);
    clear_has_Value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ObjectType::_internal_uintvalue() const {
  if (_internal_has_uintvalue()) {
    return Value_.uintvalue_;
  }
  return PROTOBUF_ULONGLONG(0);
}
inline void ObjectType::_internal_set_uintvalue(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  if (!_internal_has_uintvalue()) {
    clear_Value();
    set_has_uintvalue();
  }
  Value_.uintvalue_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 ObjectType::uintvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.UIntValue)
  return _internal_uintvalue();
}
inline void ObjectType::set_uintvalue(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_uintvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.UIntValue)
}

// float FloatValue = 12;
inline bool ObjectType::_internal_has_floatvalue() const {
  return Value_case() == kFloatValue;
}
inline void ObjectType::set_has_floatvalue() {
  _oneof_case_[0] = kFloatValue;
}
inline void ObjectType::clear_floatvalue() {
  if (_internal_has_floatvalue()) {
    Value_.floatvalue_ = 0;
    clear_has_Value();
  }
}
inline float ObjectType::_internal_floatvalue() const {
  if (_internal_has_floatvalue()) {
    return Value_.floatvalue_;
  }
  return 0;
}
inline void ObjectType::_internal_set_floatvalue(float value) {
  if (!_internal_has_floatvalue()) {
    clear_Value();
    set_has_floatvalue();
  }
  Value_.floatvalue_ = value;
}
inline float ObjectType::floatvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.FloatValue)
  return _internal_floatvalue();
}
inline void ObjectType::set_floatvalue(float value) {
  _internal_set_floatvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.FloatValue)
}

// double DoubleValue = 13;
inline bool ObjectType::_internal_has_doublevalue() const {
  return Value_case() == kDoubleValue;
}
inline void ObjectType::set_has_doublevalue() {
  _oneof_case_[0] = kDoubleValue;
}
inline void ObjectType::clear_doublevalue() {
  if (_internal_has_doublevalue()) {
    Value_.doublevalue_ = 0;
    clear_has_Value();
  }
}
inline double ObjectType::_internal_doublevalue() const {
  if (_internal_has_doublevalue()) {
    return Value_.doublevalue_;
  }
  return 0;
}
inline void ObjectType::_internal_set_doublevalue(double value) {
  if (!_internal_has_doublevalue()) {
    clear_Value();
    set_has_doublevalue();
  }
  Value_.doublevalue_ = value;
}
inline double ObjectType::doublevalue() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.DoubleValue)
  return _internal_doublevalue();
}
inline void ObjectType::set_doublevalue(double value) {
  _internal_set_doublevalue(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.DoubleValue)
}

// string StringValue = 14;
inline bool ObjectType::_internal_has_stringvalue() const {
  return Value_case() == kStringValue;
}
inline void ObjectType::set_has_stringvalue() {
  _oneof_case_[0] = kStringValue;
}
inline void ObjectType::clear_stringvalue() {
  if (_internal_has_stringvalue()) {
    Value_.stringvalue_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
    clear_has_Value();
  }
}
inline const std::string& ObjectType::stringvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.StringValue)
  return _internal_stringvalue();
}
inline void ObjectType::set_stringvalue(const std::string& value) {
  _internal_set_stringvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.StringValue)
}
inline std::string* ObjectType::mutable_stringvalue() {
  // @@protoc_insertion_point(field_mutable:Arp.Type.Grpc.ObjectType.StringValue)
  return _internal_mutable_stringvalue();
}
inline const std::string& ObjectType::_internal_stringvalue() const {
  if (_internal_has_stringvalue()) {
    return Value_.stringvalue_.Get();
  }
  return ::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited();
}
inline void ObjectType::_internal_set_stringvalue(const std::string& value) {
  if (!_internal_has_stringvalue()) {
    clear_Value();
    set_has_stringvalue();
    Value_.stringvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  Value_.stringvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ObjectType::set_stringvalue(std::string&& value) {
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.StringValue)
  if (!_internal_has_stringvalue()) {
    clear_Value();
    set_has_stringvalue();
    Value_.stringvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  Value_.stringvalue_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.Type.Grpc.ObjectType.StringValue)
}
inline void ObjectType::set_stringvalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  if (!_internal_has_stringvalue()) {
    clear_Value();
    set_has_stringvalue();
    Value_.stringvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  Value_.stringvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{},
      ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.Type.Grpc.ObjectType.StringValue)
}
inline void ObjectType::set_stringvalue(const char* value,
                             size_t size) {
  if (!_internal_has_stringvalue()) {
    clear_Value();
    set_has_stringvalue();
    Value_.stringvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  Value_.stringvalue_.Set(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size),
      GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.Type.Grpc.ObjectType.StringValue)
}
inline std::string* ObjectType::_internal_mutable_stringvalue() {
  if (!_internal_has_stringvalue()) {
    clear_Value();
    set_has_stringvalue();
    Value_.stringvalue_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  }
  return Value_.stringvalue_.Mutable(
      ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ObjectType::release_stringvalue() {
  // @@protoc_insertion_point(field_release:Arp.Type.Grpc.ObjectType.StringValue)
  if (_internal_has_stringvalue()) {
    clear_has_Value();
    return Value_.stringvalue_.ReleaseNonDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  } else {
    return nullptr;
  }
}
inline void ObjectType::set_allocated_stringvalue(std::string* stringvalue) {
  if (has_Value()) {
    clear_Value();
  }
  if (stringvalue != nullptr) {
    set_has_stringvalue();
    Value_.stringvalue_.UnsafeSetDefault(stringvalue);
    ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena();
    if (arena != nullptr) {
      arena->Own(stringvalue);
    }
  }
  // @@protoc_insertion_point(field_set_allocated:Arp.Type.Grpc.ObjectType.StringValue)
}

// .Arp.Type.Grpc.TypeStruct StructValue = 15;
inline bool ObjectType::_internal_has_structvalue() const {
  return Value_case() == kStructValue;
}
inline bool ObjectType::has_structvalue() const {
  return _internal_has_structvalue();
}
inline void ObjectType::set_has_structvalue() {
  _oneof_case_[0] = kStructValue;
}
inline void ObjectType::clear_structvalue() {
  if (_internal_has_structvalue()) {
    if (GetArena() == nullptr) {
      delete Value_.structvalue_;
    }
    clear_has_Value();
  }
}
inline ::Arp::Type::Grpc::TypeStruct* ObjectType::release_structvalue() {
  // @@protoc_insertion_point(field_release:Arp.Type.Grpc.ObjectType.StructValue)
  if (_internal_has_structvalue()) {
    clear_has_Value();
      ::Arp::Type::Grpc::TypeStruct* temp = Value_.structvalue_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.structvalue_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Arp::Type::Grpc::TypeStruct& ObjectType::_internal_structvalue() const {
  return _internal_has_structvalue()
      ? *Value_.structvalue_
      : reinterpret_cast< ::Arp::Type::Grpc::TypeStruct&>(::Arp::Type::Grpc::_TypeStruct_default_instance_);
}
inline const ::Arp::Type::Grpc::TypeStruct& ObjectType::structvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.StructValue)
  return _internal_structvalue();
}
inline ::Arp::Type::Grpc::TypeStruct* ObjectType::unsafe_arena_release_structvalue() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Arp.Type.Grpc.ObjectType.StructValue)
  if (_internal_has_structvalue()) {
    clear_has_Value();
    ::Arp::Type::Grpc::TypeStruct* temp = Value_.structvalue_;
    Value_.structvalue_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ObjectType::unsafe_arena_set_allocated_structvalue(::Arp::Type::Grpc::TypeStruct* structvalue) {
  clear_Value();
  if (structvalue) {
    set_has_structvalue();
    Value_.structvalue_ = structvalue;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Arp.Type.Grpc.ObjectType.StructValue)
}
inline ::Arp::Type::Grpc::TypeStruct* ObjectType::_internal_mutable_structvalue() {
  if (!_internal_has_structvalue()) {
    clear_Value();
    set_has_structvalue();
    Value_.structvalue_ = CreateMaybeMessage< ::Arp::Type::Grpc::TypeStruct >(GetArena());
  }
  return Value_.structvalue_;
}
inline ::Arp::Type::Grpc::TypeStruct* ObjectType::mutable_structvalue() {
  // @@protoc_insertion_point(field_mutable:Arp.Type.Grpc.ObjectType.StructValue)
  return _internal_mutable_structvalue();
}

// .Arp.Type.Grpc.TypeArray ArrayValue = 16;
inline bool ObjectType::_internal_has_arrayvalue() const {
  return Value_case() == kArrayValue;
}
inline bool ObjectType::has_arrayvalue() const {
  return _internal_has_arrayvalue();
}
inline void ObjectType::set_has_arrayvalue() {
  _oneof_case_[0] = kArrayValue;
}
inline void ObjectType::clear_arrayvalue() {
  if (_internal_has_arrayvalue()) {
    if (GetArena() == nullptr) {
      delete Value_.arrayvalue_;
    }
    clear_has_Value();
  }
}
inline ::Arp::Type::Grpc::TypeArray* ObjectType::release_arrayvalue() {
  // @@protoc_insertion_point(field_release:Arp.Type.Grpc.ObjectType.ArrayValue)
  if (_internal_has_arrayvalue()) {
    clear_has_Value();
      ::Arp::Type::Grpc::TypeArray* temp = Value_.arrayvalue_;
    if (GetArena() != nullptr) {
      temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
    }
    Value_.arrayvalue_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::Arp::Type::Grpc::TypeArray& ObjectType::_internal_arrayvalue() const {
  return _internal_has_arrayvalue()
      ? *Value_.arrayvalue_
      : reinterpret_cast< ::Arp::Type::Grpc::TypeArray&>(::Arp::Type::Grpc::_TypeArray_default_instance_);
}
inline const ::Arp::Type::Grpc::TypeArray& ObjectType::arrayvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.ArrayValue)
  return _internal_arrayvalue();
}
inline ::Arp::Type::Grpc::TypeArray* ObjectType::unsafe_arena_release_arrayvalue() {
  // @@protoc_insertion_point(field_unsafe_arena_release:Arp.Type.Grpc.ObjectType.ArrayValue)
  if (_internal_has_arrayvalue()) {
    clear_has_Value();
    ::Arp::Type::Grpc::TypeArray* temp = Value_.arrayvalue_;
    Value_.arrayvalue_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void ObjectType::unsafe_arena_set_allocated_arrayvalue(::Arp::Type::Grpc::TypeArray* arrayvalue) {
  clear_Value();
  if (arrayvalue) {
    set_has_arrayvalue();
    Value_.arrayvalue_ = arrayvalue;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Arp.Type.Grpc.ObjectType.ArrayValue)
}
inline ::Arp::Type::Grpc::TypeArray* ObjectType::_internal_mutable_arrayvalue() {
  if (!_internal_has_arrayvalue()) {
    clear_Value();
    set_has_arrayvalue();
    Value_.arrayvalue_ = CreateMaybeMessage< ::Arp::Type::Grpc::TypeArray >(GetArena());
  }
  return Value_.arrayvalue_;
}
inline ::Arp::Type::Grpc::TypeArray* ObjectType::mutable_arrayvalue() {
  // @@protoc_insertion_point(field_mutable:Arp.Type.Grpc.ObjectType.ArrayValue)
  return _internal_mutable_arrayvalue();
}

// sint32 EnumValue = 17;
inline bool ObjectType::_internal_has_enumvalue() const {
  return Value_case() == kEnumValue;
}
inline void ObjectType::set_has_enumvalue() {
  _oneof_case_[0] = kEnumValue;
}
inline void ObjectType::clear_enumvalue() {
  if (_internal_has_enumvalue()) {
    Value_.enumvalue_ = 0;
    clear_has_Value();
  }
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectType::_internal_enumvalue() const {
  if (_internal_has_enumvalue()) {
    return Value_.enumvalue_;
  }
  return 0;
}
inline void ObjectType::_internal_set_enumvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  if (!_internal_has_enumvalue()) {
    clear_Value();
    set_has_enumvalue();
  }
  Value_.enumvalue_ = value;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ObjectType::enumvalue() const {
  // @@protoc_insertion_point(field_get:Arp.Type.Grpc.ObjectType.EnumValue)
  return _internal_enumvalue();
}
inline void ObjectType::set_enumvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_enumvalue(value);
  // @@protoc_insertion_point(field_set:Arp.Type.Grpc.ObjectType.EnumValue)
}

inline bool ObjectType::has_Value() const {
  return Value_case() != VALUE_NOT_SET;
}
inline void ObjectType::clear_has_Value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline ObjectType::ValueCase ObjectType::Value_case() const {
  return ObjectType::ValueCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Grpc
}  // namespace Type
}  // namespace Arp

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::Arp::Type::Grpc::CoreType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::Arp::Type::Grpc::CoreType>() {
  return ::Arp::Type::Grpc::CoreType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_ArpTypes_2eproto
