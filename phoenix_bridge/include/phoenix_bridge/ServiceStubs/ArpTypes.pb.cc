// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ArpTypes.proto

#include "ArpTypes.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_ArpTypes_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectType_ArpTypes_2eproto;
namespace Arp {
namespace Type {
namespace Grpc {
class TypeStructDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TypeStruct> _instance;
} _TypeStruct_default_instance_;
class TypeArrayDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TypeArray> _instance;
} _TypeArray_default_instance_;
class ObjectTypeDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ObjectType> _instance;
} _ObjectType_default_instance_;
}  // namespace Grpc
}  // namespace Type
}  // namespace Arp
static void InitDefaultsscc_info_ObjectType_ArpTypes_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Type::Grpc::_TypeStruct_default_instance_;
    new (ptr) ::Arp::Type::Grpc::TypeStruct();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Arp::Type::Grpc::_TypeArray_default_instance_;
    new (ptr) ::Arp::Type::Grpc::TypeArray();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::Arp::Type::Grpc::_ObjectType_default_instance_;
    new (ptr) ::Arp::Type::Grpc::ObjectType();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ObjectType_ArpTypes_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ObjectType_ArpTypes_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_ArpTypes_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_ArpTypes_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_ArpTypes_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_ArpTypes_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Type::Grpc::TypeStruct, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Type::Grpc::TypeStruct, structelements_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Type::Grpc::TypeArray, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Type::Grpc::TypeArray, arrayelements_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Type::Grpc::ObjectType, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::Arp::Type::Grpc::ObjectType, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Type::Grpc::ObjectType, typecode_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::Arp::Type::Grpc::ObjectType, Value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Arp::Type::Grpc::TypeStruct)},
  { 6, -1, sizeof(::Arp::Type::Grpc::TypeArray)},
  { 12, -1, sizeof(::Arp::Type::Grpc::ObjectType)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Type::Grpc::_TypeStruct_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Type::Grpc::_TypeArray_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Type::Grpc::_ObjectType_default_instance_),
};

const char descriptor_table_protodef_ArpTypes_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016ArpTypes.proto\022\rArp.Type.Grpc\"\?\n\nTypeS"
  "truct\0221\n\016StructElements\030\001 \003(\0132\031.Arp.Type"
  ".Grpc.ObjectType\"=\n\tTypeArray\0220\n\rArrayEl"
  "ements\030\001 \003(\0132\031.Arp.Type.Grpc.ObjectType\""
  "\325\003\n\nObjectType\022)\n\010TypeCode\030\001 \001(\0162\027.Arp.T"
  "ype.Grpc.CoreType\022\023\n\tBoolValue\030\002 \001(\010H\000\022\023"
  "\n\tCharValue\030\003 \001(\021H\000\022\023\n\tInt8Value\030\004 \001(\021H\000"
  "\022\024\n\nUint8Value\030\005 \001(\rH\000\022\024\n\nInt16Value\030\006 \001"
  "(\021H\000\022\025\n\013Uint16Value\030\007 \001(\rH\000\022\024\n\nInt32Valu"
  "e\030\010 \001(\021H\000\022\025\n\013Uint32Value\030\t \001(\rH\000\022\024\n\nInt6"
  "4Value\030\n \001(\022H\000\022\023\n\tUIntValue\030\013 \001(\004H\000\022\024\n\nF"
  "loatValue\030\014 \001(\002H\000\022\025\n\013DoubleValue\030\r \001(\001H\000"
  "\022\025\n\013StringValue\030\016 \001(\tH\000\0220\n\013StructValue\030\017"
  " \001(\0132\031.Arp.Type.Grpc.TypeStructH\000\022.\n\nArr"
  "ayValue\030\020 \001(\0132\030.Arp.Type.Grpc.TypeArrayH"
  "\000\022\023\n\tEnumValue\030\021 \001(\021H\000B\007\n\005Value*\235\005\n\010Core"
  "Type\022\013\n\007CT_None\020\000\022\n\n\006CT_End\020\000\022\013\n\007CT_Void"
  "\020\001\022\016\n\nCT_Boolean\020\002\022\013\n\007CT_Char\020\003\022\013\n\007CT_In"
  "t8\020\004\022\014\n\010CT_Uint8\020\005\022\014\n\010CT_Int16\020\006\022\r\n\tCT_U"
  "int16\020\007\022\014\n\010CT_Int32\020\010\022\r\n\tCT_Uint32\020\t\022\014\n\010"
  "CT_Int64\020\n\022\r\n\tCT_Uint64\020\013\022\r\n\tCT_Real32\020\014"
  "\022\r\n\tCT_Real64\020\r\022\r\n\tCT_Struct\020\022\022\r\n\tCT_Str"
  "ing\020\023\022\021\n\rCT_Utf8String\020\023\022\014\n\010CT_Array\020\024\022\017"
  "\n\013CT_DateTime\020\027\022\016\n\nCT_Version\020\030\022\013\n\007CT_Gu"
  "id\020\031\022\021\n\rCT_AnsiString\020\032\022\r\n\tCT_Object\020\034\022\022"
  "\n\016CT_Utf16String\020\036\022\r\n\tCT_Stream\020\"\022\021\n\rCT_"
  "Enumerator\020#\022\023\n\017CT_SecureString\020$\022\013\n\007CT_"
  "Enum\020%\022\021\n\rCT_Dictionary\020&\022\024\n\020CT_Security"
  "Token\020\'\022\020\n\014CT_Exception\020(\022\016\n\nCT_IecTime\020"
  ")\022\020\n\014CT_IecTime64\020*\022\016\n\nCT_IecDate\020+\022\020\n\014C"
  "T_IecDate64\020,\022\022\n\016CT_IecDateTime\020-\022\024\n\020CT_"
  "IecDateTime64\020.\022\023\n\017CT_IecTimeOfDay\020/\022\025\n\021"
  "CT_IecTimeOfDay64\0200\032\002\020\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_ArpTypes_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_ArpTypes_2eproto_sccs[1] = {
  &scc_info_ObjectType_ArpTypes_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_ArpTypes_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_ArpTypes_2eproto = {
  false, false, descriptor_table_protodef_ArpTypes_2eproto, "ArpTypes.proto", 1311,
  &descriptor_table_ArpTypes_2eproto_once, descriptor_table_ArpTypes_2eproto_sccs, descriptor_table_ArpTypes_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_ArpTypes_2eproto::offsets,
  file_level_metadata_ArpTypes_2eproto, 3, file_level_enum_descriptors_ArpTypes_2eproto, file_level_service_descriptors_ArpTypes_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_ArpTypes_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_ArpTypes_2eproto)), true);
namespace Arp {
namespace Type {
namespace Grpc {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* CoreType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_ArpTypes_2eproto);
  return file_level_enum_descriptors_ArpTypes_2eproto[0];
}
bool CoreType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 18:
    case 19:
    case 20:
    case 23:
    case 24:
    case 25:
    case 26:
    case 28:
    case 30:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class TypeStruct::_Internal {
 public:
};

TypeStruct::TypeStruct(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  structelements_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Type.Grpc.TypeStruct)
}
TypeStruct::TypeStruct(const TypeStruct& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      structelements_(from.structelements_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Arp.Type.Grpc.TypeStruct)
}

void TypeStruct::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectType_ArpTypes_2eproto.base);
}

TypeStruct::~TypeStruct() {
  // @@protoc_insertion_point(destructor:Arp.Type.Grpc.TypeStruct)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TypeStruct::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TypeStruct::ArenaDtor(void* object) {
  TypeStruct* _this = reinterpret_cast< TypeStruct* >(object);
  (void)_this;
}
void TypeStruct::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TypeStruct::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TypeStruct& TypeStruct::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectType_ArpTypes_2eproto.base);
  return *internal_default_instance();
}


void TypeStruct::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Type.Grpc.TypeStruct)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  structelements_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TypeStruct::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Arp.Type.Grpc.ObjectType StructElements = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_structelements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TypeStruct::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Type.Grpc.TypeStruct)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Arp.Type.Grpc.ObjectType StructElements = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_structelements_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_structelements(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Type.Grpc.TypeStruct)
  return target;
}

size_t TypeStruct::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Type.Grpc.TypeStruct)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Type.Grpc.ObjectType StructElements = 1;
  total_size += 1UL * this->_internal_structelements_size();
  for (const auto& msg : this->structelements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TypeStruct::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Type.Grpc.TypeStruct)
  GOOGLE_DCHECK_NE(&from, this);
  const TypeStruct* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TypeStruct>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Type.Grpc.TypeStruct)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Type.Grpc.TypeStruct)
    MergeFrom(*source);
  }
}

void TypeStruct::MergeFrom(const TypeStruct& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Type.Grpc.TypeStruct)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  structelements_.MergeFrom(from.structelements_);
}

void TypeStruct::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Type.Grpc.TypeStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeStruct::CopyFrom(const TypeStruct& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Type.Grpc.TypeStruct)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeStruct::IsInitialized() const {
  return true;
}

void TypeStruct::InternalSwap(TypeStruct* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  structelements_.InternalSwap(&other->structelements_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TypeStruct::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class TypeArray::_Internal {
 public:
};

TypeArray::TypeArray(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  arrayelements_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Type.Grpc.TypeArray)
}
TypeArray::TypeArray(const TypeArray& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      arrayelements_(from.arrayelements_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Arp.Type.Grpc.TypeArray)
}

void TypeArray::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectType_ArpTypes_2eproto.base);
}

TypeArray::~TypeArray() {
  // @@protoc_insertion_point(destructor:Arp.Type.Grpc.TypeArray)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TypeArray::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TypeArray::ArenaDtor(void* object) {
  TypeArray* _this = reinterpret_cast< TypeArray* >(object);
  (void)_this;
}
void TypeArray::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TypeArray::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TypeArray& TypeArray::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectType_ArpTypes_2eproto.base);
  return *internal_default_instance();
}


void TypeArray::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Type.Grpc.TypeArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  arrayelements_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TypeArray::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .Arp.Type.Grpc.ObjectType ArrayElements = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_arrayelements(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TypeArray::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Type.Grpc.TypeArray)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .Arp.Type.Grpc.ObjectType ArrayElements = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_arrayelements_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_arrayelements(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Type.Grpc.TypeArray)
  return target;
}

size_t TypeArray::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Type.Grpc.TypeArray)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .Arp.Type.Grpc.ObjectType ArrayElements = 1;
  total_size += 1UL * this->_internal_arrayelements_size();
  for (const auto& msg : this->arrayelements_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TypeArray::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Type.Grpc.TypeArray)
  GOOGLE_DCHECK_NE(&from, this);
  const TypeArray* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TypeArray>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Type.Grpc.TypeArray)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Type.Grpc.TypeArray)
    MergeFrom(*source);
  }
}

void TypeArray::MergeFrom(const TypeArray& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Type.Grpc.TypeArray)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  arrayelements_.MergeFrom(from.arrayelements_);
}

void TypeArray::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Type.Grpc.TypeArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TypeArray::CopyFrom(const TypeArray& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Type.Grpc.TypeArray)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TypeArray::IsInitialized() const {
  return true;
}

void TypeArray::InternalSwap(TypeArray* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  arrayelements_.InternalSwap(&other->arrayelements_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TypeArray::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ObjectType::_Internal {
 public:
  static const ::Arp::Type::Grpc::TypeStruct& structvalue(const ObjectType* msg);
  static const ::Arp::Type::Grpc::TypeArray& arrayvalue(const ObjectType* msg);
};

const ::Arp::Type::Grpc::TypeStruct&
ObjectType::_Internal::structvalue(const ObjectType* msg) {
  return *msg->Value_.structvalue_;
}
const ::Arp::Type::Grpc::TypeArray&
ObjectType::_Internal::arrayvalue(const ObjectType* msg) {
  return *msg->Value_.arrayvalue_;
}
void ObjectType::set_allocated_structvalue(::Arp::Type::Grpc::TypeStruct* structvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_Value();
  if (structvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(structvalue);
    if (message_arena != submessage_arena) {
      structvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, structvalue, submessage_arena);
    }
    set_has_structvalue();
    Value_.structvalue_ = structvalue;
  }
  // @@protoc_insertion_point(field_set_allocated:Arp.Type.Grpc.ObjectType.StructValue)
}
void ObjectType::set_allocated_arrayvalue(::Arp::Type::Grpc::TypeArray* arrayvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_Value();
  if (arrayvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(arrayvalue);
    if (message_arena != submessage_arena) {
      arrayvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, arrayvalue, submessage_arena);
    }
    set_has_arrayvalue();
    Value_.arrayvalue_ = arrayvalue;
  }
  // @@protoc_insertion_point(field_set_allocated:Arp.Type.Grpc.ObjectType.ArrayValue)
}
ObjectType::ObjectType(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Type.Grpc.ObjectType)
}
ObjectType::ObjectType(const ObjectType& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  typecode_ = from.typecode_;
  clear_has_Value();
  switch (from.Value_case()) {
    case kBoolValue: {
      _internal_set_boolvalue(from._internal_boolvalue());
      break;
    }
    case kCharValue: {
      _internal_set_charvalue(from._internal_charvalue());
      break;
    }
    case kInt8Value: {
      _internal_set_int8value(from._internal_int8value());
      break;
    }
    case kUint8Value: {
      _internal_set_uint8value(from._internal_uint8value());
      break;
    }
    case kInt16Value: {
      _internal_set_int16value(from._internal_int16value());
      break;
    }
    case kUint16Value: {
      _internal_set_uint16value(from._internal_uint16value());
      break;
    }
    case kInt32Value: {
      _internal_set_int32value(from._internal_int32value());
      break;
    }
    case kUint32Value: {
      _internal_set_uint32value(from._internal_uint32value());
      break;
    }
    case kInt64Value: {
      _internal_set_int64value(from._internal_int64value());
      break;
    }
    case kUIntValue: {
      _internal_set_uintvalue(from._internal_uintvalue());
      break;
    }
    case kFloatValue: {
      _internal_set_floatvalue(from._internal_floatvalue());
      break;
    }
    case kDoubleValue: {
      _internal_set_doublevalue(from._internal_doublevalue());
      break;
    }
    case kStringValue: {
      _internal_set_stringvalue(from._internal_stringvalue());
      break;
    }
    case kStructValue: {
      _internal_mutable_structvalue()->::Arp::Type::Grpc::TypeStruct::MergeFrom(from._internal_structvalue());
      break;
    }
    case kArrayValue: {
      _internal_mutable_arrayvalue()->::Arp::Type::Grpc::TypeArray::MergeFrom(from._internal_arrayvalue());
      break;
    }
    case kEnumValue: {
      _internal_set_enumvalue(from._internal_enumvalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Arp.Type.Grpc.ObjectType)
}

void ObjectType::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ObjectType_ArpTypes_2eproto.base);
  typecode_ = 0;
  clear_has_Value();
}

ObjectType::~ObjectType() {
  // @@protoc_insertion_point(destructor:Arp.Type.Grpc.ObjectType)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ObjectType::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_Value()) {
    clear_Value();
  }
}

void ObjectType::ArenaDtor(void* object) {
  ObjectType* _this = reinterpret_cast< ObjectType* >(object);
  (void)_this;
}
void ObjectType::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ObjectType::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ObjectType& ObjectType::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ObjectType_ArpTypes_2eproto.base);
  return *internal_default_instance();
}


void ObjectType::clear_Value() {
// @@protoc_insertion_point(one_of_clear_start:Arp.Type.Grpc.ObjectType)
  switch (Value_case()) {
    case kBoolValue: {
      // No need to clear
      break;
    }
    case kCharValue: {
      // No need to clear
      break;
    }
    case kInt8Value: {
      // No need to clear
      break;
    }
    case kUint8Value: {
      // No need to clear
      break;
    }
    case kInt16Value: {
      // No need to clear
      break;
    }
    case kUint16Value: {
      // No need to clear
      break;
    }
    case kInt32Value: {
      // No need to clear
      break;
    }
    case kUint32Value: {
      // No need to clear
      break;
    }
    case kInt64Value: {
      // No need to clear
      break;
    }
    case kUIntValue: {
      // No need to clear
      break;
    }
    case kFloatValue: {
      // No need to clear
      break;
    }
    case kDoubleValue: {
      // No need to clear
      break;
    }
    case kStringValue: {
      Value_.stringvalue_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kStructValue: {
      if (GetArena() == nullptr) {
        delete Value_.structvalue_;
      }
      break;
    }
    case kArrayValue: {
      if (GetArena() == nullptr) {
        delete Value_.arrayvalue_;
      }
      break;
    }
    case kEnumValue: {
      // No need to clear
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void ObjectType::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Type.Grpc.ObjectType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  typecode_ = 0;
  clear_Value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ObjectType::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.Type.Grpc.CoreType TypeCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_typecode(static_cast<::Arp::Type::Grpc::CoreType>(val));
        } else goto handle_unusual;
        continue;
      // bool BoolValue = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_boolvalue(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 CharValue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _internal_set_charvalue(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 Int8Value = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _internal_set_int8value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Uint8Value = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _internal_set_uint8value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 Int16Value = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _internal_set_int16value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Uint16Value = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _internal_set_uint16value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 Int32Value = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _internal_set_int32value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 Uint32Value = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _internal_set_uint32value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint64 Int64Value = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _internal_set_int64value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 UIntValue = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _internal_set_uintvalue(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // float FloatValue = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          _internal_set_floatvalue(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // double DoubleValue = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 105)) {
          _internal_set_doublevalue(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string StringValue = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_stringvalue();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Type.Grpc.ObjectType.StringValue"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Arp.Type.Grpc.TypeStruct StructValue = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          ptr = ctx->ParseMessage(_internal_mutable_structvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .Arp.Type.Grpc.TypeArray ArrayValue = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          ptr = ctx->ParseMessage(_internal_mutable_arrayvalue(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 EnumValue = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          _internal_set_enumvalue(::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ObjectType::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Type.Grpc.ObjectType)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.Type.Grpc.CoreType TypeCode = 1;
  if (this->typecode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_typecode(), target);
  }

  // bool BoolValue = 2;
  if (_internal_has_boolvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_boolvalue(), target);
  }

  // sint32 CharValue = 3;
  if (_internal_has_charvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(3, this->_internal_charvalue(), target);
  }

  // sint32 Int8Value = 4;
  if (_internal_has_int8value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(4, this->_internal_int8value(), target);
  }

  // uint32 Uint8Value = 5;
  if (_internal_has_uint8value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_uint8value(), target);
  }

  // sint32 Int16Value = 6;
  if (_internal_has_int16value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(6, this->_internal_int16value(), target);
  }

  // uint32 Uint16Value = 7;
  if (_internal_has_uint16value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_uint16value(), target);
  }

  // sint32 Int32Value = 8;
  if (_internal_has_int32value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(8, this->_internal_int32value(), target);
  }

  // uint32 Uint32Value = 9;
  if (_internal_has_uint32value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_uint32value(), target);
  }

  // sint64 Int64Value = 10;
  if (_internal_has_int64value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt64ToArray(10, this->_internal_int64value(), target);
  }

  // uint64 UIntValue = 11;
  if (_internal_has_uintvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(11, this->_internal_uintvalue(), target);
  }

  // float FloatValue = 12;
  if (_internal_has_floatvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->_internal_floatvalue(), target);
  }

  // double DoubleValue = 13;
  if (_internal_has_doublevalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(13, this->_internal_doublevalue(), target);
  }

  // string StringValue = 14;
  if (_internal_has_stringvalue()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_stringvalue().data(), static_cast<int>(this->_internal_stringvalue().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Type.Grpc.ObjectType.StringValue");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_stringvalue(), target);
  }

  // .Arp.Type.Grpc.TypeStruct StructValue = 15;
  if (_internal_has_structvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        15, _Internal::structvalue(this), target, stream);
  }

  // .Arp.Type.Grpc.TypeArray ArrayValue = 16;
  if (_internal_has_arrayvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        16, _Internal::arrayvalue(this), target, stream);
  }

  // sint32 EnumValue = 17;
  if (_internal_has_enumvalue()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(17, this->_internal_enumvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Type.Grpc.ObjectType)
  return target;
}

size_t ObjectType::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Type.Grpc.ObjectType)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.Type.Grpc.CoreType TypeCode = 1;
  if (this->typecode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_typecode());
  }

  switch (Value_case()) {
    // bool BoolValue = 2;
    case kBoolValue: {
      total_size += 1 + 1;
      break;
    }
    // sint32 CharValue = 3;
    case kCharValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
          this->_internal_charvalue());
      break;
    }
    // sint32 Int8Value = 4;
    case kInt8Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
          this->_internal_int8value());
      break;
    }
    // uint32 Uint8Value = 5;
    case kUint8Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uint8value());
      break;
    }
    // sint32 Int16Value = 6;
    case kInt16Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
          this->_internal_int16value());
      break;
    }
    // uint32 Uint16Value = 7;
    case kUint16Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uint16value());
      break;
    }
    // sint32 Int32Value = 8;
    case kInt32Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
          this->_internal_int32value());
      break;
    }
    // uint32 Uint32Value = 9;
    case kUint32Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_uint32value());
      break;
    }
    // sint64 Int64Value = 10;
    case kInt64Value: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt64Size(
          this->_internal_int64value());
      break;
    }
    // uint64 UIntValue = 11;
    case kUIntValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_uintvalue());
      break;
    }
    // float FloatValue = 12;
    case kFloatValue: {
      total_size += 1 + 4;
      break;
    }
    // double DoubleValue = 13;
    case kDoubleValue: {
      total_size += 1 + 8;
      break;
    }
    // string StringValue = 14;
    case kStringValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_stringvalue());
      break;
    }
    // .Arp.Type.Grpc.TypeStruct StructValue = 15;
    case kStructValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.structvalue_);
      break;
    }
    // .Arp.Type.Grpc.TypeArray ArrayValue = 16;
    case kArrayValue: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *Value_.arrayvalue_);
      break;
    }
    // sint32 EnumValue = 17;
    case kEnumValue: {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
          this->_internal_enumvalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ObjectType::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Type.Grpc.ObjectType)
  GOOGLE_DCHECK_NE(&from, this);
  const ObjectType* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ObjectType>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Type.Grpc.ObjectType)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Type.Grpc.ObjectType)
    MergeFrom(*source);
  }
}

void ObjectType::MergeFrom(const ObjectType& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Type.Grpc.ObjectType)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.typecode() != 0) {
    _internal_set_typecode(from._internal_typecode());
  }
  switch (from.Value_case()) {
    case kBoolValue: {
      _internal_set_boolvalue(from._internal_boolvalue());
      break;
    }
    case kCharValue: {
      _internal_set_charvalue(from._internal_charvalue());
      break;
    }
    case kInt8Value: {
      _internal_set_int8value(from._internal_int8value());
      break;
    }
    case kUint8Value: {
      _internal_set_uint8value(from._internal_uint8value());
      break;
    }
    case kInt16Value: {
      _internal_set_int16value(from._internal_int16value());
      break;
    }
    case kUint16Value: {
      _internal_set_uint16value(from._internal_uint16value());
      break;
    }
    case kInt32Value: {
      _internal_set_int32value(from._internal_int32value());
      break;
    }
    case kUint32Value: {
      _internal_set_uint32value(from._internal_uint32value());
      break;
    }
    case kInt64Value: {
      _internal_set_int64value(from._internal_int64value());
      break;
    }
    case kUIntValue: {
      _internal_set_uintvalue(from._internal_uintvalue());
      break;
    }
    case kFloatValue: {
      _internal_set_floatvalue(from._internal_floatvalue());
      break;
    }
    case kDoubleValue: {
      _internal_set_doublevalue(from._internal_doublevalue());
      break;
    }
    case kStringValue: {
      _internal_set_stringvalue(from._internal_stringvalue());
      break;
    }
    case kStructValue: {
      _internal_mutable_structvalue()->::Arp::Type::Grpc::TypeStruct::MergeFrom(from._internal_structvalue());
      break;
    }
    case kArrayValue: {
      _internal_mutable_arrayvalue()->::Arp::Type::Grpc::TypeArray::MergeFrom(from._internal_arrayvalue());
      break;
    }
    case kEnumValue: {
      _internal_set_enumvalue(from._internal_enumvalue());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void ObjectType::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Type.Grpc.ObjectType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ObjectType::CopyFrom(const ObjectType& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Type.Grpc.ObjectType)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ObjectType::IsInitialized() const {
  return true;
}

void ObjectType::InternalSwap(ObjectType* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(typecode_, other->typecode_);
  swap(Value_, other->Value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata ObjectType::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Grpc
}  // namespace Type
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Arp::Type::Grpc::TypeStruct* Arena::CreateMaybeMessage< ::Arp::Type::Grpc::TypeStruct >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Type::Grpc::TypeStruct >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Type::Grpc::TypeArray* Arena::CreateMaybeMessage< ::Arp::Type::Grpc::TypeArray >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Type::Grpc::TypeArray >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::Type::Grpc::ObjectType* Arena::CreateMaybeMessage< ::Arp::Type::Grpc::ObjectType >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Type::Grpc::ObjectType >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
