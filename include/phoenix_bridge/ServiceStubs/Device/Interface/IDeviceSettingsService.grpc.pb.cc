// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: IDeviceSettingsService.proto

#include "IDeviceSettingsService.pb.h"
#include "IDeviceSettingsService.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace Arp {
namespace Device {
namespace Interface {
namespace Services {
namespace Grpc {

static const char* IDeviceSettingsService_method_names[] = {
  "/Arp.Device.Interface.Services.Grpc.IDeviceSettingsService/ReadValue",
  "/Arp.Device.Interface.Services.Grpc.IDeviceSettingsService/ReadValues",
  "/Arp.Device.Interface.Services.Grpc.IDeviceSettingsService/WriteValue",
  "/Arp.Device.Interface.Services.Grpc.IDeviceSettingsService/WriteValues",
};

std::unique_ptr< IDeviceSettingsService::Stub> IDeviceSettingsService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< IDeviceSettingsService::Stub> stub(new IDeviceSettingsService::Stub(channel));
  return stub;
}

IDeviceSettingsService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_ReadValue_(IDeviceSettingsService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ReadValues_(IDeviceSettingsService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_WriteValue_(IDeviceSettingsService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_WriteValues_(IDeviceSettingsService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status IDeviceSettingsService::Stub::ReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ReadValue_, context, request, response);
}

void IDeviceSettingsService::Stub::experimental_async::ReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ReadValue_, context, request, response, std::move(f));
}

void IDeviceSettingsService::Stub::experimental_async::ReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ReadValue_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>* IDeviceSettingsService::Stub::PrepareAsyncReadValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ReadValue_, context, request);
}

::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>* IDeviceSettingsService::Stub::AsyncReadValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncReadValueRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status IDeviceSettingsService::Stub::ReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ReadValues_, context, request, response);
}

void IDeviceSettingsService::Stub::experimental_async::ReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ReadValues_, context, request, response, std::move(f));
}

void IDeviceSettingsService::Stub::experimental_async::ReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ReadValues_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>* IDeviceSettingsService::Stub::PrepareAsyncReadValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ReadValues_, context, request);
}

::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>* IDeviceSettingsService::Stub::AsyncReadValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncReadValuesRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status IDeviceSettingsService::Stub::WriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_WriteValue_, context, request, response);
}

void IDeviceSettingsService::Stub::experimental_async::WriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_WriteValue_, context, request, response, std::move(f));
}

void IDeviceSettingsService::Stub::experimental_async::WriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_WriteValue_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>* IDeviceSettingsService::Stub::PrepareAsyncWriteValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_WriteValue_, context, request);
}

::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>* IDeviceSettingsService::Stub::AsyncWriteValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncWriteValueRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status IDeviceSettingsService::Stub::WriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_WriteValues_, context, request, response);
}

void IDeviceSettingsService::Stub::experimental_async::WriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_WriteValues_, context, request, response, std::move(f));
}

void IDeviceSettingsService::Stub::experimental_async::WriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_WriteValues_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>* IDeviceSettingsService::Stub::PrepareAsyncWriteValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_WriteValues_, context, request);
}

::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>* IDeviceSettingsService::Stub::AsyncWriteValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncWriteValuesRaw(context, request, cq);
  result->StartCall();
  return result;
}

IDeviceSettingsService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IDeviceSettingsService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IDeviceSettingsService::Service, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](IDeviceSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* req,
             ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* resp) {
               return service->ReadValue(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IDeviceSettingsService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IDeviceSettingsService::Service, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](IDeviceSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* req,
             ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* resp) {
               return service->ReadValues(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IDeviceSettingsService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IDeviceSettingsService::Service, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](IDeviceSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* req,
             ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* resp) {
               return service->WriteValue(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IDeviceSettingsService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IDeviceSettingsService::Service, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](IDeviceSettingsService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* req,
             ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* resp) {
               return service->WriteValues(ctx, req, resp);
             }, this)));
}

IDeviceSettingsService::Service::~Service() {
}

::grpc::Status IDeviceSettingsService::Service::ReadValue(::grpc::ServerContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IDeviceSettingsService::Service::ReadValues(::grpc::ServerContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IDeviceSettingsService::Service::WriteValue(::grpc::ServerContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IDeviceSettingsService::Service::WriteValues(::grpc::ServerContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace Arp
}  // namespace Device
}  // namespace Interface
}  // namespace Services
}  // namespace Grpc

