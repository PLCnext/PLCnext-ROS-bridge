// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: IDeviceSettingsService.proto
// Original file comments:
// /////////////////////////////////////////////////////////////////////////////
//
//  Copyright PHOENIX CONTACT Electronics GmbH
//
// /////////////////////////////////////////////////////////////////////////////
//
#ifndef GRPC_IDeviceSettingsService_2eproto__INCLUDED
#define GRPC_IDeviceSettingsService_2eproto__INCLUDED

#include "IDeviceSettingsService.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace Arp {
namespace Device {
namespace Interface {
namespace Services {
namespace Grpc {

// *
// Use this service to read and write device settings.
//
class IDeviceSettingsService final {
 public:
  static constexpr char const* service_full_name() {
    return "Arp.Device.Interface.Services.Grpc.IDeviceSettingsService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / <summary>
    // / Read a single setting
    // / </summary>
    // / <param name="setting">String for select the item</param>
    // / <returns> result as <see cref="Arp.Device.Interface.Services.DeviceSettingResult" /></returns>
    virtual ::grpc::Status ReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>> AsyncReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>>(AsyncReadValueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>> PrepareAsyncReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>>(PrepareAsyncReadValueRaw(context, request, cq));
    }
    // / <summary>
    // / Read a list of settings
    // / </summary>
    // / <param name="settings">Arry of string for select the items</param>
    // / <returns> result as arry of <see cref="Arp.Device.Interface.Services.DeviceSettingResult" /></returns>
    virtual ::grpc::Status ReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>> AsyncReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>>(AsyncReadValuesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>> PrepareAsyncReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>>(PrepareAsyncReadValuesRaw(context, request, cq));
    }
    // / <summary>
    // / Write a single setting
    // / </summary>
    // / <param name="settingItem">
    // / <see cref="Arp.Device.Interface.Services.DeviceSettingItem" /> with string for select the item and the new value</param>
    // / <returns> result as <see cref="Arp.Device.Interface.Services.AccessErrorCode" /></returns>
    virtual ::grpc::Status WriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>> AsyncWriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>>(AsyncWriteValueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>> PrepareAsyncWriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>>(PrepareAsyncWriteValueRaw(context, request, cq));
    }
    // / <summary>
    // / Write a list of settings
    // / </summary>
    // / <param name="settingItems">Arry of <see cref="Arp.Device.Interface.Services.DeviceSettingItem" /> for set the items to new values</param>
    // / <returns> result as arry of <see cref="Arp.Device.Interface.Services.AccessErrorCode" /></returns>
    virtual ::grpc::Status WriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>> AsyncWriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>>(AsyncWriteValuesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>> PrepareAsyncWriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>>(PrepareAsyncWriteValuesRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // / <summary>
      // / Read a single setting
      // / </summary>
      // / <param name="setting">String for select the item</param>
      // / <returns> result as <see cref="Arp.Device.Interface.Services.DeviceSettingResult" /></returns>
      virtual void ReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // / <summary>
      // / Read a list of settings
      // / </summary>
      // / <param name="settings">Arry of string for select the items</param>
      // / <returns> result as arry of <see cref="Arp.Device.Interface.Services.DeviceSettingResult" /></returns>
      virtual void ReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // / <summary>
      // / Write a single setting
      // / </summary>
      // / <param name="settingItem">
      // / <see cref="Arp.Device.Interface.Services.DeviceSettingItem" /> with string for select the item and the new value</param>
      // / <returns> result as <see cref="Arp.Device.Interface.Services.AccessErrorCode" /></returns>
      virtual void WriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void WriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void WriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // / <summary>
      // / Write a list of settings
      // / </summary>
      // / <param name="settingItems">Arry of <see cref="Arp.Device.Interface.Services.DeviceSettingItem" /> for set the items to new values</param>
      // / <returns> result as arry of <see cref="Arp.Device.Interface.Services.AccessErrorCode" /></returns>
      virtual void WriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void WriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void WriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>* AsyncReadValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>* PrepareAsyncReadValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>* AsyncReadValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>* PrepareAsyncReadValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>* AsyncWriteValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>* PrepareAsyncWriteValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>* AsyncWriteValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>* PrepareAsyncWriteValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status ReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>> AsyncReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>>(AsyncReadValueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>> PrepareAsyncReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>>(PrepareAsyncReadValueRaw(context, request, cq));
    }
    ::grpc::Status ReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>> AsyncReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>>(AsyncReadValuesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>> PrepareAsyncReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>>(PrepareAsyncReadValuesRaw(context, request, cq));
    }
    ::grpc::Status WriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>> AsyncWriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>>(AsyncWriteValueRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>> PrepareAsyncWriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>>(PrepareAsyncWriteValueRaw(context, request, cq));
    }
    ::grpc::Status WriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>> AsyncWriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>>(AsyncWriteValuesRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>> PrepareAsyncWriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>>(PrepareAsyncWriteValuesRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void ReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ReadValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ReadValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void WriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void WriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void WriteValue(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void WriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void WriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void WriteValues(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>* AsyncReadValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>* PrepareAsyncReadValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>* AsyncReadValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>* PrepareAsyncReadValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>* AsyncWriteValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>* PrepareAsyncWriteValueRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>* AsyncWriteValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>* PrepareAsyncWriteValuesRaw(::grpc::ClientContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_ReadValue_;
    const ::grpc::internal::RpcMethod rpcmethod_ReadValues_;
    const ::grpc::internal::RpcMethod rpcmethod_WriteValue_;
    const ::grpc::internal::RpcMethod rpcmethod_WriteValues_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / <summary>
    // / Read a single setting
    // / </summary>
    // / <param name="setting">String for select the item</param>
    // / <returns> result as <see cref="Arp.Device.Interface.Services.DeviceSettingResult" /></returns>
    virtual ::grpc::Status ReadValue(::grpc::ServerContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response);
    // / <summary>
    // / Read a list of settings
    // / </summary>
    // / <param name="settings">Arry of string for select the items</param>
    // / <returns> result as arry of <see cref="Arp.Device.Interface.Services.DeviceSettingResult" /></returns>
    virtual ::grpc::Status ReadValues(::grpc::ServerContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response);
    // / <summary>
    // / Write a single setting
    // / </summary>
    // / <param name="settingItem">
    // / <see cref="Arp.Device.Interface.Services.DeviceSettingItem" /> with string for select the item and the new value</param>
    // / <returns> result as <see cref="Arp.Device.Interface.Services.AccessErrorCode" /></returns>
    virtual ::grpc::Status WriteValue(::grpc::ServerContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response);
    // / <summary>
    // / Write a list of settings
    // / </summary>
    // / <param name="settingItems">Arry of <see cref="Arp.Device.Interface.Services.DeviceSettingItem" /> for set the items to new values</param>
    // / <returns> result as arry of <see cref="Arp.Device.Interface.Services.AccessErrorCode" /></returns>
    virtual ::grpc::Status WriteValues(::grpc::ServerContext* context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_ReadValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReadValue() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_ReadValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadValue(::grpc::ServerContext* context, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::grpc::ServerAsyncResponseWriter< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReadValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReadValues() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_ReadValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadValues(::grpc::ServerContext* context, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::grpc::ServerAsyncResponseWriter< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WriteValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WriteValue() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_WriteValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteValue(::grpc::ServerContext* context, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::grpc::ServerAsyncResponseWriter< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WriteValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WriteValues() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_WriteValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteValues(::grpc::ServerContext* context, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::grpc::ServerAsyncResponseWriter< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_ReadValue<WithAsyncMethod_ReadValues<WithAsyncMethod_WriteValue<WithAsyncMethod_WriteValues<Service > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ReadValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ReadValue() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* response) { return this->ReadValue(context, request, response); }));}
    void SetMessageAllocatorFor_ReadValue(
        ::grpc::experimental::MessageAllocator< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ReadValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ReadValue(
      ::grpc::CallbackServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ReadValue(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ReadValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ReadValues() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* response) { return this->ReadValues(context, request, response); }));}
    void SetMessageAllocatorFor_ReadValues(
        ::grpc::experimental::MessageAllocator< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ReadValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ReadValues(
      ::grpc::CallbackServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ReadValues(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_WriteValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_WriteValue() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* response) { return this->WriteValue(context, request, response); }));}
    void SetMessageAllocatorFor_WriteValue(
        ::grpc::experimental::MessageAllocator< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_WriteValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* WriteValue(
      ::grpc::CallbackServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* WriteValue(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_WriteValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_WriteValues() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* request, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* response) { return this->WriteValues(context, request, response); }));}
    void SetMessageAllocatorFor_WriteValues(
        ::grpc::experimental::MessageAllocator< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_WriteValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* WriteValues(
      ::grpc::CallbackServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* WriteValues(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_ReadValue<ExperimentalWithCallbackMethod_ReadValues<ExperimentalWithCallbackMethod_WriteValue<ExperimentalWithCallbackMethod_WriteValues<Service > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_ReadValue<ExperimentalWithCallbackMethod_ReadValues<ExperimentalWithCallbackMethod_WriteValue<ExperimentalWithCallbackMethod_WriteValues<Service > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_ReadValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReadValue() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_ReadValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReadValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReadValues() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_ReadValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WriteValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WriteValue() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_WriteValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WriteValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WriteValues() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_WriteValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReadValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReadValue() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_ReadValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadValue(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReadValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReadValues() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_ReadValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadValues(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WriteValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WriteValue() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_WriteValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteValue(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WriteValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WriteValues() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_WriteValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteValues(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ReadValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ReadValue() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReadValue(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ReadValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ReadValue(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ReadValue(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ReadValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ReadValues() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReadValues(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ReadValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ReadValues(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ReadValues(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_WriteValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_WriteValue() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->WriteValue(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_WriteValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* WriteValue(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* WriteValue(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_WriteValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_WriteValues() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->WriteValues(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_WriteValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* WriteValues(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* WriteValues(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReadValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReadValue() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>* streamer) {
                       return this->StreamedReadValue(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReadValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReadValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReadValue(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueRequest,::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValueResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReadValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReadValues() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>* streamer) {
                       return this->StreamedReadValues(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReadValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReadValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReadValues(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesRequest,::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceReadValuesResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WriteValue : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WriteValue() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>* streamer) {
                       return this->StreamedWriteValue(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_WriteValue() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WriteValue(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWriteValue(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueRequest,::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValueResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WriteValues : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WriteValues() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>* streamer) {
                       return this->StreamedWriteValues(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_WriteValues() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WriteValues(::grpc::ServerContext* /*context*/, const ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest* /*request*/, ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWriteValues(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesRequest,::Arp::Device::Interface::Services::Grpc::IDeviceSettingsServiceWriteValuesResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_ReadValue<WithStreamedUnaryMethod_ReadValues<WithStreamedUnaryMethod_WriteValue<WithStreamedUnaryMethod_WriteValues<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_ReadValue<WithStreamedUnaryMethod_ReadValues<WithStreamedUnaryMethod_WriteValue<WithStreamedUnaryMethod_WriteValues<Service > > > > StreamedService;
};

}  // namespace Grpc
}  // namespace Services
}  // namespace Interface
}  // namespace Device
}  // namespace Arp


#endif  // GRPC_IDeviceSettingsService_2eproto__INCLUDED
