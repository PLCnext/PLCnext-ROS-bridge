// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: INotificationManagerService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_INotificationManagerService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_INotificationManagerService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "NotificationRegistrationInfo.pb.h"
#include "NotificationRegistrationStatus.pb.h"
#include "Severity.pb.h"
#include "ArpTypes.pb.h"
#include "DateTime.pb.h"
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_INotificationManagerService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_INotificationManagerService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[19]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_INotificationManagerService_2eproto;
namespace Arp {
namespace System {
namespace Nm {
namespace Services {
namespace Grpc {
class INotificationManagerServiceGetAllKnownNotificationNameIdsResponse;
class INotificationManagerServiceGetAllKnownNotificationNameIdsResponseDefaultTypeInternal;
extern INotificationManagerServiceGetAllKnownNotificationNameIdsResponseDefaultTypeInternal _INotificationManagerServiceGetAllKnownNotificationNameIdsResponse_default_instance_;
class INotificationManagerServiceGetNotificationNameIdRequest;
class INotificationManagerServiceGetNotificationNameIdRequestDefaultTypeInternal;
extern INotificationManagerServiceGetNotificationNameIdRequestDefaultTypeInternal _INotificationManagerServiceGetNotificationNameIdRequest_default_instance_;
class INotificationManagerServiceGetNotificationNameIdResponse;
class INotificationManagerServiceGetNotificationNameIdResponseDefaultTypeInternal;
extern INotificationManagerServiceGetNotificationNameIdResponseDefaultTypeInternal _INotificationManagerServiceGetNotificationNameIdResponse_default_instance_;
class INotificationManagerServiceGetNotificationNameIdsByStatusRequest;
class INotificationManagerServiceGetNotificationNameIdsByStatusRequestDefaultTypeInternal;
extern INotificationManagerServiceGetNotificationNameIdsByStatusRequestDefaultTypeInternal _INotificationManagerServiceGetNotificationNameIdsByStatusRequest_default_instance_;
class INotificationManagerServiceGetNotificationNameIdsByStatusResponse;
class INotificationManagerServiceGetNotificationNameIdsByStatusResponseDefaultTypeInternal;
extern INotificationManagerServiceGetNotificationNameIdsByStatusResponseDefaultTypeInternal _INotificationManagerServiceGetNotificationNameIdsByStatusResponse_default_instance_;
class INotificationManagerServiceGetNotificationNameRequest;
class INotificationManagerServiceGetNotificationNameRequestDefaultTypeInternal;
extern INotificationManagerServiceGetNotificationNameRequestDefaultTypeInternal _INotificationManagerServiceGetNotificationNameRequest_default_instance_;
class INotificationManagerServiceGetNotificationNameResponse;
class INotificationManagerServiceGetNotificationNameResponseDefaultTypeInternal;
extern INotificationManagerServiceGetNotificationNameResponseDefaultTypeInternal _INotificationManagerServiceGetNotificationNameResponse_default_instance_;
class INotificationManagerServiceGetNotificationRegistrationRequest;
class INotificationManagerServiceGetNotificationRegistrationRequestDefaultTypeInternal;
extern INotificationManagerServiceGetNotificationRegistrationRequestDefaultTypeInternal _INotificationManagerServiceGetNotificationRegistrationRequest_default_instance_;
class INotificationManagerServiceGetNotificationRegistrationResponse;
class INotificationManagerServiceGetNotificationRegistrationResponseDefaultTypeInternal;
extern INotificationManagerServiceGetNotificationRegistrationResponseDefaultTypeInternal _INotificationManagerServiceGetNotificationRegistrationResponse_default_instance_;
class INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse;
class INotificationManagerServiceGetNumberOfSubmittedNotificationsResponseDefaultTypeInternal;
extern INotificationManagerServiceGetNumberOfSubmittedNotificationsResponseDefaultTypeInternal _INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse_default_instance_;
class INotificationManagerServiceGetPayloadTypeIdRequest;
class INotificationManagerServiceGetPayloadTypeIdRequestDefaultTypeInternal;
extern INotificationManagerServiceGetPayloadTypeIdRequestDefaultTypeInternal _INotificationManagerServiceGetPayloadTypeIdRequest_default_instance_;
class INotificationManagerServiceGetPayloadTypeIdResponse;
class INotificationManagerServiceGetPayloadTypeIdResponseDefaultTypeInternal;
extern INotificationManagerServiceGetPayloadTypeIdResponseDefaultTypeInternal _INotificationManagerServiceGetPayloadTypeIdResponse_default_instance_;
class INotificationManagerServiceGetPayloadTypeNameRequest;
class INotificationManagerServiceGetPayloadTypeNameRequestDefaultTypeInternal;
extern INotificationManagerServiceGetPayloadTypeNameRequestDefaultTypeInternal _INotificationManagerServiceGetPayloadTypeNameRequest_default_instance_;
class INotificationManagerServiceGetPayloadTypeNameResponse;
class INotificationManagerServiceGetPayloadTypeNameResponseDefaultTypeInternal;
extern INotificationManagerServiceGetPayloadTypeNameResponseDefaultTypeInternal _INotificationManagerServiceGetPayloadTypeNameResponse_default_instance_;
class INotificationManagerServiceRegisterNotificationRequest;
class INotificationManagerServiceRegisterNotificationRequestDefaultTypeInternal;
extern INotificationManagerServiceRegisterNotificationRequestDefaultTypeInternal _INotificationManagerServiceRegisterNotificationRequest_default_instance_;
class INotificationManagerServiceRegisterNotificationResponse;
class INotificationManagerServiceRegisterNotificationResponseDefaultTypeInternal;
extern INotificationManagerServiceRegisterNotificationResponseDefaultTypeInternal _INotificationManagerServiceRegisterNotificationResponse_default_instance_;
class INotificationManagerServiceSendNotificationRequest;
class INotificationManagerServiceSendNotificationRequestDefaultTypeInternal;
extern INotificationManagerServiceSendNotificationRequestDefaultTypeInternal _INotificationManagerServiceSendNotificationRequest_default_instance_;
class INotificationManagerServiceSendNotificationResponse;
class INotificationManagerServiceSendNotificationResponseDefaultTypeInternal;
extern INotificationManagerServiceSendNotificationResponseDefaultTypeInternal _INotificationManagerServiceSendNotificationResponse_default_instance_;
class INotificationManagerServiceUnregisterNotificationRequest;
class INotificationManagerServiceUnregisterNotificationRequestDefaultTypeInternal;
extern INotificationManagerServiceUnregisterNotificationRequestDefaultTypeInternal _INotificationManagerServiceUnregisterNotificationRequest_default_instance_;
}  // namespace Grpc
}  // namespace Services
}  // namespace Nm
}  // namespace System
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetAllKnownNotificationNameIdsResponse* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetAllKnownNotificationNameIdsResponse>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameIdRequest* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameIdRequest>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameIdResponse* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameIdResponse>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameIdsByStatusRequest* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameIdsByStatusRequest>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameIdsByStatusResponse* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameIdsByStatusResponse>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameRequest* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameRequest>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameResponse* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationNameResponse>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationRegistrationRequest* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationRegistrationRequest>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationRegistrationResponse* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNotificationRegistrationResponse>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetPayloadTypeIdRequest* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetPayloadTypeIdRequest>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetPayloadTypeIdResponse* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetPayloadTypeIdResponse>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetPayloadTypeNameRequest* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetPayloadTypeNameRequest>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetPayloadTypeNameResponse* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceGetPayloadTypeNameResponse>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceRegisterNotificationRequest* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceRegisterNotificationRequest>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceRegisterNotificationResponse* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceRegisterNotificationResponse>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceSendNotificationRequest* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceSendNotificationRequest>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceSendNotificationResponse* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceSendNotificationResponse>(Arena*);
template<> ::Arp::System::Nm::Services::Grpc::INotificationManagerServiceUnregisterNotificationRequest* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::INotificationManagerServiceUnregisterNotificationRequest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Arp {
namespace System {
namespace Nm {
namespace Services {
namespace Grpc {

// ===================================================================

class INotificationManagerServiceRegisterNotificationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest) */ {
 public:
  inline INotificationManagerServiceRegisterNotificationRequest() : INotificationManagerServiceRegisterNotificationRequest(nullptr) {}
  virtual ~INotificationManagerServiceRegisterNotificationRequest();

  INotificationManagerServiceRegisterNotificationRequest(const INotificationManagerServiceRegisterNotificationRequest& from);
  INotificationManagerServiceRegisterNotificationRequest(INotificationManagerServiceRegisterNotificationRequest&& from) noexcept
    : INotificationManagerServiceRegisterNotificationRequest() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceRegisterNotificationRequest& operator=(const INotificationManagerServiceRegisterNotificationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceRegisterNotificationRequest& operator=(INotificationManagerServiceRegisterNotificationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceRegisterNotificationRequest& default_instance();

  static inline const INotificationManagerServiceRegisterNotificationRequest* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceRegisterNotificationRequest*>(
               &_INotificationManagerServiceRegisterNotificationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(INotificationManagerServiceRegisterNotificationRequest& a, INotificationManagerServiceRegisterNotificationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceRegisterNotificationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceRegisterNotificationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceRegisterNotificationRequest* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceRegisterNotificationRequest>(nullptr);
  }

  INotificationManagerServiceRegisterNotificationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceRegisterNotificationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceRegisterNotificationRequest& from);
  void MergeFrom(const INotificationManagerServiceRegisterNotificationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceRegisterNotificationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest";
  }
  protected:
  explicit INotificationManagerServiceRegisterNotificationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotificationNameFieldNumber = 1,
    kSenderNameFieldNumber = 2,
    kPayloadTypeNameFieldNumber = 4,
    kSeverityFieldNumber = 3,
  };
  // string notificationName = 1;
  void clear_notificationname();
  const std::string& notificationname() const;
  void set_notificationname(const std::string& value);
  void set_notificationname(std::string&& value);
  void set_notificationname(const char* value);
  void set_notificationname(const char* value, size_t size);
  std::string* mutable_notificationname();
  std::string* release_notificationname();
  void set_allocated_notificationname(std::string* notificationname);
  private:
  const std::string& _internal_notificationname() const;
  void _internal_set_notificationname(const std::string& value);
  std::string* _internal_mutable_notificationname();
  public:

  // string senderName = 2;
  void clear_sendername();
  const std::string& sendername() const;
  void set_sendername(const std::string& value);
  void set_sendername(std::string&& value);
  void set_sendername(const char* value);
  void set_sendername(const char* value, size_t size);
  std::string* mutable_sendername();
  std::string* release_sendername();
  void set_allocated_sendername(std::string* sendername);
  private:
  const std::string& _internal_sendername() const;
  void _internal_set_sendername(const std::string& value);
  std::string* _internal_mutable_sendername();
  public:

  // string payloadTypeName = 4;
  void clear_payloadtypename();
  const std::string& payloadtypename() const;
  void set_payloadtypename(const std::string& value);
  void set_payloadtypename(std::string&& value);
  void set_payloadtypename(const char* value);
  void set_payloadtypename(const char* value, size_t size);
  std::string* mutable_payloadtypename();
  std::string* release_payloadtypename();
  void set_allocated_payloadtypename(std::string* payloadtypename);
  private:
  const std::string& _internal_payloadtypename() const;
  void _internal_set_payloadtypename(const std::string& value);
  std::string* _internal_mutable_payloadtypename();
  public:

  // .Arp.System.Nm.Services.Grpc.Severity severity = 3;
  void clear_severity();
  ::Arp::System::Nm::Services::Grpc::Severity severity() const;
  void set_severity(::Arp::System::Nm::Services::Grpc::Severity value);
  private:
  ::Arp::System::Nm::Services::Grpc::Severity _internal_severity() const;
  void _internal_set_severity(::Arp::System::Nm::Services::Grpc::Severity value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr notificationname_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr sendername_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr payloadtypename_;
  int severity_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceUnregisterNotificationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceUnregisterNotificationRequest) */ {
 public:
  inline INotificationManagerServiceUnregisterNotificationRequest() : INotificationManagerServiceUnregisterNotificationRequest(nullptr) {}
  virtual ~INotificationManagerServiceUnregisterNotificationRequest();

  INotificationManagerServiceUnregisterNotificationRequest(const INotificationManagerServiceUnregisterNotificationRequest& from);
  INotificationManagerServiceUnregisterNotificationRequest(INotificationManagerServiceUnregisterNotificationRequest&& from) noexcept
    : INotificationManagerServiceUnregisterNotificationRequest() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceUnregisterNotificationRequest& operator=(const INotificationManagerServiceUnregisterNotificationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceUnregisterNotificationRequest& operator=(INotificationManagerServiceUnregisterNotificationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceUnregisterNotificationRequest& default_instance();

  static inline const INotificationManagerServiceUnregisterNotificationRequest* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceUnregisterNotificationRequest*>(
               &_INotificationManagerServiceUnregisterNotificationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(INotificationManagerServiceUnregisterNotificationRequest& a, INotificationManagerServiceUnregisterNotificationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceUnregisterNotificationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceUnregisterNotificationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceUnregisterNotificationRequest* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceUnregisterNotificationRequest>(nullptr);
  }

  INotificationManagerServiceUnregisterNotificationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceUnregisterNotificationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceUnregisterNotificationRequest& from);
  void MergeFrom(const INotificationManagerServiceUnregisterNotificationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceUnregisterNotificationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceUnregisterNotificationRequest";
  }
  protected:
  explicit INotificationManagerServiceUnregisterNotificationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotificationNameIdFieldNumber = 1,
  };
  // uint32 notificationNameId = 1;
  void clear_notificationnameid();
  ::PROTOBUF_NAMESPACE_ID::uint32 notificationnameid() const;
  void set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_notificationnameid() const;
  void _internal_set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceUnregisterNotificationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 notificationnameid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceSendNotificationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest) */ {
 public:
  inline INotificationManagerServiceSendNotificationRequest() : INotificationManagerServiceSendNotificationRequest(nullptr) {}
  virtual ~INotificationManagerServiceSendNotificationRequest();

  INotificationManagerServiceSendNotificationRequest(const INotificationManagerServiceSendNotificationRequest& from);
  INotificationManagerServiceSendNotificationRequest(INotificationManagerServiceSendNotificationRequest&& from) noexcept
    : INotificationManagerServiceSendNotificationRequest() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceSendNotificationRequest& operator=(const INotificationManagerServiceSendNotificationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceSendNotificationRequest& operator=(INotificationManagerServiceSendNotificationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceSendNotificationRequest& default_instance();

  static inline const INotificationManagerServiceSendNotificationRequest* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceSendNotificationRequest*>(
               &_INotificationManagerServiceSendNotificationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(INotificationManagerServiceSendNotificationRequest& a, INotificationManagerServiceSendNotificationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceSendNotificationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceSendNotificationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceSendNotificationRequest* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceSendNotificationRequest>(nullptr);
  }

  INotificationManagerServiceSendNotificationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceSendNotificationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceSendNotificationRequest& from);
  void MergeFrom(const INotificationManagerServiceSendNotificationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceSendNotificationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest";
  }
  protected:
  explicit INotificationManagerServiceSendNotificationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 3,
    kTimestampFieldNumber = 2,
    kNotificationNameIdFieldNumber = 1,
  };
  // repeated .Arp.Type.Grpc.ObjectType payload = 3;
  int payload_size() const;
  private:
  int _internal_payload_size() const;
  public:
  void clear_payload();
  ::Arp::Type::Grpc::ObjectType* mutable_payload(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
      mutable_payload();
  private:
  const ::Arp::Type::Grpc::ObjectType& _internal_payload(int index) const;
  ::Arp::Type::Grpc::ObjectType* _internal_add_payload();
  public:
  const ::Arp::Type::Grpc::ObjectType& payload(int index) const;
  ::Arp::Type::Grpc::ObjectType* add_payload();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
      payload() const;

  // .Arp.Grpc.DateTime timestamp = 2;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  const ::Arp::Grpc::DateTime& timestamp() const;
  ::Arp::Grpc::DateTime* release_timestamp();
  ::Arp::Grpc::DateTime* mutable_timestamp();
  void set_allocated_timestamp(::Arp::Grpc::DateTime* timestamp);
  private:
  const ::Arp::Grpc::DateTime& _internal_timestamp() const;
  ::Arp::Grpc::DateTime* _internal_mutable_timestamp();
  public:
  void unsafe_arena_set_allocated_timestamp(
      ::Arp::Grpc::DateTime* timestamp);
  ::Arp::Grpc::DateTime* unsafe_arena_release_timestamp();

  // uint32 notificationNameId = 1;
  void clear_notificationnameid();
  ::PROTOBUF_NAMESPACE_ID::uint32 notificationnameid() const;
  void set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_notificationnameid() const;
  void _internal_set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType > payload_;
  ::Arp::Grpc::DateTime* timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint32 notificationnameid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetNotificationNameRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameRequest) */ {
 public:
  inline INotificationManagerServiceGetNotificationNameRequest() : INotificationManagerServiceGetNotificationNameRequest(nullptr) {}
  virtual ~INotificationManagerServiceGetNotificationNameRequest();

  INotificationManagerServiceGetNotificationNameRequest(const INotificationManagerServiceGetNotificationNameRequest& from);
  INotificationManagerServiceGetNotificationNameRequest(INotificationManagerServiceGetNotificationNameRequest&& from) noexcept
    : INotificationManagerServiceGetNotificationNameRequest() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetNotificationNameRequest& operator=(const INotificationManagerServiceGetNotificationNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetNotificationNameRequest& operator=(INotificationManagerServiceGetNotificationNameRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetNotificationNameRequest& default_instance();

  static inline const INotificationManagerServiceGetNotificationNameRequest* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetNotificationNameRequest*>(
               &_INotificationManagerServiceGetNotificationNameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(INotificationManagerServiceGetNotificationNameRequest& a, INotificationManagerServiceGetNotificationNameRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetNotificationNameRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetNotificationNameRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetNotificationNameRequest* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameRequest>(nullptr);
  }

  INotificationManagerServiceGetNotificationNameRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetNotificationNameRequest& from);
  void MergeFrom(const INotificationManagerServiceGetNotificationNameRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetNotificationNameRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameRequest";
  }
  protected:
  explicit INotificationManagerServiceGetNotificationNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotificationNameIdFieldNumber = 1,
  };
  // uint32 notificationNameId = 1;
  void clear_notificationnameid();
  ::PROTOBUF_NAMESPACE_ID::uint32 notificationnameid() const;
  void set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_notificationnameid() const;
  void _internal_set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 notificationnameid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetNotificationNameIdRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdRequest) */ {
 public:
  inline INotificationManagerServiceGetNotificationNameIdRequest() : INotificationManagerServiceGetNotificationNameIdRequest(nullptr) {}
  virtual ~INotificationManagerServiceGetNotificationNameIdRequest();

  INotificationManagerServiceGetNotificationNameIdRequest(const INotificationManagerServiceGetNotificationNameIdRequest& from);
  INotificationManagerServiceGetNotificationNameIdRequest(INotificationManagerServiceGetNotificationNameIdRequest&& from) noexcept
    : INotificationManagerServiceGetNotificationNameIdRequest() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetNotificationNameIdRequest& operator=(const INotificationManagerServiceGetNotificationNameIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetNotificationNameIdRequest& operator=(INotificationManagerServiceGetNotificationNameIdRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetNotificationNameIdRequest& default_instance();

  static inline const INotificationManagerServiceGetNotificationNameIdRequest* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetNotificationNameIdRequest*>(
               &_INotificationManagerServiceGetNotificationNameIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(INotificationManagerServiceGetNotificationNameIdRequest& a, INotificationManagerServiceGetNotificationNameIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetNotificationNameIdRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetNotificationNameIdRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetNotificationNameIdRequest* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameIdRequest>(nullptr);
  }

  INotificationManagerServiceGetNotificationNameIdRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameIdRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetNotificationNameIdRequest& from);
  void MergeFrom(const INotificationManagerServiceGetNotificationNameIdRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetNotificationNameIdRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdRequest";
  }
  protected:
  explicit INotificationManagerServiceGetNotificationNameIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotificationNameFieldNumber = 1,
  };
  // string notificationName = 1;
  void clear_notificationname();
  const std::string& notificationname() const;
  void set_notificationname(const std::string& value);
  void set_notificationname(std::string&& value);
  void set_notificationname(const char* value);
  void set_notificationname(const char* value, size_t size);
  std::string* mutable_notificationname();
  std::string* release_notificationname();
  void set_allocated_notificationname(std::string* notificationname);
  private:
  const std::string& _internal_notificationname() const;
  void _internal_set_notificationname(const std::string& value);
  std::string* _internal_mutable_notificationname();
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr notificationname_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetNotificationNameIdsByStatusRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusRequest) */ {
 public:
  inline INotificationManagerServiceGetNotificationNameIdsByStatusRequest() : INotificationManagerServiceGetNotificationNameIdsByStatusRequest(nullptr) {}
  virtual ~INotificationManagerServiceGetNotificationNameIdsByStatusRequest();

  INotificationManagerServiceGetNotificationNameIdsByStatusRequest(const INotificationManagerServiceGetNotificationNameIdsByStatusRequest& from);
  INotificationManagerServiceGetNotificationNameIdsByStatusRequest(INotificationManagerServiceGetNotificationNameIdsByStatusRequest&& from) noexcept
    : INotificationManagerServiceGetNotificationNameIdsByStatusRequest() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetNotificationNameIdsByStatusRequest& operator=(const INotificationManagerServiceGetNotificationNameIdsByStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetNotificationNameIdsByStatusRequest& operator=(INotificationManagerServiceGetNotificationNameIdsByStatusRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetNotificationNameIdsByStatusRequest& default_instance();

  static inline const INotificationManagerServiceGetNotificationNameIdsByStatusRequest* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetNotificationNameIdsByStatusRequest*>(
               &_INotificationManagerServiceGetNotificationNameIdsByStatusRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(INotificationManagerServiceGetNotificationNameIdsByStatusRequest& a, INotificationManagerServiceGetNotificationNameIdsByStatusRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetNotificationNameIdsByStatusRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetNotificationNameIdsByStatusRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetNotificationNameIdsByStatusRequest* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameIdsByStatusRequest>(nullptr);
  }

  INotificationManagerServiceGetNotificationNameIdsByStatusRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameIdsByStatusRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetNotificationNameIdsByStatusRequest& from);
  void MergeFrom(const INotificationManagerServiceGetNotificationNameIdsByStatusRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetNotificationNameIdsByStatusRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusRequest";
  }
  protected:
  explicit INotificationManagerServiceGetNotificationNameIdsByStatusRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStatusFieldNumber = 1,
  };
  // .Arp.System.Nm.Services.Grpc.NotificationRegistrationStatus status = 1;
  void clear_status();
  ::Arp::System::Nm::Services::Grpc::NotificationRegistrationStatus status() const;
  void set_status(::Arp::System::Nm::Services::Grpc::NotificationRegistrationStatus value);
  private:
  ::Arp::System::Nm::Services::Grpc::NotificationRegistrationStatus _internal_status() const;
  void _internal_set_status(::Arp::System::Nm::Services::Grpc::NotificationRegistrationStatus value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int status_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetNotificationRegistrationRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationRequest) */ {
 public:
  inline INotificationManagerServiceGetNotificationRegistrationRequest() : INotificationManagerServiceGetNotificationRegistrationRequest(nullptr) {}
  virtual ~INotificationManagerServiceGetNotificationRegistrationRequest();

  INotificationManagerServiceGetNotificationRegistrationRequest(const INotificationManagerServiceGetNotificationRegistrationRequest& from);
  INotificationManagerServiceGetNotificationRegistrationRequest(INotificationManagerServiceGetNotificationRegistrationRequest&& from) noexcept
    : INotificationManagerServiceGetNotificationRegistrationRequest() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetNotificationRegistrationRequest& operator=(const INotificationManagerServiceGetNotificationRegistrationRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetNotificationRegistrationRequest& operator=(INotificationManagerServiceGetNotificationRegistrationRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetNotificationRegistrationRequest& default_instance();

  static inline const INotificationManagerServiceGetNotificationRegistrationRequest* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetNotificationRegistrationRequest*>(
               &_INotificationManagerServiceGetNotificationRegistrationRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(INotificationManagerServiceGetNotificationRegistrationRequest& a, INotificationManagerServiceGetNotificationRegistrationRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetNotificationRegistrationRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetNotificationRegistrationRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetNotificationRegistrationRequest* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationRegistrationRequest>(nullptr);
  }

  INotificationManagerServiceGetNotificationRegistrationRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationRegistrationRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetNotificationRegistrationRequest& from);
  void MergeFrom(const INotificationManagerServiceGetNotificationRegistrationRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetNotificationRegistrationRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationRequest";
  }
  protected:
  explicit INotificationManagerServiceGetNotificationRegistrationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNotificationNameIdFieldNumber = 1,
  };
  // uint32 notificationNameId = 1;
  void clear_notificationnameid();
  ::PROTOBUF_NAMESPACE_ID::uint32 notificationnameid() const;
  void set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_notificationnameid() const;
  void _internal_set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 notificationnameid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetPayloadTypeIdRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdRequest) */ {
 public:
  inline INotificationManagerServiceGetPayloadTypeIdRequest() : INotificationManagerServiceGetPayloadTypeIdRequest(nullptr) {}
  virtual ~INotificationManagerServiceGetPayloadTypeIdRequest();

  INotificationManagerServiceGetPayloadTypeIdRequest(const INotificationManagerServiceGetPayloadTypeIdRequest& from);
  INotificationManagerServiceGetPayloadTypeIdRequest(INotificationManagerServiceGetPayloadTypeIdRequest&& from) noexcept
    : INotificationManagerServiceGetPayloadTypeIdRequest() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetPayloadTypeIdRequest& operator=(const INotificationManagerServiceGetPayloadTypeIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetPayloadTypeIdRequest& operator=(INotificationManagerServiceGetPayloadTypeIdRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetPayloadTypeIdRequest& default_instance();

  static inline const INotificationManagerServiceGetPayloadTypeIdRequest* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetPayloadTypeIdRequest*>(
               &_INotificationManagerServiceGetPayloadTypeIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(INotificationManagerServiceGetPayloadTypeIdRequest& a, INotificationManagerServiceGetPayloadTypeIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetPayloadTypeIdRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetPayloadTypeIdRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetPayloadTypeIdRequest* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetPayloadTypeIdRequest>(nullptr);
  }

  INotificationManagerServiceGetPayloadTypeIdRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetPayloadTypeIdRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetPayloadTypeIdRequest& from);
  void MergeFrom(const INotificationManagerServiceGetPayloadTypeIdRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetPayloadTypeIdRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdRequest";
  }
  protected:
  explicit INotificationManagerServiceGetPayloadTypeIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadTypeNameFieldNumber = 1,
  };
  // string payloadTypeName = 1;
  void clear_payloadtypename();
  const std::string& payloadtypename() const;
  void set_payloadtypename(const std::string& value);
  void set_payloadtypename(std::string&& value);
  void set_payloadtypename(const char* value);
  void set_payloadtypename(const char* value, size_t size);
  std::string* mutable_payloadtypename();
  std::string* release_payloadtypename();
  void set_allocated_payloadtypename(std::string* payloadtypename);
  private:
  const std::string& _internal_payloadtypename() const;
  void _internal_set_payloadtypename(const std::string& value);
  std::string* _internal_mutable_payloadtypename();
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr payloadtypename_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetPayloadTypeNameRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameRequest) */ {
 public:
  inline INotificationManagerServiceGetPayloadTypeNameRequest() : INotificationManagerServiceGetPayloadTypeNameRequest(nullptr) {}
  virtual ~INotificationManagerServiceGetPayloadTypeNameRequest();

  INotificationManagerServiceGetPayloadTypeNameRequest(const INotificationManagerServiceGetPayloadTypeNameRequest& from);
  INotificationManagerServiceGetPayloadTypeNameRequest(INotificationManagerServiceGetPayloadTypeNameRequest&& from) noexcept
    : INotificationManagerServiceGetPayloadTypeNameRequest() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetPayloadTypeNameRequest& operator=(const INotificationManagerServiceGetPayloadTypeNameRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetPayloadTypeNameRequest& operator=(INotificationManagerServiceGetPayloadTypeNameRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetPayloadTypeNameRequest& default_instance();

  static inline const INotificationManagerServiceGetPayloadTypeNameRequest* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetPayloadTypeNameRequest*>(
               &_INotificationManagerServiceGetPayloadTypeNameRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(INotificationManagerServiceGetPayloadTypeNameRequest& a, INotificationManagerServiceGetPayloadTypeNameRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetPayloadTypeNameRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetPayloadTypeNameRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetPayloadTypeNameRequest* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetPayloadTypeNameRequest>(nullptr);
  }

  INotificationManagerServiceGetPayloadTypeNameRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetPayloadTypeNameRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetPayloadTypeNameRequest& from);
  void MergeFrom(const INotificationManagerServiceGetPayloadTypeNameRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetPayloadTypeNameRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameRequest";
  }
  protected:
  explicit INotificationManagerServiceGetPayloadTypeNameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadTypeIdFieldNumber = 1,
  };
  // int32 payloadTypeId = 1;
  void clear_payloadtypeid();
  ::PROTOBUF_NAMESPACE_ID::int32 payloadtypeid() const;
  void set_payloadtypeid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_payloadtypeid() const;
  void _internal_set_payloadtypeid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 payloadtypeid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceRegisterNotificationResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationResponse) */ {
 public:
  inline INotificationManagerServiceRegisterNotificationResponse() : INotificationManagerServiceRegisterNotificationResponse(nullptr) {}
  virtual ~INotificationManagerServiceRegisterNotificationResponse();

  INotificationManagerServiceRegisterNotificationResponse(const INotificationManagerServiceRegisterNotificationResponse& from);
  INotificationManagerServiceRegisterNotificationResponse(INotificationManagerServiceRegisterNotificationResponse&& from) noexcept
    : INotificationManagerServiceRegisterNotificationResponse() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceRegisterNotificationResponse& operator=(const INotificationManagerServiceRegisterNotificationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceRegisterNotificationResponse& operator=(INotificationManagerServiceRegisterNotificationResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceRegisterNotificationResponse& default_instance();

  static inline const INotificationManagerServiceRegisterNotificationResponse* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceRegisterNotificationResponse*>(
               &_INotificationManagerServiceRegisterNotificationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(INotificationManagerServiceRegisterNotificationResponse& a, INotificationManagerServiceRegisterNotificationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceRegisterNotificationResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceRegisterNotificationResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceRegisterNotificationResponse* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceRegisterNotificationResponse>(nullptr);
  }

  INotificationManagerServiceRegisterNotificationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceRegisterNotificationResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceRegisterNotificationResponse& from);
  void MergeFrom(const INotificationManagerServiceRegisterNotificationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceRegisterNotificationResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationResponse";
  }
  protected:
  explicit INotificationManagerServiceRegisterNotificationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // uint32 _ReturnValue = 1;
  void clear__returnvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 _returnvalue() const;
  void set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal__returnvalue() const;
  void _internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceSendNotificationResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationResponse) */ {
 public:
  inline INotificationManagerServiceSendNotificationResponse() : INotificationManagerServiceSendNotificationResponse(nullptr) {}
  virtual ~INotificationManagerServiceSendNotificationResponse();

  INotificationManagerServiceSendNotificationResponse(const INotificationManagerServiceSendNotificationResponse& from);
  INotificationManagerServiceSendNotificationResponse(INotificationManagerServiceSendNotificationResponse&& from) noexcept
    : INotificationManagerServiceSendNotificationResponse() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceSendNotificationResponse& operator=(const INotificationManagerServiceSendNotificationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceSendNotificationResponse& operator=(INotificationManagerServiceSendNotificationResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceSendNotificationResponse& default_instance();

  static inline const INotificationManagerServiceSendNotificationResponse* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceSendNotificationResponse*>(
               &_INotificationManagerServiceSendNotificationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(INotificationManagerServiceSendNotificationResponse& a, INotificationManagerServiceSendNotificationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceSendNotificationResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceSendNotificationResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceSendNotificationResponse* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceSendNotificationResponse>(nullptr);
  }

  INotificationManagerServiceSendNotificationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceSendNotificationResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceSendNotificationResponse& from);
  void MergeFrom(const INotificationManagerServiceSendNotificationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceSendNotificationResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationResponse";
  }
  protected:
  explicit INotificationManagerServiceSendNotificationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // uint64 _ReturnValue = 1;
  void clear__returnvalue();
  ::PROTOBUF_NAMESPACE_ID::uint64 _returnvalue() const;
  void set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__returnvalue() const;
  void _internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetNotificationNameResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameResponse) */ {
 public:
  inline INotificationManagerServiceGetNotificationNameResponse() : INotificationManagerServiceGetNotificationNameResponse(nullptr) {}
  virtual ~INotificationManagerServiceGetNotificationNameResponse();

  INotificationManagerServiceGetNotificationNameResponse(const INotificationManagerServiceGetNotificationNameResponse& from);
  INotificationManagerServiceGetNotificationNameResponse(INotificationManagerServiceGetNotificationNameResponse&& from) noexcept
    : INotificationManagerServiceGetNotificationNameResponse() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetNotificationNameResponse& operator=(const INotificationManagerServiceGetNotificationNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetNotificationNameResponse& operator=(INotificationManagerServiceGetNotificationNameResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetNotificationNameResponse& default_instance();

  static inline const INotificationManagerServiceGetNotificationNameResponse* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetNotificationNameResponse*>(
               &_INotificationManagerServiceGetNotificationNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(INotificationManagerServiceGetNotificationNameResponse& a, INotificationManagerServiceGetNotificationNameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetNotificationNameResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetNotificationNameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetNotificationNameResponse* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameResponse>(nullptr);
  }

  INotificationManagerServiceGetNotificationNameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetNotificationNameResponse& from);
  void MergeFrom(const INotificationManagerServiceGetNotificationNameResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetNotificationNameResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameResponse";
  }
  protected:
  explicit INotificationManagerServiceGetNotificationNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // string _ReturnValue = 1;
  void clear__returnvalue();
  const std::string& _returnvalue() const;
  void set__returnvalue(const std::string& value);
  void set__returnvalue(std::string&& value);
  void set__returnvalue(const char* value);
  void set__returnvalue(const char* value, size_t size);
  std::string* mutable__returnvalue();
  std::string* release__returnvalue();
  void set_allocated__returnvalue(std::string* _returnvalue);
  private:
  const std::string& _internal__returnvalue() const;
  void _internal_set__returnvalue(const std::string& value);
  std::string* _internal_mutable__returnvalue();
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetNotificationNameIdResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdResponse) */ {
 public:
  inline INotificationManagerServiceGetNotificationNameIdResponse() : INotificationManagerServiceGetNotificationNameIdResponse(nullptr) {}
  virtual ~INotificationManagerServiceGetNotificationNameIdResponse();

  INotificationManagerServiceGetNotificationNameIdResponse(const INotificationManagerServiceGetNotificationNameIdResponse& from);
  INotificationManagerServiceGetNotificationNameIdResponse(INotificationManagerServiceGetNotificationNameIdResponse&& from) noexcept
    : INotificationManagerServiceGetNotificationNameIdResponse() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetNotificationNameIdResponse& operator=(const INotificationManagerServiceGetNotificationNameIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetNotificationNameIdResponse& operator=(INotificationManagerServiceGetNotificationNameIdResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetNotificationNameIdResponse& default_instance();

  static inline const INotificationManagerServiceGetNotificationNameIdResponse* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetNotificationNameIdResponse*>(
               &_INotificationManagerServiceGetNotificationNameIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(INotificationManagerServiceGetNotificationNameIdResponse& a, INotificationManagerServiceGetNotificationNameIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetNotificationNameIdResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetNotificationNameIdResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetNotificationNameIdResponse* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameIdResponse>(nullptr);
  }

  INotificationManagerServiceGetNotificationNameIdResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameIdResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetNotificationNameIdResponse& from);
  void MergeFrom(const INotificationManagerServiceGetNotificationNameIdResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetNotificationNameIdResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdResponse";
  }
  protected:
  explicit INotificationManagerServiceGetNotificationNameIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // uint32 _ReturnValue = 1;
  void clear__returnvalue();
  ::PROTOBUF_NAMESPACE_ID::uint32 _returnvalue() const;
  void set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal__returnvalue() const;
  void _internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint32 _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetNotificationNameIdsByStatusResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusResponse) */ {
 public:
  inline INotificationManagerServiceGetNotificationNameIdsByStatusResponse() : INotificationManagerServiceGetNotificationNameIdsByStatusResponse(nullptr) {}
  virtual ~INotificationManagerServiceGetNotificationNameIdsByStatusResponse();

  INotificationManagerServiceGetNotificationNameIdsByStatusResponse(const INotificationManagerServiceGetNotificationNameIdsByStatusResponse& from);
  INotificationManagerServiceGetNotificationNameIdsByStatusResponse(INotificationManagerServiceGetNotificationNameIdsByStatusResponse&& from) noexcept
    : INotificationManagerServiceGetNotificationNameIdsByStatusResponse() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetNotificationNameIdsByStatusResponse& operator=(const INotificationManagerServiceGetNotificationNameIdsByStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetNotificationNameIdsByStatusResponse& operator=(INotificationManagerServiceGetNotificationNameIdsByStatusResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetNotificationNameIdsByStatusResponse& default_instance();

  static inline const INotificationManagerServiceGetNotificationNameIdsByStatusResponse* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetNotificationNameIdsByStatusResponse*>(
               &_INotificationManagerServiceGetNotificationNameIdsByStatusResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(INotificationManagerServiceGetNotificationNameIdsByStatusResponse& a, INotificationManagerServiceGetNotificationNameIdsByStatusResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetNotificationNameIdsByStatusResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetNotificationNameIdsByStatusResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetNotificationNameIdsByStatusResponse* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameIdsByStatusResponse>(nullptr);
  }

  INotificationManagerServiceGetNotificationNameIdsByStatusResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationNameIdsByStatusResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetNotificationNameIdsByStatusResponse& from);
  void MergeFrom(const INotificationManagerServiceGetNotificationNameIdsByStatusResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetNotificationNameIdsByStatusResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusResponse";
  }
  protected:
  explicit INotificationManagerServiceGetNotificationNameIdsByStatusResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // repeated uint32 _ReturnValue = 1;
  int _returnvalue_size() const;
  private:
  int _internal__returnvalue_size() const;
  public:
  void clear__returnvalue();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal__returnvalue(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal__returnvalue() const;
  void _internal_add__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable__returnvalue();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 _returnvalue(int index) const;
  void set__returnvalue(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _returnvalue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable__returnvalue();

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > _returnvalue_;
  mutable std::atomic<int> __returnvalue_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetAllKnownNotificationNameIdsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetAllKnownNotificationNameIdsResponse) */ {
 public:
  inline INotificationManagerServiceGetAllKnownNotificationNameIdsResponse() : INotificationManagerServiceGetAllKnownNotificationNameIdsResponse(nullptr) {}
  virtual ~INotificationManagerServiceGetAllKnownNotificationNameIdsResponse();

  INotificationManagerServiceGetAllKnownNotificationNameIdsResponse(const INotificationManagerServiceGetAllKnownNotificationNameIdsResponse& from);
  INotificationManagerServiceGetAllKnownNotificationNameIdsResponse(INotificationManagerServiceGetAllKnownNotificationNameIdsResponse&& from) noexcept
    : INotificationManagerServiceGetAllKnownNotificationNameIdsResponse() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetAllKnownNotificationNameIdsResponse& operator=(const INotificationManagerServiceGetAllKnownNotificationNameIdsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetAllKnownNotificationNameIdsResponse& operator=(INotificationManagerServiceGetAllKnownNotificationNameIdsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetAllKnownNotificationNameIdsResponse& default_instance();

  static inline const INotificationManagerServiceGetAllKnownNotificationNameIdsResponse* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetAllKnownNotificationNameIdsResponse*>(
               &_INotificationManagerServiceGetAllKnownNotificationNameIdsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(INotificationManagerServiceGetAllKnownNotificationNameIdsResponse& a, INotificationManagerServiceGetAllKnownNotificationNameIdsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetAllKnownNotificationNameIdsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetAllKnownNotificationNameIdsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetAllKnownNotificationNameIdsResponse* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetAllKnownNotificationNameIdsResponse>(nullptr);
  }

  INotificationManagerServiceGetAllKnownNotificationNameIdsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetAllKnownNotificationNameIdsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetAllKnownNotificationNameIdsResponse& from);
  void MergeFrom(const INotificationManagerServiceGetAllKnownNotificationNameIdsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetAllKnownNotificationNameIdsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetAllKnownNotificationNameIdsResponse";
  }
  protected:
  explicit INotificationManagerServiceGetAllKnownNotificationNameIdsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // repeated uint32 _ReturnValue = 1;
  int _returnvalue_size() const;
  private:
  int _internal__returnvalue_size() const;
  public:
  void clear__returnvalue();
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal__returnvalue(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _internal__returnvalue() const;
  void _internal_add__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      _internal_mutable__returnvalue();
  public:
  ::PROTOBUF_NAMESPACE_ID::uint32 _returnvalue(int index) const;
  void set__returnvalue(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value);
  void add__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
      _returnvalue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
      mutable__returnvalue();

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetAllKnownNotificationNameIdsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 > _returnvalue_;
  mutable std::atomic<int> __returnvalue_cached_byte_size_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetNotificationRegistrationResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationResponse) */ {
 public:
  inline INotificationManagerServiceGetNotificationRegistrationResponse() : INotificationManagerServiceGetNotificationRegistrationResponse(nullptr) {}
  virtual ~INotificationManagerServiceGetNotificationRegistrationResponse();

  INotificationManagerServiceGetNotificationRegistrationResponse(const INotificationManagerServiceGetNotificationRegistrationResponse& from);
  INotificationManagerServiceGetNotificationRegistrationResponse(INotificationManagerServiceGetNotificationRegistrationResponse&& from) noexcept
    : INotificationManagerServiceGetNotificationRegistrationResponse() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetNotificationRegistrationResponse& operator=(const INotificationManagerServiceGetNotificationRegistrationResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetNotificationRegistrationResponse& operator=(INotificationManagerServiceGetNotificationRegistrationResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetNotificationRegistrationResponse& default_instance();

  static inline const INotificationManagerServiceGetNotificationRegistrationResponse* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetNotificationRegistrationResponse*>(
               &_INotificationManagerServiceGetNotificationRegistrationResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(INotificationManagerServiceGetNotificationRegistrationResponse& a, INotificationManagerServiceGetNotificationRegistrationResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetNotificationRegistrationResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetNotificationRegistrationResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetNotificationRegistrationResponse* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationRegistrationResponse>(nullptr);
  }

  INotificationManagerServiceGetNotificationRegistrationResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNotificationRegistrationResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetNotificationRegistrationResponse& from);
  void MergeFrom(const INotificationManagerServiceGetNotificationRegistrationResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetNotificationRegistrationResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationResponse";
  }
  protected:
  explicit INotificationManagerServiceGetNotificationRegistrationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // .Arp.System.Nm.Services.Grpc.NotificationRegistrationInfo _ReturnValue = 1;
  bool has__returnvalue() const;
  private:
  bool _internal_has__returnvalue() const;
  public:
  void clear__returnvalue();
  const ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo& _returnvalue() const;
  ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* release__returnvalue();
  ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* mutable__returnvalue();
  void set_allocated__returnvalue(::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* _returnvalue);
  private:
  const ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo& _internal__returnvalue() const;
  ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* _internal_mutable__returnvalue();
  public:
  void unsafe_arena_set_allocated__returnvalue(
      ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* _returnvalue);
  ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* unsafe_arena_release__returnvalue();

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetPayloadTypeIdResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdResponse) */ {
 public:
  inline INotificationManagerServiceGetPayloadTypeIdResponse() : INotificationManagerServiceGetPayloadTypeIdResponse(nullptr) {}
  virtual ~INotificationManagerServiceGetPayloadTypeIdResponse();

  INotificationManagerServiceGetPayloadTypeIdResponse(const INotificationManagerServiceGetPayloadTypeIdResponse& from);
  INotificationManagerServiceGetPayloadTypeIdResponse(INotificationManagerServiceGetPayloadTypeIdResponse&& from) noexcept
    : INotificationManagerServiceGetPayloadTypeIdResponse() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetPayloadTypeIdResponse& operator=(const INotificationManagerServiceGetPayloadTypeIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetPayloadTypeIdResponse& operator=(INotificationManagerServiceGetPayloadTypeIdResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetPayloadTypeIdResponse& default_instance();

  static inline const INotificationManagerServiceGetPayloadTypeIdResponse* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetPayloadTypeIdResponse*>(
               &_INotificationManagerServiceGetPayloadTypeIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(INotificationManagerServiceGetPayloadTypeIdResponse& a, INotificationManagerServiceGetPayloadTypeIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetPayloadTypeIdResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetPayloadTypeIdResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetPayloadTypeIdResponse* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetPayloadTypeIdResponse>(nullptr);
  }

  INotificationManagerServiceGetPayloadTypeIdResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetPayloadTypeIdResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetPayloadTypeIdResponse& from);
  void MergeFrom(const INotificationManagerServiceGetPayloadTypeIdResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetPayloadTypeIdResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdResponse";
  }
  protected:
  explicit INotificationManagerServiceGetPayloadTypeIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // int32 _ReturnValue = 1;
  void clear__returnvalue();
  ::PROTOBUF_NAMESPACE_ID::int32 _returnvalue() const;
  void set__returnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal__returnvalue() const;
  void _internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetPayloadTypeNameResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameResponse) */ {
 public:
  inline INotificationManagerServiceGetPayloadTypeNameResponse() : INotificationManagerServiceGetPayloadTypeNameResponse(nullptr) {}
  virtual ~INotificationManagerServiceGetPayloadTypeNameResponse();

  INotificationManagerServiceGetPayloadTypeNameResponse(const INotificationManagerServiceGetPayloadTypeNameResponse& from);
  INotificationManagerServiceGetPayloadTypeNameResponse(INotificationManagerServiceGetPayloadTypeNameResponse&& from) noexcept
    : INotificationManagerServiceGetPayloadTypeNameResponse() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetPayloadTypeNameResponse& operator=(const INotificationManagerServiceGetPayloadTypeNameResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetPayloadTypeNameResponse& operator=(INotificationManagerServiceGetPayloadTypeNameResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetPayloadTypeNameResponse& default_instance();

  static inline const INotificationManagerServiceGetPayloadTypeNameResponse* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetPayloadTypeNameResponse*>(
               &_INotificationManagerServiceGetPayloadTypeNameResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(INotificationManagerServiceGetPayloadTypeNameResponse& a, INotificationManagerServiceGetPayloadTypeNameResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetPayloadTypeNameResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetPayloadTypeNameResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetPayloadTypeNameResponse* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetPayloadTypeNameResponse>(nullptr);
  }

  INotificationManagerServiceGetPayloadTypeNameResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetPayloadTypeNameResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetPayloadTypeNameResponse& from);
  void MergeFrom(const INotificationManagerServiceGetPayloadTypeNameResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetPayloadTypeNameResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameResponse";
  }
  protected:
  explicit INotificationManagerServiceGetPayloadTypeNameResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // string _ReturnValue = 1;
  void clear__returnvalue();
  const std::string& _returnvalue() const;
  void set__returnvalue(const std::string& value);
  void set__returnvalue(std::string&& value);
  void set__returnvalue(const char* value);
  void set__returnvalue(const char* value, size_t size);
  std::string* mutable__returnvalue();
  std::string* release__returnvalue();
  void set_allocated__returnvalue(std::string* _returnvalue);
  private:
  const std::string& _internal__returnvalue() const;
  void _internal_set__returnvalue(const std::string& value);
  std::string* _internal_mutable__returnvalue();
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// -------------------------------------------------------------------

class INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse) */ {
 public:
  inline INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse() : INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse(nullptr) {}
  virtual ~INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse();

  INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse(const INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse& from);
  INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse(INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse&& from) noexcept
    : INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse() {
    *this = ::std::move(from);
  }

  inline INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse& operator=(const INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse& operator=(INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse& default_instance();

  static inline const INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse* internal_default_instance() {
    return reinterpret_cast<const INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse*>(
               &_INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse& a, INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse* New() const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse>(nullptr);
  }

  INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse& from);
  void MergeFrom(const INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse";
  }
  protected:
  explicit INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_INotificationManagerService_2eproto);
    return ::descriptor_table_INotificationManagerService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // uint64 _ReturnValue = 1;
  void clear__returnvalue();
  ::PROTOBUF_NAMESPACE_ID::uint64 _returnvalue() const;
  void set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal__returnvalue() const;
  void _internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_INotificationManagerService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// INotificationManagerServiceRegisterNotificationRequest

// string notificationName = 1;
inline void INotificationManagerServiceRegisterNotificationRequest::clear_notificationname() {
  notificationname_.ClearToEmpty();
}
inline const std::string& INotificationManagerServiceRegisterNotificationRequest::notificationname() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.notificationName)
  return _internal_notificationname();
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_notificationname(const std::string& value) {
  _internal_set_notificationname(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.notificationName)
}
inline std::string* INotificationManagerServiceRegisterNotificationRequest::mutable_notificationname() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.notificationName)
  return _internal_mutable_notificationname();
}
inline const std::string& INotificationManagerServiceRegisterNotificationRequest::_internal_notificationname() const {
  return notificationname_.Get();
}
inline void INotificationManagerServiceRegisterNotificationRequest::_internal_set_notificationname(const std::string& value) {
  
  notificationname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_notificationname(std::string&& value) {
  
  notificationname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.notificationName)
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_notificationname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  notificationname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.notificationName)
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_notificationname(const char* value,
    size_t size) {
  
  notificationname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.notificationName)
}
inline std::string* INotificationManagerServiceRegisterNotificationRequest::_internal_mutable_notificationname() {
  
  return notificationname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* INotificationManagerServiceRegisterNotificationRequest::release_notificationname() {
  // @@protoc_insertion_point(field_release:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.notificationName)
  return notificationname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_allocated_notificationname(std::string* notificationname) {
  if (notificationname != nullptr) {
    
  } else {
    
  }
  notificationname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), notificationname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.notificationName)
}

// string senderName = 2;
inline void INotificationManagerServiceRegisterNotificationRequest::clear_sendername() {
  sendername_.ClearToEmpty();
}
inline const std::string& INotificationManagerServiceRegisterNotificationRequest::sendername() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.senderName)
  return _internal_sendername();
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_sendername(const std::string& value) {
  _internal_set_sendername(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.senderName)
}
inline std::string* INotificationManagerServiceRegisterNotificationRequest::mutable_sendername() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.senderName)
  return _internal_mutable_sendername();
}
inline const std::string& INotificationManagerServiceRegisterNotificationRequest::_internal_sendername() const {
  return sendername_.Get();
}
inline void INotificationManagerServiceRegisterNotificationRequest::_internal_set_sendername(const std::string& value) {
  
  sendername_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_sendername(std::string&& value) {
  
  sendername_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.senderName)
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_sendername(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  sendername_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.senderName)
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_sendername(const char* value,
    size_t size) {
  
  sendername_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.senderName)
}
inline std::string* INotificationManagerServiceRegisterNotificationRequest::_internal_mutable_sendername() {
  
  return sendername_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* INotificationManagerServiceRegisterNotificationRequest::release_sendername() {
  // @@protoc_insertion_point(field_release:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.senderName)
  return sendername_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_allocated_sendername(std::string* sendername) {
  if (sendername != nullptr) {
    
  } else {
    
  }
  sendername_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), sendername,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.senderName)
}

// .Arp.System.Nm.Services.Grpc.Severity severity = 3;
inline void INotificationManagerServiceRegisterNotificationRequest::clear_severity() {
  severity_ = 0;
}
inline ::Arp::System::Nm::Services::Grpc::Severity INotificationManagerServiceRegisterNotificationRequest::_internal_severity() const {
  return static_cast< ::Arp::System::Nm::Services::Grpc::Severity >(severity_);
}
inline ::Arp::System::Nm::Services::Grpc::Severity INotificationManagerServiceRegisterNotificationRequest::severity() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.severity)
  return _internal_severity();
}
inline void INotificationManagerServiceRegisterNotificationRequest::_internal_set_severity(::Arp::System::Nm::Services::Grpc::Severity value) {
  
  severity_ = value;
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_severity(::Arp::System::Nm::Services::Grpc::Severity value) {
  _internal_set_severity(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.severity)
}

// string payloadTypeName = 4;
inline void INotificationManagerServiceRegisterNotificationRequest::clear_payloadtypename() {
  payloadtypename_.ClearToEmpty();
}
inline const std::string& INotificationManagerServiceRegisterNotificationRequest::payloadtypename() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.payloadTypeName)
  return _internal_payloadtypename();
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_payloadtypename(const std::string& value) {
  _internal_set_payloadtypename(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.payloadTypeName)
}
inline std::string* INotificationManagerServiceRegisterNotificationRequest::mutable_payloadtypename() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.payloadTypeName)
  return _internal_mutable_payloadtypename();
}
inline const std::string& INotificationManagerServiceRegisterNotificationRequest::_internal_payloadtypename() const {
  return payloadtypename_.Get();
}
inline void INotificationManagerServiceRegisterNotificationRequest::_internal_set_payloadtypename(const std::string& value) {
  
  payloadtypename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_payloadtypename(std::string&& value) {
  
  payloadtypename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.payloadTypeName)
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_payloadtypename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  payloadtypename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.payloadTypeName)
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_payloadtypename(const char* value,
    size_t size) {
  
  payloadtypename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.payloadTypeName)
}
inline std::string* INotificationManagerServiceRegisterNotificationRequest::_internal_mutable_payloadtypename() {
  
  return payloadtypename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* INotificationManagerServiceRegisterNotificationRequest::release_payloadtypename() {
  // @@protoc_insertion_point(field_release:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.payloadTypeName)
  return payloadtypename_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void INotificationManagerServiceRegisterNotificationRequest::set_allocated_payloadtypename(std::string* payloadtypename) {
  if (payloadtypename != nullptr) {
    
  } else {
    
  }
  payloadtypename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), payloadtypename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationRequest.payloadTypeName)
}

// -------------------------------------------------------------------

// INotificationManagerServiceUnregisterNotificationRequest

// uint32 notificationNameId = 1;
inline void INotificationManagerServiceUnregisterNotificationRequest::clear_notificationnameid() {
  notificationnameid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceUnregisterNotificationRequest::_internal_notificationnameid() const {
  return notificationnameid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceUnregisterNotificationRequest::notificationnameid() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceUnregisterNotificationRequest.notificationNameId)
  return _internal_notificationnameid();
}
inline void INotificationManagerServiceUnregisterNotificationRequest::_internal_set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  notificationnameid_ = value;
}
inline void INotificationManagerServiceUnregisterNotificationRequest::set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_notificationnameid(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceUnregisterNotificationRequest.notificationNameId)
}

// -------------------------------------------------------------------

// INotificationManagerServiceSendNotificationRequest

// uint32 notificationNameId = 1;
inline void INotificationManagerServiceSendNotificationRequest::clear_notificationnameid() {
  notificationnameid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceSendNotificationRequest::_internal_notificationnameid() const {
  return notificationnameid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceSendNotificationRequest::notificationnameid() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.notificationNameId)
  return _internal_notificationnameid();
}
inline void INotificationManagerServiceSendNotificationRequest::_internal_set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  notificationnameid_ = value;
}
inline void INotificationManagerServiceSendNotificationRequest::set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_notificationnameid(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.notificationNameId)
}

// .Arp.Grpc.DateTime timestamp = 2;
inline bool INotificationManagerServiceSendNotificationRequest::_internal_has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != nullptr;
}
inline bool INotificationManagerServiceSendNotificationRequest::has_timestamp() const {
  return _internal_has_timestamp();
}
inline const ::Arp::Grpc::DateTime& INotificationManagerServiceSendNotificationRequest::_internal_timestamp() const {
  const ::Arp::Grpc::DateTime* p = timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::Arp::Grpc::DateTime&>(
      ::Arp::Grpc::_DateTime_default_instance_);
}
inline const ::Arp::Grpc::DateTime& INotificationManagerServiceSendNotificationRequest::timestamp() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.timestamp)
  return _internal_timestamp();
}
inline void INotificationManagerServiceSendNotificationRequest::unsafe_arena_set_allocated_timestamp(
    ::Arp::Grpc::DateTime* timestamp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp_);
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.timestamp)
}
inline ::Arp::Grpc::DateTime* INotificationManagerServiceSendNotificationRequest::release_timestamp() {
  
  ::Arp::Grpc::DateTime* temp = timestamp_;
  timestamp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Arp::Grpc::DateTime* INotificationManagerServiceSendNotificationRequest::unsafe_arena_release_timestamp() {
  // @@protoc_insertion_point(field_release:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.timestamp)
  
  ::Arp::Grpc::DateTime* temp = timestamp_;
  timestamp_ = nullptr;
  return temp;
}
inline ::Arp::Grpc::DateTime* INotificationManagerServiceSendNotificationRequest::_internal_mutable_timestamp() {
  
  if (timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::Arp::Grpc::DateTime>(GetArena());
    timestamp_ = p;
  }
  return timestamp_;
}
inline ::Arp::Grpc::DateTime* INotificationManagerServiceSendNotificationRequest::mutable_timestamp() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.timestamp)
  return _internal_mutable_timestamp();
}
inline void INotificationManagerServiceSendNotificationRequest::set_allocated_timestamp(::Arp::Grpc::DateTime* timestamp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.timestamp)
}

// repeated .Arp.Type.Grpc.ObjectType payload = 3;
inline int INotificationManagerServiceSendNotificationRequest::_internal_payload_size() const {
  return payload_.size();
}
inline int INotificationManagerServiceSendNotificationRequest::payload_size() const {
  return _internal_payload_size();
}
inline ::Arp::Type::Grpc::ObjectType* INotificationManagerServiceSendNotificationRequest::mutable_payload(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.payload)
  return payload_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
INotificationManagerServiceSendNotificationRequest::mutable_payload() {
  // @@protoc_insertion_point(field_mutable_list:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.payload)
  return &payload_;
}
inline const ::Arp::Type::Grpc::ObjectType& INotificationManagerServiceSendNotificationRequest::_internal_payload(int index) const {
  return payload_.Get(index);
}
inline const ::Arp::Type::Grpc::ObjectType& INotificationManagerServiceSendNotificationRequest::payload(int index) const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.payload)
  return _internal_payload(index);
}
inline ::Arp::Type::Grpc::ObjectType* INotificationManagerServiceSendNotificationRequest::_internal_add_payload() {
  return payload_.Add();
}
inline ::Arp::Type::Grpc::ObjectType* INotificationManagerServiceSendNotificationRequest::add_payload() {
  // @@protoc_insertion_point(field_add:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.payload)
  return _internal_add_payload();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
INotificationManagerServiceSendNotificationRequest::payload() const {
  // @@protoc_insertion_point(field_list:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationRequest.payload)
  return payload_;
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetNotificationNameRequest

// uint32 notificationNameId = 1;
inline void INotificationManagerServiceGetNotificationNameRequest::clear_notificationnameid() {
  notificationnameid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceGetNotificationNameRequest::_internal_notificationnameid() const {
  return notificationnameid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceGetNotificationNameRequest::notificationnameid() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameRequest.notificationNameId)
  return _internal_notificationnameid();
}
inline void INotificationManagerServiceGetNotificationNameRequest::_internal_set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  notificationnameid_ = value;
}
inline void INotificationManagerServiceGetNotificationNameRequest::set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_notificationnameid(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameRequest.notificationNameId)
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetNotificationNameIdRequest

// string notificationName = 1;
inline void INotificationManagerServiceGetNotificationNameIdRequest::clear_notificationname() {
  notificationname_.ClearToEmpty();
}
inline const std::string& INotificationManagerServiceGetNotificationNameIdRequest::notificationname() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdRequest.notificationName)
  return _internal_notificationname();
}
inline void INotificationManagerServiceGetNotificationNameIdRequest::set_notificationname(const std::string& value) {
  _internal_set_notificationname(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdRequest.notificationName)
}
inline std::string* INotificationManagerServiceGetNotificationNameIdRequest::mutable_notificationname() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdRequest.notificationName)
  return _internal_mutable_notificationname();
}
inline const std::string& INotificationManagerServiceGetNotificationNameIdRequest::_internal_notificationname() const {
  return notificationname_.Get();
}
inline void INotificationManagerServiceGetNotificationNameIdRequest::_internal_set_notificationname(const std::string& value) {
  
  notificationname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void INotificationManagerServiceGetNotificationNameIdRequest::set_notificationname(std::string&& value) {
  
  notificationname_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdRequest.notificationName)
}
inline void INotificationManagerServiceGetNotificationNameIdRequest::set_notificationname(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  notificationname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdRequest.notificationName)
}
inline void INotificationManagerServiceGetNotificationNameIdRequest::set_notificationname(const char* value,
    size_t size) {
  
  notificationname_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdRequest.notificationName)
}
inline std::string* INotificationManagerServiceGetNotificationNameIdRequest::_internal_mutable_notificationname() {
  
  return notificationname_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* INotificationManagerServiceGetNotificationNameIdRequest::release_notificationname() {
  // @@protoc_insertion_point(field_release:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdRequest.notificationName)
  return notificationname_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void INotificationManagerServiceGetNotificationNameIdRequest::set_allocated_notificationname(std::string* notificationname) {
  if (notificationname != nullptr) {
    
  } else {
    
  }
  notificationname_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), notificationname,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdRequest.notificationName)
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetNotificationNameIdsByStatusRequest

// .Arp.System.Nm.Services.Grpc.NotificationRegistrationStatus status = 1;
inline void INotificationManagerServiceGetNotificationNameIdsByStatusRequest::clear_status() {
  status_ = 0;
}
inline ::Arp::System::Nm::Services::Grpc::NotificationRegistrationStatus INotificationManagerServiceGetNotificationNameIdsByStatusRequest::_internal_status() const {
  return static_cast< ::Arp::System::Nm::Services::Grpc::NotificationRegistrationStatus >(status_);
}
inline ::Arp::System::Nm::Services::Grpc::NotificationRegistrationStatus INotificationManagerServiceGetNotificationNameIdsByStatusRequest::status() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusRequest.status)
  return _internal_status();
}
inline void INotificationManagerServiceGetNotificationNameIdsByStatusRequest::_internal_set_status(::Arp::System::Nm::Services::Grpc::NotificationRegistrationStatus value) {
  
  status_ = value;
}
inline void INotificationManagerServiceGetNotificationNameIdsByStatusRequest::set_status(::Arp::System::Nm::Services::Grpc::NotificationRegistrationStatus value) {
  _internal_set_status(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusRequest.status)
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetNotificationRegistrationRequest

// uint32 notificationNameId = 1;
inline void INotificationManagerServiceGetNotificationRegistrationRequest::clear_notificationnameid() {
  notificationnameid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceGetNotificationRegistrationRequest::_internal_notificationnameid() const {
  return notificationnameid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceGetNotificationRegistrationRequest::notificationnameid() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationRequest.notificationNameId)
  return _internal_notificationnameid();
}
inline void INotificationManagerServiceGetNotificationRegistrationRequest::_internal_set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  notificationnameid_ = value;
}
inline void INotificationManagerServiceGetNotificationRegistrationRequest::set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_notificationnameid(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationRequest.notificationNameId)
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetPayloadTypeIdRequest

// string payloadTypeName = 1;
inline void INotificationManagerServiceGetPayloadTypeIdRequest::clear_payloadtypename() {
  payloadtypename_.ClearToEmpty();
}
inline const std::string& INotificationManagerServiceGetPayloadTypeIdRequest::payloadtypename() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdRequest.payloadTypeName)
  return _internal_payloadtypename();
}
inline void INotificationManagerServiceGetPayloadTypeIdRequest::set_payloadtypename(const std::string& value) {
  _internal_set_payloadtypename(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdRequest.payloadTypeName)
}
inline std::string* INotificationManagerServiceGetPayloadTypeIdRequest::mutable_payloadtypename() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdRequest.payloadTypeName)
  return _internal_mutable_payloadtypename();
}
inline const std::string& INotificationManagerServiceGetPayloadTypeIdRequest::_internal_payloadtypename() const {
  return payloadtypename_.Get();
}
inline void INotificationManagerServiceGetPayloadTypeIdRequest::_internal_set_payloadtypename(const std::string& value) {
  
  payloadtypename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void INotificationManagerServiceGetPayloadTypeIdRequest::set_payloadtypename(std::string&& value) {
  
  payloadtypename_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdRequest.payloadTypeName)
}
inline void INotificationManagerServiceGetPayloadTypeIdRequest::set_payloadtypename(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  payloadtypename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdRequest.payloadTypeName)
}
inline void INotificationManagerServiceGetPayloadTypeIdRequest::set_payloadtypename(const char* value,
    size_t size) {
  
  payloadtypename_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdRequest.payloadTypeName)
}
inline std::string* INotificationManagerServiceGetPayloadTypeIdRequest::_internal_mutable_payloadtypename() {
  
  return payloadtypename_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* INotificationManagerServiceGetPayloadTypeIdRequest::release_payloadtypename() {
  // @@protoc_insertion_point(field_release:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdRequest.payloadTypeName)
  return payloadtypename_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void INotificationManagerServiceGetPayloadTypeIdRequest::set_allocated_payloadtypename(std::string* payloadtypename) {
  if (payloadtypename != nullptr) {
    
  } else {
    
  }
  payloadtypename_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), payloadtypename,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdRequest.payloadTypeName)
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetPayloadTypeNameRequest

// int32 payloadTypeId = 1;
inline void INotificationManagerServiceGetPayloadTypeNameRequest::clear_payloadtypeid() {
  payloadtypeid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 INotificationManagerServiceGetPayloadTypeNameRequest::_internal_payloadtypeid() const {
  return payloadtypeid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 INotificationManagerServiceGetPayloadTypeNameRequest::payloadtypeid() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameRequest.payloadTypeId)
  return _internal_payloadtypeid();
}
inline void INotificationManagerServiceGetPayloadTypeNameRequest::_internal_set_payloadtypeid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  payloadtypeid_ = value;
}
inline void INotificationManagerServiceGetPayloadTypeNameRequest::set_payloadtypeid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_payloadtypeid(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameRequest.payloadTypeId)
}

// -------------------------------------------------------------------

// INotificationManagerServiceRegisterNotificationResponse

// uint32 _ReturnValue = 1;
inline void INotificationManagerServiceRegisterNotificationResponse::clear__returnvalue() {
  _returnvalue_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceRegisterNotificationResponse::_internal__returnvalue() const {
  return _returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceRegisterNotificationResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void INotificationManagerServiceRegisterNotificationResponse::_internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  _returnvalue_ = value;
}
inline void INotificationManagerServiceRegisterNotificationResponse::set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceRegisterNotificationResponse._ReturnValue)
}

// -------------------------------------------------------------------

// INotificationManagerServiceSendNotificationResponse

// uint64 _ReturnValue = 1;
inline void INotificationManagerServiceSendNotificationResponse::clear__returnvalue() {
  _returnvalue_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INotificationManagerServiceSendNotificationResponse::_internal__returnvalue() const {
  return _returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INotificationManagerServiceSendNotificationResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void INotificationManagerServiceSendNotificationResponse::_internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _returnvalue_ = value;
}
inline void INotificationManagerServiceSendNotificationResponse::set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceSendNotificationResponse._ReturnValue)
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetNotificationNameResponse

// string _ReturnValue = 1;
inline void INotificationManagerServiceGetNotificationNameResponse::clear__returnvalue() {
  _returnvalue_.ClearToEmpty();
}
inline const std::string& INotificationManagerServiceGetNotificationNameResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void INotificationManagerServiceGetNotificationNameResponse::set__returnvalue(const std::string& value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameResponse._ReturnValue)
}
inline std::string* INotificationManagerServiceGetNotificationNameResponse::mutable__returnvalue() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameResponse._ReturnValue)
  return _internal_mutable__returnvalue();
}
inline const std::string& INotificationManagerServiceGetNotificationNameResponse::_internal__returnvalue() const {
  return _returnvalue_.Get();
}
inline void INotificationManagerServiceGetNotificationNameResponse::_internal_set__returnvalue(const std::string& value) {
  
  _returnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void INotificationManagerServiceGetNotificationNameResponse::set__returnvalue(std::string&& value) {
  
  _returnvalue_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameResponse._ReturnValue)
}
inline void INotificationManagerServiceGetNotificationNameResponse::set__returnvalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  _returnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameResponse._ReturnValue)
}
inline void INotificationManagerServiceGetNotificationNameResponse::set__returnvalue(const char* value,
    size_t size) {
  
  _returnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameResponse._ReturnValue)
}
inline std::string* INotificationManagerServiceGetNotificationNameResponse::_internal_mutable__returnvalue() {
  
  return _returnvalue_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* INotificationManagerServiceGetNotificationNameResponse::release__returnvalue() {
  // @@protoc_insertion_point(field_release:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameResponse._ReturnValue)
  return _returnvalue_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void INotificationManagerServiceGetNotificationNameResponse::set_allocated__returnvalue(std::string* _returnvalue) {
  if (_returnvalue != nullptr) {
    
  } else {
    
  }
  _returnvalue_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), _returnvalue,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameResponse._ReturnValue)
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetNotificationNameIdResponse

// uint32 _ReturnValue = 1;
inline void INotificationManagerServiceGetNotificationNameIdResponse::clear__returnvalue() {
  _returnvalue_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceGetNotificationNameIdResponse::_internal__returnvalue() const {
  return _returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceGetNotificationNameIdResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void INotificationManagerServiceGetNotificationNameIdResponse::_internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  _returnvalue_ = value;
}
inline void INotificationManagerServiceGetNotificationNameIdResponse::set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdResponse._ReturnValue)
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetNotificationNameIdsByStatusResponse

// repeated uint32 _ReturnValue = 1;
inline int INotificationManagerServiceGetNotificationNameIdsByStatusResponse::_internal__returnvalue_size() const {
  return _returnvalue_.size();
}
inline int INotificationManagerServiceGetNotificationNameIdsByStatusResponse::_returnvalue_size() const {
  return _internal__returnvalue_size();
}
inline void INotificationManagerServiceGetNotificationNameIdsByStatusResponse::clear__returnvalue() {
  _returnvalue_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceGetNotificationNameIdsByStatusResponse::_internal__returnvalue(int index) const {
  return _returnvalue_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceGetNotificationNameIdsByStatusResponse::_returnvalue(int index) const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusResponse._ReturnValue)
  return _internal__returnvalue(index);
}
inline void INotificationManagerServiceGetNotificationNameIdsByStatusResponse::set__returnvalue(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _returnvalue_.Set(index, value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusResponse._ReturnValue)
}
inline void INotificationManagerServiceGetNotificationNameIdsByStatusResponse::_internal_add__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _returnvalue_.Add(value);
}
inline void INotificationManagerServiceGetNotificationNameIdsByStatusResponse::add__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add__returnvalue(value);
  // @@protoc_insertion_point(field_add:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusResponse._ReturnValue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
INotificationManagerServiceGetNotificationNameIdsByStatusResponse::_internal__returnvalue() const {
  return _returnvalue_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
INotificationManagerServiceGetNotificationNameIdsByStatusResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_list:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusResponse._ReturnValue)
  return _internal__returnvalue();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
INotificationManagerServiceGetNotificationNameIdsByStatusResponse::_internal_mutable__returnvalue() {
  return &_returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
INotificationManagerServiceGetNotificationNameIdsByStatusResponse::mutable__returnvalue() {
  // @@protoc_insertion_point(field_mutable_list:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationNameIdsByStatusResponse._ReturnValue)
  return _internal_mutable__returnvalue();
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetAllKnownNotificationNameIdsResponse

// repeated uint32 _ReturnValue = 1;
inline int INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::_internal__returnvalue_size() const {
  return _returnvalue_.size();
}
inline int INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::_returnvalue_size() const {
  return _internal__returnvalue_size();
}
inline void INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::clear__returnvalue() {
  _returnvalue_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::_internal__returnvalue(int index) const {
  return _returnvalue_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::_returnvalue(int index) const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetAllKnownNotificationNameIdsResponse._ReturnValue)
  return _internal__returnvalue(index);
}
inline void INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::set__returnvalue(int index, ::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _returnvalue_.Set(index, value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetAllKnownNotificationNameIdsResponse._ReturnValue)
}
inline void INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::_internal_add__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _returnvalue_.Add(value);
}
inline void INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::add__returnvalue(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_add__returnvalue(value);
  // @@protoc_insertion_point(field_add:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetAllKnownNotificationNameIdsResponse._ReturnValue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::_internal__returnvalue() const {
  return _returnvalue_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >&
INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_list:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetAllKnownNotificationNameIdsResponse._ReturnValue)
  return _internal__returnvalue();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::_internal_mutable__returnvalue() {
  return &_returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::uint32 >*
INotificationManagerServiceGetAllKnownNotificationNameIdsResponse::mutable__returnvalue() {
  // @@protoc_insertion_point(field_mutable_list:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetAllKnownNotificationNameIdsResponse._ReturnValue)
  return _internal_mutable__returnvalue();
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetNotificationRegistrationResponse

// .Arp.System.Nm.Services.Grpc.NotificationRegistrationInfo _ReturnValue = 1;
inline bool INotificationManagerServiceGetNotificationRegistrationResponse::_internal_has__returnvalue() const {
  return this != internal_default_instance() && _returnvalue_ != nullptr;
}
inline bool INotificationManagerServiceGetNotificationRegistrationResponse::has__returnvalue() const {
  return _internal_has__returnvalue();
}
inline const ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo& INotificationManagerServiceGetNotificationRegistrationResponse::_internal__returnvalue() const {
  const ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* p = _returnvalue_;
  return p != nullptr ? *p : reinterpret_cast<const ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo&>(
      ::Arp::System::Nm::Services::Grpc::_NotificationRegistrationInfo_default_instance_);
}
inline const ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo& INotificationManagerServiceGetNotificationRegistrationResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void INotificationManagerServiceGetNotificationRegistrationResponse::unsafe_arena_set_allocated__returnvalue(
    ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* _returnvalue) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_returnvalue_);
  }
  _returnvalue_ = _returnvalue;
  if (_returnvalue) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationResponse._ReturnValue)
}
inline ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* INotificationManagerServiceGetNotificationRegistrationResponse::release__returnvalue() {
  
  ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* temp = _returnvalue_;
  _returnvalue_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* INotificationManagerServiceGetNotificationRegistrationResponse::unsafe_arena_release__returnvalue() {
  // @@protoc_insertion_point(field_release:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationResponse._ReturnValue)
  
  ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* temp = _returnvalue_;
  _returnvalue_ = nullptr;
  return temp;
}
inline ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* INotificationManagerServiceGetNotificationRegistrationResponse::_internal_mutable__returnvalue() {
  
  if (_returnvalue_ == nullptr) {
    auto* p = CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo>(GetArena());
    _returnvalue_ = p;
  }
  return _returnvalue_;
}
inline ::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* INotificationManagerServiceGetNotificationRegistrationResponse::mutable__returnvalue() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationResponse._ReturnValue)
  return _internal_mutable__returnvalue();
}
inline void INotificationManagerServiceGetNotificationRegistrationResponse::set_allocated__returnvalue(::Arp::System::Nm::Services::Grpc::NotificationRegistrationInfo* _returnvalue) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(_returnvalue_);
  }
  if (_returnvalue) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(_returnvalue)->GetArena();
    if (message_arena != submessage_arena) {
      _returnvalue = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, _returnvalue, submessage_arena);
    }
    
  } else {
    
  }
  _returnvalue_ = _returnvalue;
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNotificationRegistrationResponse._ReturnValue)
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetPayloadTypeIdResponse

// int32 _ReturnValue = 1;
inline void INotificationManagerServiceGetPayloadTypeIdResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 INotificationManagerServiceGetPayloadTypeIdResponse::_internal__returnvalue() const {
  return _returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 INotificationManagerServiceGetPayloadTypeIdResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void INotificationManagerServiceGetPayloadTypeIdResponse::_internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  _returnvalue_ = value;
}
inline void INotificationManagerServiceGetPayloadTypeIdResponse::set__returnvalue(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeIdResponse._ReturnValue)
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetPayloadTypeNameResponse

// string _ReturnValue = 1;
inline void INotificationManagerServiceGetPayloadTypeNameResponse::clear__returnvalue() {
  _returnvalue_.ClearToEmpty();
}
inline const std::string& INotificationManagerServiceGetPayloadTypeNameResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void INotificationManagerServiceGetPayloadTypeNameResponse::set__returnvalue(const std::string& value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameResponse._ReturnValue)
}
inline std::string* INotificationManagerServiceGetPayloadTypeNameResponse::mutable__returnvalue() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameResponse._ReturnValue)
  return _internal_mutable__returnvalue();
}
inline const std::string& INotificationManagerServiceGetPayloadTypeNameResponse::_internal__returnvalue() const {
  return _returnvalue_.Get();
}
inline void INotificationManagerServiceGetPayloadTypeNameResponse::_internal_set__returnvalue(const std::string& value) {
  
  _returnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void INotificationManagerServiceGetPayloadTypeNameResponse::set__returnvalue(std::string&& value) {
  
  _returnvalue_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameResponse._ReturnValue)
}
inline void INotificationManagerServiceGetPayloadTypeNameResponse::set__returnvalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  _returnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameResponse._ReturnValue)
}
inline void INotificationManagerServiceGetPayloadTypeNameResponse::set__returnvalue(const char* value,
    size_t size) {
  
  _returnvalue_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameResponse._ReturnValue)
}
inline std::string* INotificationManagerServiceGetPayloadTypeNameResponse::_internal_mutable__returnvalue() {
  
  return _returnvalue_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* INotificationManagerServiceGetPayloadTypeNameResponse::release__returnvalue() {
  // @@protoc_insertion_point(field_release:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameResponse._ReturnValue)
  return _returnvalue_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void INotificationManagerServiceGetPayloadTypeNameResponse::set_allocated__returnvalue(std::string* _returnvalue) {
  if (_returnvalue != nullptr) {
    
  } else {
    
  }
  _returnvalue_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), _returnvalue,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetPayloadTypeNameResponse._ReturnValue)
}

// -------------------------------------------------------------------

// INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse

// uint64 _ReturnValue = 1;
inline void INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse::clear__returnvalue() {
  _returnvalue_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse::_internal__returnvalue() const {
  return _returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse::_internal_set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  _returnvalue_ = value;
}
inline void INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse::set__returnvalue(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.INotificationManagerServiceGetNumberOfSubmittedNotificationsResponse._ReturnValue)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Grpc
}  // namespace Services
}  // namespace Nm
}  // namespace System
}  // namespace Arp

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_INotificationManagerService_2eproto
