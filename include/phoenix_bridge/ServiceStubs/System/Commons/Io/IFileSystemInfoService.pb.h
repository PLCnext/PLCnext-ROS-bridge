// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IFileSystemInfoService.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_IFileSystemInfoService_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_IFileSystemInfoService_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "FileSystemError.pb.h"
#include "FileSystemTraitsEntry.pb.h"
#include "Permissions.pb.h"
#include "SpaceInfo.pb.h"
#include "Traits.pb.h"
#include <google/protobuf/empty.pb.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_IFileSystemInfoService_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_IFileSystemInfoService_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[12]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_IFileSystemInfoService_2eproto;
namespace Arp {
namespace System {
namespace Commons {
namespace Services {
namespace Io {
namespace Grpc {
class IFileSystemInfoServiceAddPermissionsRequest;
class IFileSystemInfoServiceAddPermissionsRequestDefaultTypeInternal;
extern IFileSystemInfoServiceAddPermissionsRequestDefaultTypeInternal _IFileSystemInfoServiceAddPermissionsRequest_default_instance_;
class IFileSystemInfoServiceAddPermissionsResponse;
class IFileSystemInfoServiceAddPermissionsResponseDefaultTypeInternal;
extern IFileSystemInfoServiceAddPermissionsResponseDefaultTypeInternal _IFileSystemInfoServiceAddPermissionsResponse_default_instance_;
class IFileSystemInfoServiceGetFileSystemTraitsEntryRequest;
class IFileSystemInfoServiceGetFileSystemTraitsEntryRequestDefaultTypeInternal;
extern IFileSystemInfoServiceGetFileSystemTraitsEntryRequestDefaultTypeInternal _IFileSystemInfoServiceGetFileSystemTraitsEntryRequest_default_instance_;
class IFileSystemInfoServiceGetFileSystemTraitsEntryResponse;
class IFileSystemInfoServiceGetFileSystemTraitsEntryResponseDefaultTypeInternal;
extern IFileSystemInfoServiceGetFileSystemTraitsEntryResponseDefaultTypeInternal _IFileSystemInfoServiceGetFileSystemTraitsEntryResponse_default_instance_;
class IFileSystemInfoServiceGetPermissionsRequest;
class IFileSystemInfoServiceGetPermissionsRequestDefaultTypeInternal;
extern IFileSystemInfoServiceGetPermissionsRequestDefaultTypeInternal _IFileSystemInfoServiceGetPermissionsRequest_default_instance_;
class IFileSystemInfoServiceGetPermissionsResponse;
class IFileSystemInfoServiceGetPermissionsResponseDefaultTypeInternal;
extern IFileSystemInfoServiceGetPermissionsResponseDefaultTypeInternal _IFileSystemInfoServiceGetPermissionsResponse_default_instance_;
class IFileSystemInfoServiceGetRootDirectoriesResponse;
class IFileSystemInfoServiceGetRootDirectoriesResponseDefaultTypeInternal;
extern IFileSystemInfoServiceGetRootDirectoriesResponseDefaultTypeInternal _IFileSystemInfoServiceGetRootDirectoriesResponse_default_instance_;
class IFileSystemInfoServiceGetSpaceInfoRequest;
class IFileSystemInfoServiceGetSpaceInfoRequestDefaultTypeInternal;
extern IFileSystemInfoServiceGetSpaceInfoRequestDefaultTypeInternal _IFileSystemInfoServiceGetSpaceInfoRequest_default_instance_;
class IFileSystemInfoServiceGetSpaceInfoResponse;
class IFileSystemInfoServiceGetSpaceInfoResponseDefaultTypeInternal;
extern IFileSystemInfoServiceGetSpaceInfoResponseDefaultTypeInternal _IFileSystemInfoServiceGetSpaceInfoResponse_default_instance_;
class IFileSystemInfoServiceGetSupportedTraitsResponse;
class IFileSystemInfoServiceGetSupportedTraitsResponseDefaultTypeInternal;
extern IFileSystemInfoServiceGetSupportedTraitsResponseDefaultTypeInternal _IFileSystemInfoServiceGetSupportedTraitsResponse_default_instance_;
class IFileSystemInfoServiceRemovePermissionsRequest;
class IFileSystemInfoServiceRemovePermissionsRequestDefaultTypeInternal;
extern IFileSystemInfoServiceRemovePermissionsRequestDefaultTypeInternal _IFileSystemInfoServiceRemovePermissionsRequest_default_instance_;
class IFileSystemInfoServiceRemovePermissionsResponse;
class IFileSystemInfoServiceRemovePermissionsResponseDefaultTypeInternal;
extern IFileSystemInfoServiceRemovePermissionsResponseDefaultTypeInternal _IFileSystemInfoServiceRemovePermissionsResponse_default_instance_;
}  // namespace Grpc
}  // namespace Io
}  // namespace Services
}  // namespace Commons
}  // namespace System
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceAddPermissionsRequest* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceAddPermissionsRequest>(Arena*);
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceAddPermissionsResponse* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceAddPermissionsResponse>(Arena*);
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetFileSystemTraitsEntryRequest* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetFileSystemTraitsEntryRequest>(Arena*);
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetFileSystemTraitsEntryResponse* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetFileSystemTraitsEntryResponse>(Arena*);
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetPermissionsRequest* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetPermissionsRequest>(Arena*);
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetPermissionsResponse* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetPermissionsResponse>(Arena*);
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetRootDirectoriesResponse* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetRootDirectoriesResponse>(Arena*);
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetSpaceInfoRequest* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetSpaceInfoRequest>(Arena*);
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetSpaceInfoResponse* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetSpaceInfoResponse>(Arena*);
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetSupportedTraitsResponse* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceGetSupportedTraitsResponse>(Arena*);
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceRemovePermissionsRequest* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceRemovePermissionsRequest>(Arena*);
template<> ::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceRemovePermissionsResponse* Arena::CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::IFileSystemInfoServiceRemovePermissionsResponse>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Arp {
namespace System {
namespace Commons {
namespace Services {
namespace Io {
namespace Grpc {

// ===================================================================

class IFileSystemInfoServiceGetPermissionsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsRequest) */ {
 public:
  inline IFileSystemInfoServiceGetPermissionsRequest() : IFileSystemInfoServiceGetPermissionsRequest(nullptr) {}
  virtual ~IFileSystemInfoServiceGetPermissionsRequest();

  IFileSystemInfoServiceGetPermissionsRequest(const IFileSystemInfoServiceGetPermissionsRequest& from);
  IFileSystemInfoServiceGetPermissionsRequest(IFileSystemInfoServiceGetPermissionsRequest&& from) noexcept
    : IFileSystemInfoServiceGetPermissionsRequest() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceGetPermissionsRequest& operator=(const IFileSystemInfoServiceGetPermissionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceGetPermissionsRequest& operator=(IFileSystemInfoServiceGetPermissionsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceGetPermissionsRequest& default_instance();

  static inline const IFileSystemInfoServiceGetPermissionsRequest* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceGetPermissionsRequest*>(
               &_IFileSystemInfoServiceGetPermissionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(IFileSystemInfoServiceGetPermissionsRequest& a, IFileSystemInfoServiceGetPermissionsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceGetPermissionsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceGetPermissionsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceGetPermissionsRequest* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetPermissionsRequest>(nullptr);
  }

  IFileSystemInfoServiceGetPermissionsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetPermissionsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceGetPermissionsRequest& from);
  void MergeFrom(const IFileSystemInfoServiceGetPermissionsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceGetPermissionsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsRequest";
  }
  protected:
  explicit IFileSystemInfoServiceGetPermissionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
  };
  // string path = 1;
  void clear_path();
  const std::string& path() const;
  void set_path(const std::string& value);
  void set_path(std::string&& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  std::string* mutable_path();
  std::string* release_path();
  void set_allocated_path(std::string* path);
  private:
  const std::string& _internal_path() const;
  void _internal_set_path(const std::string& value);
  std::string* _internal_mutable_path();
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// -------------------------------------------------------------------

class IFileSystemInfoServiceAddPermissionsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest) */ {
 public:
  inline IFileSystemInfoServiceAddPermissionsRequest() : IFileSystemInfoServiceAddPermissionsRequest(nullptr) {}
  virtual ~IFileSystemInfoServiceAddPermissionsRequest();

  IFileSystemInfoServiceAddPermissionsRequest(const IFileSystemInfoServiceAddPermissionsRequest& from);
  IFileSystemInfoServiceAddPermissionsRequest(IFileSystemInfoServiceAddPermissionsRequest&& from) noexcept
    : IFileSystemInfoServiceAddPermissionsRequest() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceAddPermissionsRequest& operator=(const IFileSystemInfoServiceAddPermissionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceAddPermissionsRequest& operator=(IFileSystemInfoServiceAddPermissionsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceAddPermissionsRequest& default_instance();

  static inline const IFileSystemInfoServiceAddPermissionsRequest* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceAddPermissionsRequest*>(
               &_IFileSystemInfoServiceAddPermissionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(IFileSystemInfoServiceAddPermissionsRequest& a, IFileSystemInfoServiceAddPermissionsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceAddPermissionsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceAddPermissionsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceAddPermissionsRequest* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceAddPermissionsRequest>(nullptr);
  }

  IFileSystemInfoServiceAddPermissionsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceAddPermissionsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceAddPermissionsRequest& from);
  void MergeFrom(const IFileSystemInfoServiceAddPermissionsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceAddPermissionsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest";
  }
  protected:
  explicit IFileSystemInfoServiceAddPermissionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kPermissionsFieldNumber = 2,
  };
  // string path = 1;
  void clear_path();
  const std::string& path() const;
  void set_path(const std::string& value);
  void set_path(std::string&& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  std::string* mutable_path();
  std::string* release_path();
  void set_allocated_path(std::string* path);
  private:
  const std::string& _internal_path() const;
  void _internal_set_path(const std::string& value);
  std::string* _internal_mutable_path();
  public:

  // .Arp.System.Commons.Services.Io.Grpc.Permissions permissions = 2;
  void clear_permissions();
  ::Arp::System::Commons::Services::Io::Grpc::Permissions permissions() const;
  void set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value);
  private:
  ::Arp::System::Commons::Services::Io::Grpc::Permissions _internal_permissions() const;
  void _internal_set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  int permissions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// -------------------------------------------------------------------

class IFileSystemInfoServiceRemovePermissionsRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest) */ {
 public:
  inline IFileSystemInfoServiceRemovePermissionsRequest() : IFileSystemInfoServiceRemovePermissionsRequest(nullptr) {}
  virtual ~IFileSystemInfoServiceRemovePermissionsRequest();

  IFileSystemInfoServiceRemovePermissionsRequest(const IFileSystemInfoServiceRemovePermissionsRequest& from);
  IFileSystemInfoServiceRemovePermissionsRequest(IFileSystemInfoServiceRemovePermissionsRequest&& from) noexcept
    : IFileSystemInfoServiceRemovePermissionsRequest() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceRemovePermissionsRequest& operator=(const IFileSystemInfoServiceRemovePermissionsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceRemovePermissionsRequest& operator=(IFileSystemInfoServiceRemovePermissionsRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceRemovePermissionsRequest& default_instance();

  static inline const IFileSystemInfoServiceRemovePermissionsRequest* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceRemovePermissionsRequest*>(
               &_IFileSystemInfoServiceRemovePermissionsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(IFileSystemInfoServiceRemovePermissionsRequest& a, IFileSystemInfoServiceRemovePermissionsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceRemovePermissionsRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceRemovePermissionsRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceRemovePermissionsRequest* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceRemovePermissionsRequest>(nullptr);
  }

  IFileSystemInfoServiceRemovePermissionsRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceRemovePermissionsRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceRemovePermissionsRequest& from);
  void MergeFrom(const IFileSystemInfoServiceRemovePermissionsRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceRemovePermissionsRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest";
  }
  protected:
  explicit IFileSystemInfoServiceRemovePermissionsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
    kPermissionsFieldNumber = 2,
  };
  // string path = 1;
  void clear_path();
  const std::string& path() const;
  void set_path(const std::string& value);
  void set_path(std::string&& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  std::string* mutable_path();
  std::string* release_path();
  void set_allocated_path(std::string* path);
  private:
  const std::string& _internal_path() const;
  void _internal_set_path(const std::string& value);
  std::string* _internal_mutable_path();
  public:

  // .Arp.System.Commons.Services.Io.Grpc.Permissions permissions = 2;
  void clear_permissions();
  ::Arp::System::Commons::Services::Io::Grpc::Permissions permissions() const;
  void set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value);
  private:
  ::Arp::System::Commons::Services::Io::Grpc::Permissions _internal_permissions() const;
  void _internal_set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  int permissions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// -------------------------------------------------------------------

class IFileSystemInfoServiceGetFileSystemTraitsEntryRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest) */ {
 public:
  inline IFileSystemInfoServiceGetFileSystemTraitsEntryRequest() : IFileSystemInfoServiceGetFileSystemTraitsEntryRequest(nullptr) {}
  virtual ~IFileSystemInfoServiceGetFileSystemTraitsEntryRequest();

  IFileSystemInfoServiceGetFileSystemTraitsEntryRequest(const IFileSystemInfoServiceGetFileSystemTraitsEntryRequest& from);
  IFileSystemInfoServiceGetFileSystemTraitsEntryRequest(IFileSystemInfoServiceGetFileSystemTraitsEntryRequest&& from) noexcept
    : IFileSystemInfoServiceGetFileSystemTraitsEntryRequest() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceGetFileSystemTraitsEntryRequest& operator=(const IFileSystemInfoServiceGetFileSystemTraitsEntryRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceGetFileSystemTraitsEntryRequest& operator=(IFileSystemInfoServiceGetFileSystemTraitsEntryRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceGetFileSystemTraitsEntryRequest& default_instance();

  static inline const IFileSystemInfoServiceGetFileSystemTraitsEntryRequest* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceGetFileSystemTraitsEntryRequest*>(
               &_IFileSystemInfoServiceGetFileSystemTraitsEntryRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(IFileSystemInfoServiceGetFileSystemTraitsEntryRequest& a, IFileSystemInfoServiceGetFileSystemTraitsEntryRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceGetFileSystemTraitsEntryRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceGetFileSystemTraitsEntryRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceGetFileSystemTraitsEntryRequest* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetFileSystemTraitsEntryRequest>(nullptr);
  }

  IFileSystemInfoServiceGetFileSystemTraitsEntryRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetFileSystemTraitsEntryRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceGetFileSystemTraitsEntryRequest& from);
  void MergeFrom(const IFileSystemInfoServiceGetFileSystemTraitsEntryRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceGetFileSystemTraitsEntryRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest";
  }
  protected:
  explicit IFileSystemInfoServiceGetFileSystemTraitsEntryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 2,
    kTraitsFieldNumber = 1,
  };
  // string path = 2;
  void clear_path();
  const std::string& path() const;
  void set_path(const std::string& value);
  void set_path(std::string&& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  std::string* mutable_path();
  std::string* release_path();
  void set_allocated_path(std::string* path);
  private:
  const std::string& _internal_path() const;
  void _internal_set_path(const std::string& value);
  std::string* _internal_mutable_path();
  public:

  // .Arp.System.Commons.Services.Io.Grpc.Traits traits = 1;
  void clear_traits();
  ::Arp::System::Commons::Services::Io::Grpc::Traits traits() const;
  void set_traits(::Arp::System::Commons::Services::Io::Grpc::Traits value);
  private:
  ::Arp::System::Commons::Services::Io::Grpc::Traits _internal_traits() const;
  void _internal_set_traits(::Arp::System::Commons::Services::Io::Grpc::Traits value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  int traits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// -------------------------------------------------------------------

class IFileSystemInfoServiceGetSpaceInfoRequest PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoRequest) */ {
 public:
  inline IFileSystemInfoServiceGetSpaceInfoRequest() : IFileSystemInfoServiceGetSpaceInfoRequest(nullptr) {}
  virtual ~IFileSystemInfoServiceGetSpaceInfoRequest();

  IFileSystemInfoServiceGetSpaceInfoRequest(const IFileSystemInfoServiceGetSpaceInfoRequest& from);
  IFileSystemInfoServiceGetSpaceInfoRequest(IFileSystemInfoServiceGetSpaceInfoRequest&& from) noexcept
    : IFileSystemInfoServiceGetSpaceInfoRequest() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceGetSpaceInfoRequest& operator=(const IFileSystemInfoServiceGetSpaceInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceGetSpaceInfoRequest& operator=(IFileSystemInfoServiceGetSpaceInfoRequest&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceGetSpaceInfoRequest& default_instance();

  static inline const IFileSystemInfoServiceGetSpaceInfoRequest* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceGetSpaceInfoRequest*>(
               &_IFileSystemInfoServiceGetSpaceInfoRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(IFileSystemInfoServiceGetSpaceInfoRequest& a, IFileSystemInfoServiceGetSpaceInfoRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceGetSpaceInfoRequest* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceGetSpaceInfoRequest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceGetSpaceInfoRequest* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetSpaceInfoRequest>(nullptr);
  }

  IFileSystemInfoServiceGetSpaceInfoRequest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetSpaceInfoRequest>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceGetSpaceInfoRequest& from);
  void MergeFrom(const IFileSystemInfoServiceGetSpaceInfoRequest& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceGetSpaceInfoRequest* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoRequest";
  }
  protected:
  explicit IFileSystemInfoServiceGetSpaceInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPathFieldNumber = 1,
  };
  // string path = 1;
  void clear_path();
  const std::string& path() const;
  void set_path(const std::string& value);
  void set_path(std::string&& value);
  void set_path(const char* value);
  void set_path(const char* value, size_t size);
  std::string* mutable_path();
  std::string* release_path();
  void set_allocated_path(std::string* path);
  private:
  const std::string& _internal_path() const;
  void _internal_set_path(const std::string& value);
  std::string* _internal_mutable_path();
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoRequest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr path_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// -------------------------------------------------------------------

class IFileSystemInfoServiceGetSupportedTraitsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSupportedTraitsResponse) */ {
 public:
  inline IFileSystemInfoServiceGetSupportedTraitsResponse() : IFileSystemInfoServiceGetSupportedTraitsResponse(nullptr) {}
  virtual ~IFileSystemInfoServiceGetSupportedTraitsResponse();

  IFileSystemInfoServiceGetSupportedTraitsResponse(const IFileSystemInfoServiceGetSupportedTraitsResponse& from);
  IFileSystemInfoServiceGetSupportedTraitsResponse(IFileSystemInfoServiceGetSupportedTraitsResponse&& from) noexcept
    : IFileSystemInfoServiceGetSupportedTraitsResponse() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceGetSupportedTraitsResponse& operator=(const IFileSystemInfoServiceGetSupportedTraitsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceGetSupportedTraitsResponse& operator=(IFileSystemInfoServiceGetSupportedTraitsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceGetSupportedTraitsResponse& default_instance();

  static inline const IFileSystemInfoServiceGetSupportedTraitsResponse* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceGetSupportedTraitsResponse*>(
               &_IFileSystemInfoServiceGetSupportedTraitsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(IFileSystemInfoServiceGetSupportedTraitsResponse& a, IFileSystemInfoServiceGetSupportedTraitsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceGetSupportedTraitsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceGetSupportedTraitsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceGetSupportedTraitsResponse* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetSupportedTraitsResponse>(nullptr);
  }

  IFileSystemInfoServiceGetSupportedTraitsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetSupportedTraitsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceGetSupportedTraitsResponse& from);
  void MergeFrom(const IFileSystemInfoServiceGetSupportedTraitsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceGetSupportedTraitsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSupportedTraitsResponse";
  }
  protected:
  explicit IFileSystemInfoServiceGetSupportedTraitsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // .Arp.System.Commons.Services.Io.Grpc.Traits _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::System::Commons::Services::Io::Grpc::Traits _returnvalue() const;
  void set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::Traits value);
  private:
  ::Arp::System::Commons::Services::Io::Grpc::Traits _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::Traits value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSupportedTraitsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// -------------------------------------------------------------------

class IFileSystemInfoServiceGetPermissionsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsResponse) */ {
 public:
  inline IFileSystemInfoServiceGetPermissionsResponse() : IFileSystemInfoServiceGetPermissionsResponse(nullptr) {}
  virtual ~IFileSystemInfoServiceGetPermissionsResponse();

  IFileSystemInfoServiceGetPermissionsResponse(const IFileSystemInfoServiceGetPermissionsResponse& from);
  IFileSystemInfoServiceGetPermissionsResponse(IFileSystemInfoServiceGetPermissionsResponse&& from) noexcept
    : IFileSystemInfoServiceGetPermissionsResponse() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceGetPermissionsResponse& operator=(const IFileSystemInfoServiceGetPermissionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceGetPermissionsResponse& operator=(IFileSystemInfoServiceGetPermissionsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceGetPermissionsResponse& default_instance();

  static inline const IFileSystemInfoServiceGetPermissionsResponse* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceGetPermissionsResponse*>(
               &_IFileSystemInfoServiceGetPermissionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(IFileSystemInfoServiceGetPermissionsResponse& a, IFileSystemInfoServiceGetPermissionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceGetPermissionsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceGetPermissionsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceGetPermissionsResponse* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetPermissionsResponse>(nullptr);
  }

  IFileSystemInfoServiceGetPermissionsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetPermissionsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceGetPermissionsResponse& from);
  void MergeFrom(const IFileSystemInfoServiceGetPermissionsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceGetPermissionsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsResponse";
  }
  protected:
  explicit IFileSystemInfoServiceGetPermissionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
    kPermissionsFieldNumber = 2,
  };
  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemError _returnvalue() const;
  void set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value);
  private:
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value);
  public:

  // .Arp.System.Commons.Services.Io.Grpc.Permissions permissions = 2;
  void clear_permissions();
  ::Arp::System::Commons::Services::Io::Grpc::Permissions permissions() const;
  void set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value);
  private:
  ::Arp::System::Commons::Services::Io::Grpc::Permissions _internal_permissions() const;
  void _internal_set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int _returnvalue_;
  int permissions_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// -------------------------------------------------------------------

class IFileSystemInfoServiceAddPermissionsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsResponse) */ {
 public:
  inline IFileSystemInfoServiceAddPermissionsResponse() : IFileSystemInfoServiceAddPermissionsResponse(nullptr) {}
  virtual ~IFileSystemInfoServiceAddPermissionsResponse();

  IFileSystemInfoServiceAddPermissionsResponse(const IFileSystemInfoServiceAddPermissionsResponse& from);
  IFileSystemInfoServiceAddPermissionsResponse(IFileSystemInfoServiceAddPermissionsResponse&& from) noexcept
    : IFileSystemInfoServiceAddPermissionsResponse() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceAddPermissionsResponse& operator=(const IFileSystemInfoServiceAddPermissionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceAddPermissionsResponse& operator=(IFileSystemInfoServiceAddPermissionsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceAddPermissionsResponse& default_instance();

  static inline const IFileSystemInfoServiceAddPermissionsResponse* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceAddPermissionsResponse*>(
               &_IFileSystemInfoServiceAddPermissionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(IFileSystemInfoServiceAddPermissionsResponse& a, IFileSystemInfoServiceAddPermissionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceAddPermissionsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceAddPermissionsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceAddPermissionsResponse* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceAddPermissionsResponse>(nullptr);
  }

  IFileSystemInfoServiceAddPermissionsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceAddPermissionsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceAddPermissionsResponse& from);
  void MergeFrom(const IFileSystemInfoServiceAddPermissionsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceAddPermissionsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsResponse";
  }
  protected:
  explicit IFileSystemInfoServiceAddPermissionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemError _returnvalue() const;
  void set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value);
  private:
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// -------------------------------------------------------------------

class IFileSystemInfoServiceRemovePermissionsResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsResponse) */ {
 public:
  inline IFileSystemInfoServiceRemovePermissionsResponse() : IFileSystemInfoServiceRemovePermissionsResponse(nullptr) {}
  virtual ~IFileSystemInfoServiceRemovePermissionsResponse();

  IFileSystemInfoServiceRemovePermissionsResponse(const IFileSystemInfoServiceRemovePermissionsResponse& from);
  IFileSystemInfoServiceRemovePermissionsResponse(IFileSystemInfoServiceRemovePermissionsResponse&& from) noexcept
    : IFileSystemInfoServiceRemovePermissionsResponse() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceRemovePermissionsResponse& operator=(const IFileSystemInfoServiceRemovePermissionsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceRemovePermissionsResponse& operator=(IFileSystemInfoServiceRemovePermissionsResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceRemovePermissionsResponse& default_instance();

  static inline const IFileSystemInfoServiceRemovePermissionsResponse* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceRemovePermissionsResponse*>(
               &_IFileSystemInfoServiceRemovePermissionsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(IFileSystemInfoServiceRemovePermissionsResponse& a, IFileSystemInfoServiceRemovePermissionsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceRemovePermissionsResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceRemovePermissionsResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceRemovePermissionsResponse* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceRemovePermissionsResponse>(nullptr);
  }

  IFileSystemInfoServiceRemovePermissionsResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceRemovePermissionsResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceRemovePermissionsResponse& from);
  void MergeFrom(const IFileSystemInfoServiceRemovePermissionsResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceRemovePermissionsResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsResponse";
  }
  protected:
  explicit IFileSystemInfoServiceRemovePermissionsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemError _returnvalue() const;
  void set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value);
  private:
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// -------------------------------------------------------------------

class IFileSystemInfoServiceGetFileSystemTraitsEntryResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryResponse) */ {
 public:
  inline IFileSystemInfoServiceGetFileSystemTraitsEntryResponse() : IFileSystemInfoServiceGetFileSystemTraitsEntryResponse(nullptr) {}
  virtual ~IFileSystemInfoServiceGetFileSystemTraitsEntryResponse();

  IFileSystemInfoServiceGetFileSystemTraitsEntryResponse(const IFileSystemInfoServiceGetFileSystemTraitsEntryResponse& from);
  IFileSystemInfoServiceGetFileSystemTraitsEntryResponse(IFileSystemInfoServiceGetFileSystemTraitsEntryResponse&& from) noexcept
    : IFileSystemInfoServiceGetFileSystemTraitsEntryResponse() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceGetFileSystemTraitsEntryResponse& operator=(const IFileSystemInfoServiceGetFileSystemTraitsEntryResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceGetFileSystemTraitsEntryResponse& operator=(IFileSystemInfoServiceGetFileSystemTraitsEntryResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceGetFileSystemTraitsEntryResponse& default_instance();

  static inline const IFileSystemInfoServiceGetFileSystemTraitsEntryResponse* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceGetFileSystemTraitsEntryResponse*>(
               &_IFileSystemInfoServiceGetFileSystemTraitsEntryResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(IFileSystemInfoServiceGetFileSystemTraitsEntryResponse& a, IFileSystemInfoServiceGetFileSystemTraitsEntryResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceGetFileSystemTraitsEntryResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceGetFileSystemTraitsEntryResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceGetFileSystemTraitsEntryResponse* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetFileSystemTraitsEntryResponse>(nullptr);
  }

  IFileSystemInfoServiceGetFileSystemTraitsEntryResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetFileSystemTraitsEntryResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceGetFileSystemTraitsEntryResponse& from);
  void MergeFrom(const IFileSystemInfoServiceGetFileSystemTraitsEntryResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceGetFileSystemTraitsEntryResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryResponse";
  }
  protected:
  explicit IFileSystemInfoServiceGetFileSystemTraitsEntryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFileSystemTraitsEntryFieldNumber = 2,
    kReturnValueFieldNumber = 1,
  };
  // .Arp.System.Commons.Services.Io.Grpc.FileSystemTraitsEntry fileSystemTraitsEntry = 2;
  bool has_filesystemtraitsentry() const;
  private:
  bool _internal_has_filesystemtraitsentry() const;
  public:
  void clear_filesystemtraitsentry();
  const ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry& filesystemtraitsentry() const;
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* release_filesystemtraitsentry();
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* mutable_filesystemtraitsentry();
  void set_allocated_filesystemtraitsentry(::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* filesystemtraitsentry);
  private:
  const ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry& _internal_filesystemtraitsentry() const;
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* _internal_mutable_filesystemtraitsentry();
  public:
  void unsafe_arena_set_allocated_filesystemtraitsentry(
      ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* filesystemtraitsentry);
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* unsafe_arena_release_filesystemtraitsentry();

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemError _returnvalue() const;
  void set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value);
  private:
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* filesystemtraitsentry_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// -------------------------------------------------------------------

class IFileSystemInfoServiceGetSpaceInfoResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoResponse) */ {
 public:
  inline IFileSystemInfoServiceGetSpaceInfoResponse() : IFileSystemInfoServiceGetSpaceInfoResponse(nullptr) {}
  virtual ~IFileSystemInfoServiceGetSpaceInfoResponse();

  IFileSystemInfoServiceGetSpaceInfoResponse(const IFileSystemInfoServiceGetSpaceInfoResponse& from);
  IFileSystemInfoServiceGetSpaceInfoResponse(IFileSystemInfoServiceGetSpaceInfoResponse&& from) noexcept
    : IFileSystemInfoServiceGetSpaceInfoResponse() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceGetSpaceInfoResponse& operator=(const IFileSystemInfoServiceGetSpaceInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceGetSpaceInfoResponse& operator=(IFileSystemInfoServiceGetSpaceInfoResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceGetSpaceInfoResponse& default_instance();

  static inline const IFileSystemInfoServiceGetSpaceInfoResponse* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceGetSpaceInfoResponse*>(
               &_IFileSystemInfoServiceGetSpaceInfoResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(IFileSystemInfoServiceGetSpaceInfoResponse& a, IFileSystemInfoServiceGetSpaceInfoResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceGetSpaceInfoResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceGetSpaceInfoResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceGetSpaceInfoResponse* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetSpaceInfoResponse>(nullptr);
  }

  IFileSystemInfoServiceGetSpaceInfoResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetSpaceInfoResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceGetSpaceInfoResponse& from);
  void MergeFrom(const IFileSystemInfoServiceGetSpaceInfoResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceGetSpaceInfoResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoResponse";
  }
  protected:
  explicit IFileSystemInfoServiceGetSpaceInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSpaceInfoFieldNumber = 2,
    kReturnValueFieldNumber = 1,
  };
  // .Arp.System.Commons.Services.Io.Grpc.SpaceInfo spaceInfo = 2;
  bool has_spaceinfo() const;
  private:
  bool _internal_has_spaceinfo() const;
  public:
  void clear_spaceinfo();
  const ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo& spaceinfo() const;
  ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* release_spaceinfo();
  ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* mutable_spaceinfo();
  void set_allocated_spaceinfo(::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* spaceinfo);
  private:
  const ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo& _internal_spaceinfo() const;
  ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* _internal_mutable_spaceinfo();
  public:
  void unsafe_arena_set_allocated_spaceinfo(
      ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* spaceinfo);
  ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* unsafe_arena_release_spaceinfo();

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  void clear__returnvalue();
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemError _returnvalue() const;
  void set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value);
  private:
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemError _internal__returnvalue() const;
  void _internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* spaceinfo_;
  int _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// -------------------------------------------------------------------

class IFileSystemInfoServiceGetRootDirectoriesResponse PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse) */ {
 public:
  inline IFileSystemInfoServiceGetRootDirectoriesResponse() : IFileSystemInfoServiceGetRootDirectoriesResponse(nullptr) {}
  virtual ~IFileSystemInfoServiceGetRootDirectoriesResponse();

  IFileSystemInfoServiceGetRootDirectoriesResponse(const IFileSystemInfoServiceGetRootDirectoriesResponse& from);
  IFileSystemInfoServiceGetRootDirectoriesResponse(IFileSystemInfoServiceGetRootDirectoriesResponse&& from) noexcept
    : IFileSystemInfoServiceGetRootDirectoriesResponse() {
    *this = ::std::move(from);
  }

  inline IFileSystemInfoServiceGetRootDirectoriesResponse& operator=(const IFileSystemInfoServiceGetRootDirectoriesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline IFileSystemInfoServiceGetRootDirectoriesResponse& operator=(IFileSystemInfoServiceGetRootDirectoriesResponse&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const IFileSystemInfoServiceGetRootDirectoriesResponse& default_instance();

  static inline const IFileSystemInfoServiceGetRootDirectoriesResponse* internal_default_instance() {
    return reinterpret_cast<const IFileSystemInfoServiceGetRootDirectoriesResponse*>(
               &_IFileSystemInfoServiceGetRootDirectoriesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(IFileSystemInfoServiceGetRootDirectoriesResponse& a, IFileSystemInfoServiceGetRootDirectoriesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(IFileSystemInfoServiceGetRootDirectoriesResponse* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(IFileSystemInfoServiceGetRootDirectoriesResponse* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline IFileSystemInfoServiceGetRootDirectoriesResponse* New() const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetRootDirectoriesResponse>(nullptr);
  }

  IFileSystemInfoServiceGetRootDirectoriesResponse* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<IFileSystemInfoServiceGetRootDirectoriesResponse>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const IFileSystemInfoServiceGetRootDirectoriesResponse& from);
  void MergeFrom(const IFileSystemInfoServiceGetRootDirectoriesResponse& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(IFileSystemInfoServiceGetRootDirectoriesResponse* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse";
  }
  protected:
  explicit IFileSystemInfoServiceGetRootDirectoriesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_IFileSystemInfoService_2eproto);
    return ::descriptor_table_IFileSystemInfoService_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kReturnValueFieldNumber = 1,
  };
  // repeated string _ReturnValue = 1;
  int _returnvalue_size() const;
  private:
  int _internal__returnvalue_size() const;
  public:
  void clear__returnvalue();
  const std::string& _returnvalue(int index) const;
  std::string* mutable__returnvalue(int index);
  void set__returnvalue(int index, const std::string& value);
  void set__returnvalue(int index, std::string&& value);
  void set__returnvalue(int index, const char* value);
  void set__returnvalue(int index, const char* value, size_t size);
  std::string* add__returnvalue();
  void add__returnvalue(const std::string& value);
  void add__returnvalue(std::string&& value);
  void add__returnvalue(const char* value);
  void add__returnvalue(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& _returnvalue() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable__returnvalue();
  private:
  const std::string& _internal__returnvalue(int index) const;
  std::string* _internal_add__returnvalue();
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> _returnvalue_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_IFileSystemInfoService_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// IFileSystemInfoServiceGetPermissionsRequest

// string path = 1;
inline void IFileSystemInfoServiceGetPermissionsRequest::clear_path() {
  path_.ClearToEmpty();
}
inline const std::string& IFileSystemInfoServiceGetPermissionsRequest::path() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsRequest.path)
  return _internal_path();
}
inline void IFileSystemInfoServiceGetPermissionsRequest::set_path(const std::string& value) {
  _internal_set_path(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsRequest.path)
}
inline std::string* IFileSystemInfoServiceGetPermissionsRequest::mutable_path() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsRequest.path)
  return _internal_mutable_path();
}
inline const std::string& IFileSystemInfoServiceGetPermissionsRequest::_internal_path() const {
  return path_.Get();
}
inline void IFileSystemInfoServiceGetPermissionsRequest::_internal_set_path(const std::string& value) {
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void IFileSystemInfoServiceGetPermissionsRequest::set_path(std::string&& value) {
  
  path_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsRequest.path)
}
inline void IFileSystemInfoServiceGetPermissionsRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsRequest.path)
}
inline void IFileSystemInfoServiceGetPermissionsRequest::set_path(const char* value,
    size_t size) {
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsRequest.path)
}
inline std::string* IFileSystemInfoServiceGetPermissionsRequest::_internal_mutable_path() {
  
  return path_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* IFileSystemInfoServiceGetPermissionsRequest::release_path() {
  // @@protoc_insertion_point(field_release:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsRequest.path)
  return path_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void IFileSystemInfoServiceGetPermissionsRequest::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsRequest.path)
}

// -------------------------------------------------------------------

// IFileSystemInfoServiceAddPermissionsRequest

// string path = 1;
inline void IFileSystemInfoServiceAddPermissionsRequest::clear_path() {
  path_.ClearToEmpty();
}
inline const std::string& IFileSystemInfoServiceAddPermissionsRequest::path() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest.path)
  return _internal_path();
}
inline void IFileSystemInfoServiceAddPermissionsRequest::set_path(const std::string& value) {
  _internal_set_path(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest.path)
}
inline std::string* IFileSystemInfoServiceAddPermissionsRequest::mutable_path() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest.path)
  return _internal_mutable_path();
}
inline const std::string& IFileSystemInfoServiceAddPermissionsRequest::_internal_path() const {
  return path_.Get();
}
inline void IFileSystemInfoServiceAddPermissionsRequest::_internal_set_path(const std::string& value) {
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void IFileSystemInfoServiceAddPermissionsRequest::set_path(std::string&& value) {
  
  path_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest.path)
}
inline void IFileSystemInfoServiceAddPermissionsRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest.path)
}
inline void IFileSystemInfoServiceAddPermissionsRequest::set_path(const char* value,
    size_t size) {
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest.path)
}
inline std::string* IFileSystemInfoServiceAddPermissionsRequest::_internal_mutable_path() {
  
  return path_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* IFileSystemInfoServiceAddPermissionsRequest::release_path() {
  // @@protoc_insertion_point(field_release:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest.path)
  return path_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void IFileSystemInfoServiceAddPermissionsRequest::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest.path)
}

// .Arp.System.Commons.Services.Io.Grpc.Permissions permissions = 2;
inline void IFileSystemInfoServiceAddPermissionsRequest::clear_permissions() {
  permissions_ = 0;
}
inline ::Arp::System::Commons::Services::Io::Grpc::Permissions IFileSystemInfoServiceAddPermissionsRequest::_internal_permissions() const {
  return static_cast< ::Arp::System::Commons::Services::Io::Grpc::Permissions >(permissions_);
}
inline ::Arp::System::Commons::Services::Io::Grpc::Permissions IFileSystemInfoServiceAddPermissionsRequest::permissions() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest.permissions)
  return _internal_permissions();
}
inline void IFileSystemInfoServiceAddPermissionsRequest::_internal_set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value) {
  
  permissions_ = value;
}
inline void IFileSystemInfoServiceAddPermissionsRequest::set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value) {
  _internal_set_permissions(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsRequest.permissions)
}

// -------------------------------------------------------------------

// IFileSystemInfoServiceRemovePermissionsRequest

// string path = 1;
inline void IFileSystemInfoServiceRemovePermissionsRequest::clear_path() {
  path_.ClearToEmpty();
}
inline const std::string& IFileSystemInfoServiceRemovePermissionsRequest::path() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest.path)
  return _internal_path();
}
inline void IFileSystemInfoServiceRemovePermissionsRequest::set_path(const std::string& value) {
  _internal_set_path(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest.path)
}
inline std::string* IFileSystemInfoServiceRemovePermissionsRequest::mutable_path() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest.path)
  return _internal_mutable_path();
}
inline const std::string& IFileSystemInfoServiceRemovePermissionsRequest::_internal_path() const {
  return path_.Get();
}
inline void IFileSystemInfoServiceRemovePermissionsRequest::_internal_set_path(const std::string& value) {
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void IFileSystemInfoServiceRemovePermissionsRequest::set_path(std::string&& value) {
  
  path_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest.path)
}
inline void IFileSystemInfoServiceRemovePermissionsRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest.path)
}
inline void IFileSystemInfoServiceRemovePermissionsRequest::set_path(const char* value,
    size_t size) {
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest.path)
}
inline std::string* IFileSystemInfoServiceRemovePermissionsRequest::_internal_mutable_path() {
  
  return path_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* IFileSystemInfoServiceRemovePermissionsRequest::release_path() {
  // @@protoc_insertion_point(field_release:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest.path)
  return path_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void IFileSystemInfoServiceRemovePermissionsRequest::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest.path)
}

// .Arp.System.Commons.Services.Io.Grpc.Permissions permissions = 2;
inline void IFileSystemInfoServiceRemovePermissionsRequest::clear_permissions() {
  permissions_ = 0;
}
inline ::Arp::System::Commons::Services::Io::Grpc::Permissions IFileSystemInfoServiceRemovePermissionsRequest::_internal_permissions() const {
  return static_cast< ::Arp::System::Commons::Services::Io::Grpc::Permissions >(permissions_);
}
inline ::Arp::System::Commons::Services::Io::Grpc::Permissions IFileSystemInfoServiceRemovePermissionsRequest::permissions() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest.permissions)
  return _internal_permissions();
}
inline void IFileSystemInfoServiceRemovePermissionsRequest::_internal_set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value) {
  
  permissions_ = value;
}
inline void IFileSystemInfoServiceRemovePermissionsRequest::set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value) {
  _internal_set_permissions(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsRequest.permissions)
}

// -------------------------------------------------------------------

// IFileSystemInfoServiceGetFileSystemTraitsEntryRequest

// .Arp.System.Commons.Services.Io.Grpc.Traits traits = 1;
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::clear_traits() {
  traits_ = 0;
}
inline ::Arp::System::Commons::Services::Io::Grpc::Traits IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::_internal_traits() const {
  return static_cast< ::Arp::System::Commons::Services::Io::Grpc::Traits >(traits_);
}
inline ::Arp::System::Commons::Services::Io::Grpc::Traits IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::traits() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest.traits)
  return _internal_traits();
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::_internal_set_traits(::Arp::System::Commons::Services::Io::Grpc::Traits value) {
  
  traits_ = value;
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::set_traits(::Arp::System::Commons::Services::Io::Grpc::Traits value) {
  _internal_set_traits(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest.traits)
}

// string path = 2;
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::clear_path() {
  path_.ClearToEmpty();
}
inline const std::string& IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::path() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest.path)
  return _internal_path();
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::set_path(const std::string& value) {
  _internal_set_path(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest.path)
}
inline std::string* IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::mutable_path() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest.path)
  return _internal_mutable_path();
}
inline const std::string& IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::_internal_path() const {
  return path_.Get();
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::_internal_set_path(const std::string& value) {
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::set_path(std::string&& value) {
  
  path_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest.path)
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest.path)
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::set_path(const char* value,
    size_t size) {
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest.path)
}
inline std::string* IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::_internal_mutable_path() {
  
  return path_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::release_path() {
  // @@protoc_insertion_point(field_release:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest.path)
  return path_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryRequest::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryRequest.path)
}

// -------------------------------------------------------------------

// IFileSystemInfoServiceGetSpaceInfoRequest

// string path = 1;
inline void IFileSystemInfoServiceGetSpaceInfoRequest::clear_path() {
  path_.ClearToEmpty();
}
inline const std::string& IFileSystemInfoServiceGetSpaceInfoRequest::path() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoRequest.path)
  return _internal_path();
}
inline void IFileSystemInfoServiceGetSpaceInfoRequest::set_path(const std::string& value) {
  _internal_set_path(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoRequest.path)
}
inline std::string* IFileSystemInfoServiceGetSpaceInfoRequest::mutable_path() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoRequest.path)
  return _internal_mutable_path();
}
inline const std::string& IFileSystemInfoServiceGetSpaceInfoRequest::_internal_path() const {
  return path_.Get();
}
inline void IFileSystemInfoServiceGetSpaceInfoRequest::_internal_set_path(const std::string& value) {
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void IFileSystemInfoServiceGetSpaceInfoRequest::set_path(std::string&& value) {
  
  path_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoRequest.path)
}
inline void IFileSystemInfoServiceGetSpaceInfoRequest::set_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoRequest.path)
}
inline void IFileSystemInfoServiceGetSpaceInfoRequest::set_path(const char* value,
    size_t size) {
  
  path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoRequest.path)
}
inline std::string* IFileSystemInfoServiceGetSpaceInfoRequest::_internal_mutable_path() {
  
  return path_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* IFileSystemInfoServiceGetSpaceInfoRequest::release_path() {
  // @@protoc_insertion_point(field_release:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoRequest.path)
  return path_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void IFileSystemInfoServiceGetSpaceInfoRequest::set_allocated_path(std::string* path) {
  if (path != nullptr) {
    
  } else {
    
  }
  path_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), path,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoRequest.path)
}

// -------------------------------------------------------------------

// IFileSystemInfoServiceGetSupportedTraitsResponse

// .Arp.System.Commons.Services.Io.Grpc.Traits _ReturnValue = 1;
inline void IFileSystemInfoServiceGetSupportedTraitsResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::System::Commons::Services::Io::Grpc::Traits IFileSystemInfoServiceGetSupportedTraitsResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::System::Commons::Services::Io::Grpc::Traits >(_returnvalue_);
}
inline ::Arp::System::Commons::Services::Io::Grpc::Traits IFileSystemInfoServiceGetSupportedTraitsResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSupportedTraitsResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void IFileSystemInfoServiceGetSupportedTraitsResponse::_internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::Traits value) {
  
  _returnvalue_ = value;
}
inline void IFileSystemInfoServiceGetSupportedTraitsResponse::set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::Traits value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSupportedTraitsResponse._ReturnValue)
}

// -------------------------------------------------------------------

// IFileSystemInfoServiceGetPermissionsResponse

// .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
inline void IFileSystemInfoServiceGetPermissionsResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemError IFileSystemInfoServiceGetPermissionsResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::System::Commons::Services::Io::Grpc::FileSystemError >(_returnvalue_);
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemError IFileSystemInfoServiceGetPermissionsResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void IFileSystemInfoServiceGetPermissionsResponse::_internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value) {
  
  _returnvalue_ = value;
}
inline void IFileSystemInfoServiceGetPermissionsResponse::set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsResponse._ReturnValue)
}

// .Arp.System.Commons.Services.Io.Grpc.Permissions permissions = 2;
inline void IFileSystemInfoServiceGetPermissionsResponse::clear_permissions() {
  permissions_ = 0;
}
inline ::Arp::System::Commons::Services::Io::Grpc::Permissions IFileSystemInfoServiceGetPermissionsResponse::_internal_permissions() const {
  return static_cast< ::Arp::System::Commons::Services::Io::Grpc::Permissions >(permissions_);
}
inline ::Arp::System::Commons::Services::Io::Grpc::Permissions IFileSystemInfoServiceGetPermissionsResponse::permissions() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsResponse.permissions)
  return _internal_permissions();
}
inline void IFileSystemInfoServiceGetPermissionsResponse::_internal_set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value) {
  
  permissions_ = value;
}
inline void IFileSystemInfoServiceGetPermissionsResponse::set_permissions(::Arp::System::Commons::Services::Io::Grpc::Permissions value) {
  _internal_set_permissions(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetPermissionsResponse.permissions)
}

// -------------------------------------------------------------------

// IFileSystemInfoServiceAddPermissionsResponse

// .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
inline void IFileSystemInfoServiceAddPermissionsResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemError IFileSystemInfoServiceAddPermissionsResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::System::Commons::Services::Io::Grpc::FileSystemError >(_returnvalue_);
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemError IFileSystemInfoServiceAddPermissionsResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void IFileSystemInfoServiceAddPermissionsResponse::_internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value) {
  
  _returnvalue_ = value;
}
inline void IFileSystemInfoServiceAddPermissionsResponse::set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceAddPermissionsResponse._ReturnValue)
}

// -------------------------------------------------------------------

// IFileSystemInfoServiceRemovePermissionsResponse

// .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
inline void IFileSystemInfoServiceRemovePermissionsResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemError IFileSystemInfoServiceRemovePermissionsResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::System::Commons::Services::Io::Grpc::FileSystemError >(_returnvalue_);
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemError IFileSystemInfoServiceRemovePermissionsResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void IFileSystemInfoServiceRemovePermissionsResponse::_internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value) {
  
  _returnvalue_ = value;
}
inline void IFileSystemInfoServiceRemovePermissionsResponse::set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceRemovePermissionsResponse._ReturnValue)
}

// -------------------------------------------------------------------

// IFileSystemInfoServiceGetFileSystemTraitsEntryResponse

// .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemError IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::System::Commons::Services::Io::Grpc::FileSystemError >(_returnvalue_);
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemError IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::_internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value) {
  
  _returnvalue_ = value;
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryResponse._ReturnValue)
}

// .Arp.System.Commons.Services.Io.Grpc.FileSystemTraitsEntry fileSystemTraitsEntry = 2;
inline bool IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::_internal_has_filesystemtraitsentry() const {
  return this != internal_default_instance() && filesystemtraitsentry_ != nullptr;
}
inline bool IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::has_filesystemtraitsentry() const {
  return _internal_has_filesystemtraitsentry();
}
inline const ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry& IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::_internal_filesystemtraitsentry() const {
  const ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* p = filesystemtraitsentry_;
  return p != nullptr ? *p : reinterpret_cast<const ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry&>(
      ::Arp::System::Commons::Services::Io::Grpc::_FileSystemTraitsEntry_default_instance_);
}
inline const ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry& IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::filesystemtraitsentry() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryResponse.fileSystemTraitsEntry)
  return _internal_filesystemtraitsentry();
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::unsafe_arena_set_allocated_filesystemtraitsentry(
    ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* filesystemtraitsentry) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filesystemtraitsentry_);
  }
  filesystemtraitsentry_ = filesystemtraitsentry;
  if (filesystemtraitsentry) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryResponse.fileSystemTraitsEntry)
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::release_filesystemtraitsentry() {
  
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* temp = filesystemtraitsentry_;
  filesystemtraitsentry_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::unsafe_arena_release_filesystemtraitsentry() {
  // @@protoc_insertion_point(field_release:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryResponse.fileSystemTraitsEntry)
  
  ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* temp = filesystemtraitsentry_;
  filesystemtraitsentry_ = nullptr;
  return temp;
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::_internal_mutable_filesystemtraitsentry() {
  
  if (filesystemtraitsentry_ == nullptr) {
    auto* p = CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry>(GetArena());
    filesystemtraitsentry_ = p;
  }
  return filesystemtraitsentry_;
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::mutable_filesystemtraitsentry() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryResponse.fileSystemTraitsEntry)
  return _internal_mutable_filesystemtraitsentry();
}
inline void IFileSystemInfoServiceGetFileSystemTraitsEntryResponse::set_allocated_filesystemtraitsentry(::Arp::System::Commons::Services::Io::Grpc::FileSystemTraitsEntry* filesystemtraitsentry) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(filesystemtraitsentry_);
  }
  if (filesystemtraitsentry) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(filesystemtraitsentry)->GetArena();
    if (message_arena != submessage_arena) {
      filesystemtraitsentry = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, filesystemtraitsentry, submessage_arena);
    }
    
  } else {
    
  }
  filesystemtraitsentry_ = filesystemtraitsentry;
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetFileSystemTraitsEntryResponse.fileSystemTraitsEntry)
}

// -------------------------------------------------------------------

// IFileSystemInfoServiceGetSpaceInfoResponse

// .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
inline void IFileSystemInfoServiceGetSpaceInfoResponse::clear__returnvalue() {
  _returnvalue_ = 0;
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemError IFileSystemInfoServiceGetSpaceInfoResponse::_internal__returnvalue() const {
  return static_cast< ::Arp::System::Commons::Services::Io::Grpc::FileSystemError >(_returnvalue_);
}
inline ::Arp::System::Commons::Services::Io::Grpc::FileSystemError IFileSystemInfoServiceGetSpaceInfoResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoResponse._ReturnValue)
  return _internal__returnvalue();
}
inline void IFileSystemInfoServiceGetSpaceInfoResponse::_internal_set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value) {
  
  _returnvalue_ = value;
}
inline void IFileSystemInfoServiceGetSpaceInfoResponse::set__returnvalue(::Arp::System::Commons::Services::Io::Grpc::FileSystemError value) {
  _internal_set__returnvalue(value);
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoResponse._ReturnValue)
}

// .Arp.System.Commons.Services.Io.Grpc.SpaceInfo spaceInfo = 2;
inline bool IFileSystemInfoServiceGetSpaceInfoResponse::_internal_has_spaceinfo() const {
  return this != internal_default_instance() && spaceinfo_ != nullptr;
}
inline bool IFileSystemInfoServiceGetSpaceInfoResponse::has_spaceinfo() const {
  return _internal_has_spaceinfo();
}
inline const ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo& IFileSystemInfoServiceGetSpaceInfoResponse::_internal_spaceinfo() const {
  const ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* p = spaceinfo_;
  return p != nullptr ? *p : reinterpret_cast<const ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo&>(
      ::Arp::System::Commons::Services::Io::Grpc::_SpaceInfo_default_instance_);
}
inline const ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo& IFileSystemInfoServiceGetSpaceInfoResponse::spaceinfo() const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoResponse.spaceInfo)
  return _internal_spaceinfo();
}
inline void IFileSystemInfoServiceGetSpaceInfoResponse::unsafe_arena_set_allocated_spaceinfo(
    ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* spaceinfo) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spaceinfo_);
  }
  spaceinfo_ = spaceinfo;
  if (spaceinfo) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoResponse.spaceInfo)
}
inline ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* IFileSystemInfoServiceGetSpaceInfoResponse::release_spaceinfo() {
  
  ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* temp = spaceinfo_;
  spaceinfo_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* IFileSystemInfoServiceGetSpaceInfoResponse::unsafe_arena_release_spaceinfo() {
  // @@protoc_insertion_point(field_release:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoResponse.spaceInfo)
  
  ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* temp = spaceinfo_;
  spaceinfo_ = nullptr;
  return temp;
}
inline ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* IFileSystemInfoServiceGetSpaceInfoResponse::_internal_mutable_spaceinfo() {
  
  if (spaceinfo_ == nullptr) {
    auto* p = CreateMaybeMessage<::Arp::System::Commons::Services::Io::Grpc::SpaceInfo>(GetArena());
    spaceinfo_ = p;
  }
  return spaceinfo_;
}
inline ::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* IFileSystemInfoServiceGetSpaceInfoResponse::mutable_spaceinfo() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoResponse.spaceInfo)
  return _internal_mutable_spaceinfo();
}
inline void IFileSystemInfoServiceGetSpaceInfoResponse::set_allocated_spaceinfo(::Arp::System::Commons::Services::Io::Grpc::SpaceInfo* spaceinfo) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(spaceinfo_);
  }
  if (spaceinfo) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(spaceinfo)->GetArena();
    if (message_arena != submessage_arena) {
      spaceinfo = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, spaceinfo, submessage_arena);
    }
    
  } else {
    
  }
  spaceinfo_ = spaceinfo;
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetSpaceInfoResponse.spaceInfo)
}

// -------------------------------------------------------------------

// IFileSystemInfoServiceGetRootDirectoriesResponse

// repeated string _ReturnValue = 1;
inline int IFileSystemInfoServiceGetRootDirectoriesResponse::_internal__returnvalue_size() const {
  return _returnvalue_.size();
}
inline int IFileSystemInfoServiceGetRootDirectoriesResponse::_returnvalue_size() const {
  return _internal__returnvalue_size();
}
inline void IFileSystemInfoServiceGetRootDirectoriesResponse::clear__returnvalue() {
  _returnvalue_.Clear();
}
inline std::string* IFileSystemInfoServiceGetRootDirectoriesResponse::add__returnvalue() {
  // @@protoc_insertion_point(field_add_mutable:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
  return _internal_add__returnvalue();
}
inline const std::string& IFileSystemInfoServiceGetRootDirectoriesResponse::_internal__returnvalue(int index) const {
  return _returnvalue_.Get(index);
}
inline const std::string& IFileSystemInfoServiceGetRootDirectoriesResponse::_returnvalue(int index) const {
  // @@protoc_insertion_point(field_get:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
  return _internal__returnvalue(index);
}
inline std::string* IFileSystemInfoServiceGetRootDirectoriesResponse::mutable__returnvalue(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
  return _returnvalue_.Mutable(index);
}
inline void IFileSystemInfoServiceGetRootDirectoriesResponse::set__returnvalue(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
  _returnvalue_.Mutable(index)->assign(value);
}
inline void IFileSystemInfoServiceGetRootDirectoriesResponse::set__returnvalue(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
  _returnvalue_.Mutable(index)->assign(std::move(value));
}
inline void IFileSystemInfoServiceGetRootDirectoriesResponse::set__returnvalue(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _returnvalue_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
}
inline void IFileSystemInfoServiceGetRootDirectoriesResponse::set__returnvalue(int index, const char* value, size_t size) {
  _returnvalue_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
}
inline std::string* IFileSystemInfoServiceGetRootDirectoriesResponse::_internal_add__returnvalue() {
  return _returnvalue_.Add();
}
inline void IFileSystemInfoServiceGetRootDirectoriesResponse::add__returnvalue(const std::string& value) {
  _returnvalue_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
}
inline void IFileSystemInfoServiceGetRootDirectoriesResponse::add__returnvalue(std::string&& value) {
  _returnvalue_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
}
inline void IFileSystemInfoServiceGetRootDirectoriesResponse::add__returnvalue(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _returnvalue_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
}
inline void IFileSystemInfoServiceGetRootDirectoriesResponse::add__returnvalue(const char* value, size_t size) {
  _returnvalue_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
IFileSystemInfoServiceGetRootDirectoriesResponse::_returnvalue() const {
  // @@protoc_insertion_point(field_list:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
  return _returnvalue_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
IFileSystemInfoServiceGetRootDirectoriesResponse::mutable__returnvalue() {
  // @@protoc_insertion_point(field_mutable_list:Arp.System.Commons.Services.Io.Grpc.IFileSystemInfoServiceGetRootDirectoriesResponse._ReturnValue)
  return &_returnvalue_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace Grpc
}  // namespace Io
}  // namespace Services
}  // namespace Commons
}  // namespace System
}  // namespace Arp

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_IFileSystemInfoService_2eproto
