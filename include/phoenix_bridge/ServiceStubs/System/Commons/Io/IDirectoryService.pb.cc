// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: IDirectoryService.proto

#include "IDirectoryService.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace Arp {
namespace System {
namespace Commons {
namespace Services {
namespace Io {
namespace Grpc {
class IDirectoryServiceExistsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceExistsRequest> _instance;
} _IDirectoryServiceExistsRequest_default_instance_;
class IDirectoryServiceCreateRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceCreateRequest> _instance;
} _IDirectoryServiceCreateRequest_default_instance_;
class IDirectoryServiceDeleteRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceDeleteRequest> _instance;
} _IDirectoryServiceDeleteRequest_default_instance_;
class IDirectoryServiceClearRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceClearRequest> _instance;
} _IDirectoryServiceClearRequest_default_instance_;
class IDirectoryServiceMoveRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceMoveRequest> _instance;
} _IDirectoryServiceMoveRequest_default_instance_;
class IDirectoryServiceCopyRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceCopyRequest> _instance;
} _IDirectoryServiceCopyRequest_default_instance_;
class IDirectoryServiceExistsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceExistsResponse> _instance;
} _IDirectoryServiceExistsResponse_default_instance_;
class IDirectoryServiceCreateResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceCreateResponse> _instance;
} _IDirectoryServiceCreateResponse_default_instance_;
class IDirectoryServiceDeleteResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceDeleteResponse> _instance;
} _IDirectoryServiceDeleteResponse_default_instance_;
class IDirectoryServiceClearResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceClearResponse> _instance;
} _IDirectoryServiceClearResponse_default_instance_;
class IDirectoryServiceMoveResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceMoveResponse> _instance;
} _IDirectoryServiceMoveResponse_default_instance_;
class IDirectoryServiceCopyResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IDirectoryServiceCopyResponse> _instance;
} _IDirectoryServiceCopyResponse_default_instance_;
}  // namespace Grpc
}  // namespace Io
}  // namespace Services
}  // namespace Commons
}  // namespace System
}  // namespace Arp
static void InitDefaultsscc_info_IDirectoryServiceClearRequest_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceClearRequest_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceClearRequest_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceClearRequest_IDirectoryService_2eproto}, {}};

static void InitDefaultsscc_info_IDirectoryServiceClearResponse_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceClearResponse_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceClearResponse_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceClearResponse_IDirectoryService_2eproto}, {}};

static void InitDefaultsscc_info_IDirectoryServiceCopyRequest_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceCopyRequest_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceCopyRequest_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceCopyRequest_IDirectoryService_2eproto}, {}};

static void InitDefaultsscc_info_IDirectoryServiceCopyResponse_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceCopyResponse_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceCopyResponse_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceCopyResponse_IDirectoryService_2eproto}, {}};

static void InitDefaultsscc_info_IDirectoryServiceCreateRequest_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceCreateRequest_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceCreateRequest_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceCreateRequest_IDirectoryService_2eproto}, {}};

static void InitDefaultsscc_info_IDirectoryServiceCreateResponse_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceCreateResponse_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceCreateResponse_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceCreateResponse_IDirectoryService_2eproto}, {}};

static void InitDefaultsscc_info_IDirectoryServiceDeleteRequest_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceDeleteRequest_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceDeleteRequest_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceDeleteRequest_IDirectoryService_2eproto}, {}};

static void InitDefaultsscc_info_IDirectoryServiceDeleteResponse_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceDeleteResponse_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceDeleteResponse_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceDeleteResponse_IDirectoryService_2eproto}, {}};

static void InitDefaultsscc_info_IDirectoryServiceExistsRequest_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceExistsRequest_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceExistsRequest_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceExistsRequest_IDirectoryService_2eproto}, {}};

static void InitDefaultsscc_info_IDirectoryServiceExistsResponse_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceExistsResponse_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceExistsResponse_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceExistsResponse_IDirectoryService_2eproto}, {}};

static void InitDefaultsscc_info_IDirectoryServiceMoveRequest_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceMoveRequest_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceMoveRequest_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceMoveRequest_IDirectoryService_2eproto}, {}};

static void InitDefaultsscc_info_IDirectoryServiceMoveResponse_IDirectoryService_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceMoveResponse_default_instance_;
    new (ptr) ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_IDirectoryServiceMoveResponse_IDirectoryService_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_IDirectoryServiceMoveResponse_IDirectoryService_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_IDirectoryService_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_IDirectoryService_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_IDirectoryService_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_IDirectoryService_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsRequest, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateRequest, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteRequest, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearRequest, path_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveRequest, sourcepath_),
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveRequest, destinationpath_),
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveRequest, clear_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyRequest, sourcepath_),
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyRequest, destinationpath_),
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyRequest, clear_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveResponse, _returnvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyResponse, _returnvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsRequest)},
  { 6, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateRequest)},
  { 12, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteRequest)},
  { 18, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearRequest)},
  { 24, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveRequest)},
  { 32, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyRequest)},
  { 40, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsResponse)},
  { 46, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateResponse)},
  { 52, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteResponse)},
  { 58, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearResponse)},
  { 64, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveResponse)},
  { 70, -1, sizeof(::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceExistsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceCreateRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceDeleteRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceClearRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceMoveRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceCopyRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceExistsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceCreateResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceDeleteResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceClearResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceMoveResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::System::Commons::Services::Io::Grpc::_IDirectoryServiceCopyResponse_default_instance_),
};

const char descriptor_table_protodef_IDirectoryService_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027IDirectoryService.proto\022#Arp.System.Co"
  "mmons.Services.Io.Grpc\032\025FileSystemError."
  "proto\".\n\036IDirectoryServiceExistsRequest\022"
  "\014\n\004path\030\001 \001(\t\".\n\036IDirectoryServiceCreate"
  "Request\022\014\n\004path\030\001 \001(\t\".\n\036IDirectoryServi"
  "ceDeleteRequest\022\014\n\004path\030\001 \001(\t\"-\n\035IDirect"
  "oryServiceClearRequest\022\014\n\004path\030\001 \001(\t\"Z\n\034"
  "IDirectoryServiceMoveRequest\022\022\n\nsourcePa"
  "th\030\001 \001(\t\022\027\n\017destinationPath\030\002 \001(\t\022\r\n\005cle"
  "ar\030\003 \001(\010\"Z\n\034IDirectoryServiceCopyRequest"
  "\022\022\n\nsourcePath\030\001 \001(\t\022\027\n\017destinationPath\030"
  "\002 \001(\t\022\r\n\005clear\030\003 \001(\010\"7\n\037IDirectoryServic"
  "eExistsResponse\022\024\n\014_ReturnValue\030\001 \001(\010\"m\n"
  "\037IDirectoryServiceCreateResponse\022J\n\014_Ret"
  "urnValue\030\001 \001(\01624.Arp.System.Commons.Serv"
  "ices.Io.Grpc.FileSystemError\"m\n\037IDirecto"
  "ryServiceDeleteResponse\022J\n\014_ReturnValue\030"
  "\001 \001(\01624.Arp.System.Commons.Services.Io.G"
  "rpc.FileSystemError\"l\n\036IDirectoryService"
  "ClearResponse\022J\n\014_ReturnValue\030\001 \001(\01624.Ar"
  "p.System.Commons.Services.Io.Grpc.FileSy"
  "stemError\"k\n\035IDirectoryServiceMoveRespon"
  "se\022J\n\014_ReturnValue\030\001 \001(\01624.Arp.System.Co"
  "mmons.Services.Io.Grpc.FileSystemError\"k"
  "\n\035IDirectoryServiceCopyResponse\022J\n\014_Retu"
  "rnValue\030\001 \001(\01624.Arp.System.Commons.Servi"
  "ces.Io.Grpc.FileSystemError2\224\007\n\021IDirecto"
  "ryService\022\225\001\n\006Exists\022C.Arp.System.Common"
  "s.Services.Io.Grpc.IDirectoryServiceExis"
  "tsRequest\032D.Arp.System.Commons.Services."
  "Io.Grpc.IDirectoryServiceExistsResponse\""
  "\000\022\225\001\n\006Create\022C.Arp.System.Commons.Servic"
  "es.Io.Grpc.IDirectoryServiceCreateReques"
  "t\032D.Arp.System.Commons.Services.Io.Grpc."
  "IDirectoryServiceCreateResponse\"\000\022\225\001\n\006De"
  "lete\022C.Arp.System.Commons.Services.Io.Gr"
  "pc.IDirectoryServiceDeleteRequest\032D.Arp."
  "System.Commons.Services.Io.Grpc.IDirecto"
  "ryServiceDeleteResponse\"\000\022\222\001\n\005Clear\022B.Ar"
  "p.System.Commons.Services.Io.Grpc.IDirec"
  "toryServiceClearRequest\032C.Arp.System.Com"
  "mons.Services.Io.Grpc.IDirectoryServiceC"
  "learResponse\"\000\022\217\001\n\004Move\022A.Arp.System.Com"
  "mons.Services.Io.Grpc.IDirectoryServiceM"
  "oveRequest\032B.Arp.System.Commons.Services"
  ".Io.Grpc.IDirectoryServiceMoveResponse\"\000"
  "\022\217\001\n\004Copy\022A.Arp.System.Commons.Services."
  "Io.Grpc.IDirectoryServiceCopyRequest\032B.A"
  "rp.System.Commons.Services.Io.Grpc.IDire"
  "ctoryServiceCopyResponse\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_IDirectoryService_2eproto_deps[1] = {
  &::descriptor_table_FileSystemError_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_IDirectoryService_2eproto_sccs[12] = {
  &scc_info_IDirectoryServiceClearRequest_IDirectoryService_2eproto.base,
  &scc_info_IDirectoryServiceClearResponse_IDirectoryService_2eproto.base,
  &scc_info_IDirectoryServiceCopyRequest_IDirectoryService_2eproto.base,
  &scc_info_IDirectoryServiceCopyResponse_IDirectoryService_2eproto.base,
  &scc_info_IDirectoryServiceCreateRequest_IDirectoryService_2eproto.base,
  &scc_info_IDirectoryServiceCreateResponse_IDirectoryService_2eproto.base,
  &scc_info_IDirectoryServiceDeleteRequest_IDirectoryService_2eproto.base,
  &scc_info_IDirectoryServiceDeleteResponse_IDirectoryService_2eproto.base,
  &scc_info_IDirectoryServiceExistsRequest_IDirectoryService_2eproto.base,
  &scc_info_IDirectoryServiceExistsResponse_IDirectoryService_2eproto.base,
  &scc_info_IDirectoryServiceMoveRequest_IDirectoryService_2eproto.base,
  &scc_info_IDirectoryServiceMoveResponse_IDirectoryService_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_IDirectoryService_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_IDirectoryService_2eproto = {
  false, false, descriptor_table_protodef_IDirectoryService_2eproto, "IDirectoryService.proto", 1994,
  &descriptor_table_IDirectoryService_2eproto_once, descriptor_table_IDirectoryService_2eproto_sccs, descriptor_table_IDirectoryService_2eproto_deps, 12, 1,
  schemas, file_default_instances, TableStruct_IDirectoryService_2eproto::offsets,
  file_level_metadata_IDirectoryService_2eproto, 12, file_level_enum_descriptors_IDirectoryService_2eproto, file_level_service_descriptors_IDirectoryService_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_IDirectoryService_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_IDirectoryService_2eproto)), true);
namespace Arp {
namespace System {
namespace Commons {
namespace Services {
namespace Io {
namespace Grpc {

// ===================================================================

class IDirectoryServiceExistsRequest::_Internal {
 public:
};

IDirectoryServiceExistsRequest::IDirectoryServiceExistsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
}
IDirectoryServiceExistsRequest::IDirectoryServiceExistsRequest(const IDirectoryServiceExistsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
}

void IDirectoryServiceExistsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDirectoryServiceExistsRequest_IDirectoryService_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IDirectoryServiceExistsRequest::~IDirectoryServiceExistsRequest() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceExistsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IDirectoryServiceExistsRequest::ArenaDtor(void* object) {
  IDirectoryServiceExistsRequest* _this = reinterpret_cast< IDirectoryServiceExistsRequest* >(object);
  (void)_this;
}
void IDirectoryServiceExistsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceExistsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceExistsRequest& IDirectoryServiceExistsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceExistsRequest_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceExistsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceExistsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceExistsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
  return target;
}

size_t IDirectoryServiceExistsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceExistsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceExistsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceExistsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
    MergeFrom(*source);
  }
}

void IDirectoryServiceExistsRequest::MergeFrom(const IDirectoryServiceExistsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void IDirectoryServiceExistsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceExistsRequest::CopyFrom(const IDirectoryServiceExistsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceExistsRequest::IsInitialized() const {
  return true;
}

void IDirectoryServiceExistsRequest::InternalSwap(IDirectoryServiceExistsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceExistsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDirectoryServiceCreateRequest::_Internal {
 public:
};

IDirectoryServiceCreateRequest::IDirectoryServiceCreateRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
}
IDirectoryServiceCreateRequest::IDirectoryServiceCreateRequest(const IDirectoryServiceCreateRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
}

void IDirectoryServiceCreateRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDirectoryServiceCreateRequest_IDirectoryService_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IDirectoryServiceCreateRequest::~IDirectoryServiceCreateRequest() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceCreateRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IDirectoryServiceCreateRequest::ArenaDtor(void* object) {
  IDirectoryServiceCreateRequest* _this = reinterpret_cast< IDirectoryServiceCreateRequest* >(object);
  (void)_this;
}
void IDirectoryServiceCreateRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceCreateRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceCreateRequest& IDirectoryServiceCreateRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceCreateRequest_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceCreateRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceCreateRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceCreateRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
  return target;
}

size_t IDirectoryServiceCreateRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceCreateRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceCreateRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceCreateRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
    MergeFrom(*source);
  }
}

void IDirectoryServiceCreateRequest::MergeFrom(const IDirectoryServiceCreateRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void IDirectoryServiceCreateRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceCreateRequest::CopyFrom(const IDirectoryServiceCreateRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceCreateRequest::IsInitialized() const {
  return true;
}

void IDirectoryServiceCreateRequest::InternalSwap(IDirectoryServiceCreateRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceCreateRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDirectoryServiceDeleteRequest::_Internal {
 public:
};

IDirectoryServiceDeleteRequest::IDirectoryServiceDeleteRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
}
IDirectoryServiceDeleteRequest::IDirectoryServiceDeleteRequest(const IDirectoryServiceDeleteRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
}

void IDirectoryServiceDeleteRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDirectoryServiceDeleteRequest_IDirectoryService_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IDirectoryServiceDeleteRequest::~IDirectoryServiceDeleteRequest() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceDeleteRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IDirectoryServiceDeleteRequest::ArenaDtor(void* object) {
  IDirectoryServiceDeleteRequest* _this = reinterpret_cast< IDirectoryServiceDeleteRequest* >(object);
  (void)_this;
}
void IDirectoryServiceDeleteRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceDeleteRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceDeleteRequest& IDirectoryServiceDeleteRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceDeleteRequest_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceDeleteRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceDeleteRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceDeleteRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
  return target;
}

size_t IDirectoryServiceDeleteRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceDeleteRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceDeleteRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceDeleteRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
    MergeFrom(*source);
  }
}

void IDirectoryServiceDeleteRequest::MergeFrom(const IDirectoryServiceDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void IDirectoryServiceDeleteRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceDeleteRequest::CopyFrom(const IDirectoryServiceDeleteRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceDeleteRequest::IsInitialized() const {
  return true;
}

void IDirectoryServiceDeleteRequest::InternalSwap(IDirectoryServiceDeleteRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceDeleteRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDirectoryServiceClearRequest::_Internal {
 public:
};

IDirectoryServiceClearRequest::IDirectoryServiceClearRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
}
IDirectoryServiceClearRequest::IDirectoryServiceClearRequest(const IDirectoryServiceClearRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_path().empty()) {
    path_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_path(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
}

void IDirectoryServiceClearRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDirectoryServiceClearRequest_IDirectoryService_2eproto.base);
  path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

IDirectoryServiceClearRequest::~IDirectoryServiceClearRequest() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceClearRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IDirectoryServiceClearRequest::ArenaDtor(void* object) {
  IDirectoryServiceClearRequest* _this = reinterpret_cast< IDirectoryServiceClearRequest* >(object);
  (void)_this;
}
void IDirectoryServiceClearRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceClearRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceClearRequest& IDirectoryServiceClearRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceClearRequest_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceClearRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  path_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceClearRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string path = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest.path"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceClearRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_path().data(), static_cast<int>(this->_internal_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest.path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
  return target;
}

size_t IDirectoryServiceClearRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (this->path().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_path());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceClearRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceClearRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceClearRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
    MergeFrom(*source);
  }
}

void IDirectoryServiceClearRequest::MergeFrom(const IDirectoryServiceClearRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.path().size() > 0) {
    _internal_set_path(from._internal_path());
  }
}

void IDirectoryServiceClearRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceClearRequest::CopyFrom(const IDirectoryServiceClearRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceClearRequest::IsInitialized() const {
  return true;
}

void IDirectoryServiceClearRequest::InternalSwap(IDirectoryServiceClearRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  path_.Swap(&other->path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceClearRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDirectoryServiceMoveRequest::_Internal {
 public:
};

IDirectoryServiceMoveRequest::IDirectoryServiceMoveRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
}
IDirectoryServiceMoveRequest::IDirectoryServiceMoveRequest(const IDirectoryServiceMoveRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sourcepath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sourcepath().empty()) {
    sourcepath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sourcepath(), 
      GetArena());
  }
  destinationpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_destinationpath().empty()) {
    destinationpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_destinationpath(), 
      GetArena());
  }
  clear_ = from.clear_;
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
}

void IDirectoryServiceMoveRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDirectoryServiceMoveRequest_IDirectoryService_2eproto.base);
  sourcepath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destinationpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_ = false;
}

IDirectoryServiceMoveRequest::~IDirectoryServiceMoveRequest() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceMoveRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sourcepath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destinationpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IDirectoryServiceMoveRequest::ArenaDtor(void* object) {
  IDirectoryServiceMoveRequest* _this = reinterpret_cast< IDirectoryServiceMoveRequest* >(object);
  (void)_this;
}
void IDirectoryServiceMoveRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceMoveRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceMoveRequest& IDirectoryServiceMoveRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceMoveRequest_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceMoveRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sourcepath_.ClearToEmpty();
  destinationpath_.ClearToEmpty();
  clear_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceMoveRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string sourcePath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sourcepath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest.sourcePath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string destinationPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_destinationpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest.destinationPath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool clear = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          clear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceMoveRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sourcePath = 1;
  if (this->sourcepath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sourcepath().data(), static_cast<int>(this->_internal_sourcepath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest.sourcePath");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sourcepath(), target);
  }

  // string destinationPath = 2;
  if (this->destinationpath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destinationpath().data(), static_cast<int>(this->_internal_destinationpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest.destinationPath");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_destinationpath(), target);
  }

  // bool clear = 3;
  if (this->clear() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_clear(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
  return target;
}

size_t IDirectoryServiceMoveRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sourcePath = 1;
  if (this->sourcepath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sourcepath());
  }

  // string destinationPath = 2;
  if (this->destinationpath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destinationpath());
  }

  // bool clear = 3;
  if (this->clear() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceMoveRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceMoveRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceMoveRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
    MergeFrom(*source);
  }
}

void IDirectoryServiceMoveRequest::MergeFrom(const IDirectoryServiceMoveRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sourcepath().size() > 0) {
    _internal_set_sourcepath(from._internal_sourcepath());
  }
  if (from.destinationpath().size() > 0) {
    _internal_set_destinationpath(from._internal_destinationpath());
  }
  if (from.clear() != 0) {
    _internal_set_clear(from._internal_clear());
  }
}

void IDirectoryServiceMoveRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceMoveRequest::CopyFrom(const IDirectoryServiceMoveRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceMoveRequest::IsInitialized() const {
  return true;
}

void IDirectoryServiceMoveRequest::InternalSwap(IDirectoryServiceMoveRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sourcepath_.Swap(&other->sourcepath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  destinationpath_.Swap(&other->destinationpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(clear_, other->clear_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceMoveRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDirectoryServiceCopyRequest::_Internal {
 public:
};

IDirectoryServiceCopyRequest::IDirectoryServiceCopyRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
}
IDirectoryServiceCopyRequest::IDirectoryServiceCopyRequest(const IDirectoryServiceCopyRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sourcepath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sourcepath().empty()) {
    sourcepath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sourcepath(), 
      GetArena());
  }
  destinationpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_destinationpath().empty()) {
    destinationpath_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_destinationpath(), 
      GetArena());
  }
  clear_ = from.clear_;
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
}

void IDirectoryServiceCopyRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IDirectoryServiceCopyRequest_IDirectoryService_2eproto.base);
  sourcepath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destinationpath_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_ = false;
}

IDirectoryServiceCopyRequest::~IDirectoryServiceCopyRequest() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceCopyRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  sourcepath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destinationpath_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void IDirectoryServiceCopyRequest::ArenaDtor(void* object) {
  IDirectoryServiceCopyRequest* _this = reinterpret_cast< IDirectoryServiceCopyRequest* >(object);
  (void)_this;
}
void IDirectoryServiceCopyRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceCopyRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceCopyRequest& IDirectoryServiceCopyRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceCopyRequest_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceCopyRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sourcepath_.ClearToEmpty();
  destinationpath_.ClearToEmpty();
  clear_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceCopyRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string sourcePath = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_sourcepath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest.sourcePath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string destinationPath = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_destinationpath();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest.destinationPath"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool clear = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          clear_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceCopyRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string sourcePath = 1;
  if (this->sourcepath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sourcepath().data(), static_cast<int>(this->_internal_sourcepath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest.sourcePath");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_sourcepath(), target);
  }

  // string destinationPath = 2;
  if (this->destinationpath().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destinationpath().data(), static_cast<int>(this->_internal_destinationpath().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest.destinationPath");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_destinationpath(), target);
  }

  // bool clear = 3;
  if (this->clear() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_clear(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
  return target;
}

size_t IDirectoryServiceCopyRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string sourcePath = 1;
  if (this->sourcepath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sourcepath());
  }

  // string destinationPath = 2;
  if (this->destinationpath().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destinationpath());
  }

  // bool clear = 3;
  if (this->clear() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceCopyRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceCopyRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceCopyRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
    MergeFrom(*source);
  }
}

void IDirectoryServiceCopyRequest::MergeFrom(const IDirectoryServiceCopyRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sourcepath().size() > 0) {
    _internal_set_sourcepath(from._internal_sourcepath());
  }
  if (from.destinationpath().size() > 0) {
    _internal_set_destinationpath(from._internal_destinationpath());
  }
  if (from.clear() != 0) {
    _internal_set_clear(from._internal_clear());
  }
}

void IDirectoryServiceCopyRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceCopyRequest::CopyFrom(const IDirectoryServiceCopyRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceCopyRequest::IsInitialized() const {
  return true;
}

void IDirectoryServiceCopyRequest::InternalSwap(IDirectoryServiceCopyRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  sourcepath_.Swap(&other->sourcepath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  destinationpath_.Swap(&other->destinationpath_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(clear_, other->clear_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceCopyRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDirectoryServiceExistsResponse::_Internal {
 public:
};

IDirectoryServiceExistsResponse::IDirectoryServiceExistsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
}
IDirectoryServiceExistsResponse::IDirectoryServiceExistsResponse(const IDirectoryServiceExistsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
}

void IDirectoryServiceExistsResponse::SharedCtor() {
  _returnvalue_ = false;
}

IDirectoryServiceExistsResponse::~IDirectoryServiceExistsResponse() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceExistsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IDirectoryServiceExistsResponse::ArenaDtor(void* object) {
  IDirectoryServiceExistsResponse* _this = reinterpret_cast< IDirectoryServiceExistsResponse* >(object);
  (void)_this;
}
void IDirectoryServiceExistsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceExistsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceExistsResponse& IDirectoryServiceExistsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceExistsResponse_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceExistsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceExistsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _returnvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceExistsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
  return target;
}

size_t IDirectoryServiceExistsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceExistsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceExistsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceExistsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
    MergeFrom(*source);
  }
}

void IDirectoryServiceExistsResponse::MergeFrom(const IDirectoryServiceExistsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void IDirectoryServiceExistsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceExistsResponse::CopyFrom(const IDirectoryServiceExistsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceExistsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceExistsResponse::IsInitialized() const {
  return true;
}

void IDirectoryServiceExistsResponse::InternalSwap(IDirectoryServiceExistsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceExistsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDirectoryServiceCreateResponse::_Internal {
 public:
};

IDirectoryServiceCreateResponse::IDirectoryServiceCreateResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
}
IDirectoryServiceCreateResponse::IDirectoryServiceCreateResponse(const IDirectoryServiceCreateResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
}

void IDirectoryServiceCreateResponse::SharedCtor() {
  _returnvalue_ = 0;
}

IDirectoryServiceCreateResponse::~IDirectoryServiceCreateResponse() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceCreateResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IDirectoryServiceCreateResponse::ArenaDtor(void* object) {
  IDirectoryServiceCreateResponse* _this = reinterpret_cast< IDirectoryServiceCreateResponse* >(object);
  (void)_this;
}
void IDirectoryServiceCreateResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceCreateResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceCreateResponse& IDirectoryServiceCreateResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceCreateResponse_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceCreateResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceCreateResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::System::Commons::Services::Io::Grpc::FileSystemError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceCreateResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
  return target;
}

size_t IDirectoryServiceCreateResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceCreateResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceCreateResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceCreateResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
    MergeFrom(*source);
  }
}

void IDirectoryServiceCreateResponse::MergeFrom(const IDirectoryServiceCreateResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void IDirectoryServiceCreateResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceCreateResponse::CopyFrom(const IDirectoryServiceCreateResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCreateResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceCreateResponse::IsInitialized() const {
  return true;
}

void IDirectoryServiceCreateResponse::InternalSwap(IDirectoryServiceCreateResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceCreateResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDirectoryServiceDeleteResponse::_Internal {
 public:
};

IDirectoryServiceDeleteResponse::IDirectoryServiceDeleteResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
}
IDirectoryServiceDeleteResponse::IDirectoryServiceDeleteResponse(const IDirectoryServiceDeleteResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
}

void IDirectoryServiceDeleteResponse::SharedCtor() {
  _returnvalue_ = 0;
}

IDirectoryServiceDeleteResponse::~IDirectoryServiceDeleteResponse() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceDeleteResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IDirectoryServiceDeleteResponse::ArenaDtor(void* object) {
  IDirectoryServiceDeleteResponse* _this = reinterpret_cast< IDirectoryServiceDeleteResponse* >(object);
  (void)_this;
}
void IDirectoryServiceDeleteResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceDeleteResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceDeleteResponse& IDirectoryServiceDeleteResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceDeleteResponse_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceDeleteResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceDeleteResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::System::Commons::Services::Io::Grpc::FileSystemError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceDeleteResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
  return target;
}

size_t IDirectoryServiceDeleteResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceDeleteResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceDeleteResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceDeleteResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
    MergeFrom(*source);
  }
}

void IDirectoryServiceDeleteResponse::MergeFrom(const IDirectoryServiceDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void IDirectoryServiceDeleteResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceDeleteResponse::CopyFrom(const IDirectoryServiceDeleteResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceDeleteResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceDeleteResponse::IsInitialized() const {
  return true;
}

void IDirectoryServiceDeleteResponse::InternalSwap(IDirectoryServiceDeleteResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceDeleteResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDirectoryServiceClearResponse::_Internal {
 public:
};

IDirectoryServiceClearResponse::IDirectoryServiceClearResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
}
IDirectoryServiceClearResponse::IDirectoryServiceClearResponse(const IDirectoryServiceClearResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
}

void IDirectoryServiceClearResponse::SharedCtor() {
  _returnvalue_ = 0;
}

IDirectoryServiceClearResponse::~IDirectoryServiceClearResponse() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceClearResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IDirectoryServiceClearResponse::ArenaDtor(void* object) {
  IDirectoryServiceClearResponse* _this = reinterpret_cast< IDirectoryServiceClearResponse* >(object);
  (void)_this;
}
void IDirectoryServiceClearResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceClearResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceClearResponse& IDirectoryServiceClearResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceClearResponse_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceClearResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceClearResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::System::Commons::Services::Io::Grpc::FileSystemError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceClearResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
  return target;
}

size_t IDirectoryServiceClearResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceClearResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceClearResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceClearResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
    MergeFrom(*source);
  }
}

void IDirectoryServiceClearResponse::MergeFrom(const IDirectoryServiceClearResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void IDirectoryServiceClearResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceClearResponse::CopyFrom(const IDirectoryServiceClearResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceClearResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceClearResponse::IsInitialized() const {
  return true;
}

void IDirectoryServiceClearResponse::InternalSwap(IDirectoryServiceClearResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceClearResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDirectoryServiceMoveResponse::_Internal {
 public:
};

IDirectoryServiceMoveResponse::IDirectoryServiceMoveResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
}
IDirectoryServiceMoveResponse::IDirectoryServiceMoveResponse(const IDirectoryServiceMoveResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
}

void IDirectoryServiceMoveResponse::SharedCtor() {
  _returnvalue_ = 0;
}

IDirectoryServiceMoveResponse::~IDirectoryServiceMoveResponse() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceMoveResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IDirectoryServiceMoveResponse::ArenaDtor(void* object) {
  IDirectoryServiceMoveResponse* _this = reinterpret_cast< IDirectoryServiceMoveResponse* >(object);
  (void)_this;
}
void IDirectoryServiceMoveResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceMoveResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceMoveResponse& IDirectoryServiceMoveResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceMoveResponse_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceMoveResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceMoveResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::System::Commons::Services::Io::Grpc::FileSystemError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceMoveResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
  return target;
}

size_t IDirectoryServiceMoveResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceMoveResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceMoveResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceMoveResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
    MergeFrom(*source);
  }
}

void IDirectoryServiceMoveResponse::MergeFrom(const IDirectoryServiceMoveResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void IDirectoryServiceMoveResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceMoveResponse::CopyFrom(const IDirectoryServiceMoveResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceMoveResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceMoveResponse::IsInitialized() const {
  return true;
}

void IDirectoryServiceMoveResponse::InternalSwap(IDirectoryServiceMoveResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceMoveResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class IDirectoryServiceCopyResponse::_Internal {
 public:
};

IDirectoryServiceCopyResponse::IDirectoryServiceCopyResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
}
IDirectoryServiceCopyResponse::IDirectoryServiceCopyResponse(const IDirectoryServiceCopyResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _returnvalue_ = from._returnvalue_;
  // @@protoc_insertion_point(copy_constructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
}

void IDirectoryServiceCopyResponse::SharedCtor() {
  _returnvalue_ = 0;
}

IDirectoryServiceCopyResponse::~IDirectoryServiceCopyResponse() {
  // @@protoc_insertion_point(destructor:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void IDirectoryServiceCopyResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void IDirectoryServiceCopyResponse::ArenaDtor(void* object) {
  IDirectoryServiceCopyResponse* _this = reinterpret_cast< IDirectoryServiceCopyResponse* >(object);
  (void)_this;
}
void IDirectoryServiceCopyResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void IDirectoryServiceCopyResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IDirectoryServiceCopyResponse& IDirectoryServiceCopyResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IDirectoryServiceCopyResponse_IDirectoryService_2eproto.base);
  return *internal_default_instance();
}


void IDirectoryServiceCopyResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _returnvalue_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IDirectoryServiceCopyResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set__returnvalue(static_cast<::Arp::System::Commons::Services::Io::Grpc::FileSystemError>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IDirectoryServiceCopyResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal__returnvalue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
  return target;
}

size_t IDirectoryServiceCopyResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .Arp.System.Commons.Services.Io.Grpc.FileSystemError _ReturnValue = 1;
  if (this->_returnvalue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal__returnvalue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IDirectoryServiceCopyResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const IDirectoryServiceCopyResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IDirectoryServiceCopyResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
    MergeFrom(*source);
  }
}

void IDirectoryServiceCopyResponse::MergeFrom(const IDirectoryServiceCopyResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._returnvalue() != 0) {
    _internal_set__returnvalue(from._internal__returnvalue());
  }
}

void IDirectoryServiceCopyResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IDirectoryServiceCopyResponse::CopyFrom(const IDirectoryServiceCopyResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.System.Commons.Services.Io.Grpc.IDirectoryServiceCopyResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IDirectoryServiceCopyResponse::IsInitialized() const {
  return true;
}

void IDirectoryServiceCopyResponse::InternalSwap(IDirectoryServiceCopyResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(_returnvalue_, other->_returnvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IDirectoryServiceCopyResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Grpc
}  // namespace Io
}  // namespace Services
}  // namespace Commons
}  // namespace System
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsRequest* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateRequest* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteRequest* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearRequest* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveRequest* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyRequest* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsResponse* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceExistsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateResponse* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCreateResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteResponse* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceDeleteResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearResponse* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceClearResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveResponse* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceMoveResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyResponse* Arena::CreateMaybeMessage< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::System::Commons::Services::Io::Grpc::IDirectoryServiceCopyResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
