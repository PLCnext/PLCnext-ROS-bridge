// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Operation.proto

#include "Operation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace Arp {
namespace System {
namespace Um {
namespace Commons {
namespace Grpc {
}  // namespace Grpc
}  // namespace Commons
}  // namespace Um
}  // namespace System
}  // namespace Arp
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_Operation_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_Operation_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Operation_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Operation_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_Operation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017Operation.proto\022\032Arp.System.Um.Commons"
  ".Grpc*\213\003\n\tOperation\022\017\n\013O_Undefined\020\000\022\014\n\010"
  "O_Browse\020\001\022\030\n\024O_ReadRoleOperations\020\002\022\024\n\020"
  "O_WriteAttribute\020\004\022\031\n\025O_WriteRoleOperati"
  "ons\020\010\022\026\n\022O_WriteHistorizing\020\020\022\017\n\013O_ReadV"
  "alue\020 \022\020\n\014O_WriteValue\020@\022\022\n\rO_ReadHistor"
  "y\020\200\001\022\024\n\017O_InsertHistory\020\200\002\022\024\n\017O_ModifyHi"
  "story\020\200\004\022\024\n\017O_DeleteHistory\020\200\010\022\024\n\017O_Rece"
  "iveEvents\020\200\020\022\013\n\006O_Call\020\200 \022\023\n\016O_AddRefere"
  "nce\020\200@\022\027\n\021O_RemoveReference\020\200\200\001\022\022\n\014O_Del"
  "eteNode\020\200\200\002\022\017\n\tO_AddNode\020\200\200\004\022\r\n\007O_Login\020"
  "\200\200\010b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Operation_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Operation_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Operation_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Operation_2eproto = {
  false, false, descriptor_table_protodef_Operation_2eproto, "Operation.proto", 451,
  &descriptor_table_Operation_2eproto_once, descriptor_table_Operation_2eproto_sccs, descriptor_table_Operation_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_Operation_2eproto::offsets,
  file_level_metadata_Operation_2eproto, 0, file_level_enum_descriptors_Operation_2eproto, file_level_service_descriptors_Operation_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Operation_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Operation_2eproto)), true);
namespace Arp {
namespace System {
namespace Um {
namespace Commons {
namespace Grpc {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Operation_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Operation_2eproto);
  return file_level_enum_descriptors_Operation_2eproto[0];
}
bool Operation_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 4:
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Grpc
}  // namespace Commons
}  // namespace Um
}  // namespace System
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
