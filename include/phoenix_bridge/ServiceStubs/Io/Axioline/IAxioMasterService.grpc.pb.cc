// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: IAxioMasterService.proto

#include "IAxioMasterService.pb.h"
#include "IAxioMasterService.grpc.pb.h"

#include <functional>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/channel_interface.h>
#include <grpcpp/impl/codegen/client_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/rpc_service_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/sync_stream.h>
namespace Arp {
namespace Io {
namespace Axioline {
namespace Services {
namespace Grpc {

static const char* IAxioMasterService_method_names[] = {
  "/Arp.Io.Axioline.Services.Grpc.IAxioMasterService/AxioControl",
  "/Arp.Io.Axioline.Services.Grpc.IAxioMasterService/CreateConfiguration",
  "/Arp.Io.Axioline.Services.Grpc.IAxioMasterService/ReadConfiguration",
  "/Arp.Io.Axioline.Services.Grpc.IAxioMasterService/WriteConfiguration",
  "/Arp.Io.Axioline.Services.Grpc.IAxioMasterService/ActivateConfiguration",
  "/Arp.Io.Axioline.Services.Grpc.IAxioMasterService/DeactivateConfiguration",
  "/Arp.Io.Axioline.Services.Grpc.IAxioMasterService/ResetMaster",
};

std::unique_ptr< IAxioMasterService::Stub> IAxioMasterService::NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options) {
  (void)options;
  std::unique_ptr< IAxioMasterService::Stub> stub(new IAxioMasterService::Stub(channel));
  return stub;
}

IAxioMasterService::Stub::Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel)
  : channel_(channel), rpcmethod_AxioControl_(IAxioMasterService_method_names[0], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_CreateConfiguration_(IAxioMasterService_method_names[1], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ReadConfiguration_(IAxioMasterService_method_names[2], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_WriteConfiguration_(IAxioMasterService_method_names[3], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ActivateConfiguration_(IAxioMasterService_method_names[4], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_DeactivateConfiguration_(IAxioMasterService_method_names[5], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  , rpcmethod_ResetMaster_(IAxioMasterService_method_names[6], ::grpc::internal::RpcMethod::NORMAL_RPC, channel)
  {}

::grpc::Status IAxioMasterService::Stub::AxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_AxioControl_, context, request, response);
}

void IAxioMasterService::Stub::experimental_async::AxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AxioControl_, context, request, response, std::move(f));
}

void IAxioMasterService::Stub::experimental_async::AxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_AxioControl_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>* IAxioMasterService::Stub::PrepareAsyncAxioControlRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_AxioControl_, context, request);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>* IAxioMasterService::Stub::AsyncAxioControlRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncAxioControlRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status IAxioMasterService::Stub::CreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_CreateConfiguration_, context, request, response);
}

void IAxioMasterService::Stub::experimental_async::CreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateConfiguration_, context, request, response, std::move(f));
}

void IAxioMasterService::Stub::experimental_async::CreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_CreateConfiguration_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>* IAxioMasterService::Stub::PrepareAsyncCreateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_CreateConfiguration_, context, request);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>* IAxioMasterService::Stub::AsyncCreateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncCreateConfigurationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status IAxioMasterService::Stub::ReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ReadConfiguration_, context, request, response);
}

void IAxioMasterService::Stub::experimental_async::ReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ReadConfiguration_, context, request, response, std::move(f));
}

void IAxioMasterService::Stub::experimental_async::ReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ReadConfiguration_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>* IAxioMasterService::Stub::PrepareAsyncReadConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ReadConfiguration_, context, request);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>* IAxioMasterService::Stub::AsyncReadConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncReadConfigurationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status IAxioMasterService::Stub::WriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_WriteConfiguration_, context, request, response);
}

void IAxioMasterService::Stub::experimental_async::WriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_WriteConfiguration_, context, request, response, std::move(f));
}

void IAxioMasterService::Stub::experimental_async::WriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_WriteConfiguration_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>* IAxioMasterService::Stub::PrepareAsyncWriteConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_WriteConfiguration_, context, request);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>* IAxioMasterService::Stub::AsyncWriteConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncWriteConfigurationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status IAxioMasterService::Stub::ActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ActivateConfiguration_, context, request, response);
}

void IAxioMasterService::Stub::experimental_async::ActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ActivateConfiguration_, context, request, response, std::move(f));
}

void IAxioMasterService::Stub::experimental_async::ActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ActivateConfiguration_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>* IAxioMasterService::Stub::PrepareAsyncActivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ActivateConfiguration_, context, request);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>* IAxioMasterService::Stub::AsyncActivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncActivateConfigurationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status IAxioMasterService::Stub::DeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_DeactivateConfiguration_, context, request, response);
}

void IAxioMasterService::Stub::experimental_async::DeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeactivateConfiguration_, context, request, response, std::move(f));
}

void IAxioMasterService::Stub::experimental_async::DeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_DeactivateConfiguration_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>* IAxioMasterService::Stub::PrepareAsyncDeactivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_DeactivateConfiguration_, context, request);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>* IAxioMasterService::Stub::AsyncDeactivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncDeactivateConfigurationRaw(context, request, cq);
  result->StartCall();
  return result;
}

::grpc::Status IAxioMasterService::Stub::ResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response) {
  return ::grpc::internal::BlockingUnaryCall< ::google::protobuf::Empty, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), rpcmethod_ResetMaster_, context, request, response);
}

void IAxioMasterService::Stub::experimental_async::ResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response, std::function<void(::grpc::Status)> f) {
  ::grpc::internal::CallbackUnaryCall< ::google::protobuf::Empty, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ResetMaster_, context, request, response, std::move(f));
}

void IAxioMasterService::Stub::experimental_async::ResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) {
  ::grpc::internal::ClientCallbackUnaryFactory::Create< ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(stub_->channel_.get(), stub_->rpcmethod_ResetMaster_, context, request, response, reactor);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>* IAxioMasterService::Stub::PrepareAsyncResetMasterRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  return ::grpc::internal::ClientAsyncResponseReaderHelper::Create< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse, ::google::protobuf::Empty, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(channel_.get(), cq, rpcmethod_ResetMaster_, context, request);
}

::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>* IAxioMasterService::Stub::AsyncResetMasterRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
  auto* result =
    this->PrepareAsyncResetMasterRaw(context, request, cq);
  result->StartCall();
  return result;
}

IAxioMasterService::Service::Service() {
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAxioMasterService_method_names[0],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAxioMasterService::Service, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](IAxioMasterService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* req,
             ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* resp) {
               return service->AxioControl(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAxioMasterService_method_names[1],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAxioMasterService::Service, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](IAxioMasterService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* req,
             ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* resp) {
               return service->CreateConfiguration(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAxioMasterService_method_names[2],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAxioMasterService::Service, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](IAxioMasterService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* req,
             ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* resp) {
               return service->ReadConfiguration(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAxioMasterService_method_names[3],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAxioMasterService::Service, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](IAxioMasterService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* req,
             ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* resp) {
               return service->WriteConfiguration(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAxioMasterService_method_names[4],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAxioMasterService::Service, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](IAxioMasterService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* req,
             ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* resp) {
               return service->ActivateConfiguration(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAxioMasterService_method_names[5],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAxioMasterService::Service, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](IAxioMasterService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* req,
             ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* resp) {
               return service->DeactivateConfiguration(ctx, req, resp);
             }, this)));
  AddMethod(new ::grpc::internal::RpcServiceMethod(
      IAxioMasterService_method_names[6],
      ::grpc::internal::RpcMethod::NORMAL_RPC,
      new ::grpc::internal::RpcMethodHandler< IAxioMasterService::Service, ::google::protobuf::Empty, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse, ::grpc::protobuf::MessageLite, ::grpc::protobuf::MessageLite>(
          [](IAxioMasterService::Service* service,
             ::grpc::ServerContext* ctx,
             const ::google::protobuf::Empty* req,
             ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* resp) {
               return service->ResetMaster(ctx, req, resp);
             }, this)));
}

IAxioMasterService::Service::~Service() {
}

::grpc::Status IAxioMasterService::Service::AxioControl(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IAxioMasterService::Service::CreateConfiguration(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IAxioMasterService::Service::ReadConfiguration(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IAxioMasterService::Service::WriteConfiguration(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IAxioMasterService::Service::ActivateConfiguration(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IAxioMasterService::Service::DeactivateConfiguration(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}

::grpc::Status IAxioMasterService::Service::ResetMaster(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response) {
  (void) context;
  (void) request;
  (void) response;
  return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
}


}  // namespace Arp
}  // namespace Io
}  // namespace Axioline
}  // namespace Services
}  // namespace Grpc

