// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: IAxioMasterService.proto
// Original file comments:
// /////////////////////////////////////////////////////////////////////////////
//
//  Copyright PHOENIX CONTACT Electronics GmbH
//
// /////////////////////////////////////////////////////////////////////////////
//
#ifndef GRPC_IAxioMasterService_2eproto__INCLUDED
#define GRPC_IAxioMasterService_2eproto__INCLUDED

#include "IAxioMasterService.pb.h"

#include <functional>
#include <grpc/impl/codegen/port_platform.h>
#include <grpcpp/impl/codegen/async_generic_service.h>
#include <grpcpp/impl/codegen/async_stream.h>
#include <grpcpp/impl/codegen/async_unary_call.h>
#include <grpcpp/impl/codegen/client_callback.h>
#include <grpcpp/impl/codegen/client_context.h>
#include <grpcpp/impl/codegen/completion_queue.h>
#include <grpcpp/impl/codegen/message_allocator.h>
#include <grpcpp/impl/codegen/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/codegen/rpc_method.h>
#include <grpcpp/impl/codegen/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/impl/codegen/server_context.h>
#include <grpcpp/impl/codegen/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/impl/codegen/stub_options.h>
#include <grpcpp/impl/codegen/sync_stream.h>

namespace Arp {
namespace Io {
namespace Axioline {
namespace Services {
namespace Grpc {

// *
// Provides the access to the AXIO master
//
class IAxioMasterService final {
 public:
  static constexpr char const* service_full_name() {
    return "Arp.Io.Axioline.Services.Grpc.IAxioMasterService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // / <summary>
    // / Raw AXIO service to communicate with the AXIO master.
    // / </summary>
    // / <param name="inData">
    // / Request Data to send to the AXIO master. Format has to be according to DDI specification.
    // / </param>
    // / <param name="IAxioMasterServiceAxioControlOutData">
    // / Response Data received from the AXIO master. Format is according to DDI specification.
    // / </param>
    // / <returns>
    // / Status value.
    // / Note: This service only returns internal errors. Negative confirmations have to be evaluated by user.
    // / </returns>
    virtual ::grpc::Status AxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>> AsyncAxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>>(AsyncAxioControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>> PrepareAsyncAxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>>(PrepareAsyncAxioControlRaw(context, request, cq));
    }
    // / <summary>
    // / Automatic creation of a new configuration
    // / </summary>
    // / <param name="frameReference">
    // / Frame reference
    // / </param>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status CreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>> AsyncCreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>>(AsyncCreateConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>> PrepareAsyncCreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>>(PrepareAsyncCreateConfigurationRaw(context, request, cq));
    }
    // / <summary>
    // / Read current configuration
    // / </summary>
    // / <param name="frameReference">
    // / Frame reference
    // / </param>
    // / <param name="configuration">
    // / Configuration of AXIO device
    // / <see cref="Arp.Device.Interface.Services.AxioDeviceConfiguration" /></param>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status ReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>> AsyncReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>>(AsyncReadConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>> PrepareAsyncReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>>(PrepareAsyncReadConfigurationRaw(context, request, cq));
    }
    // / <summary>
    // / Write configuration
    // / </summary>
    // / <param name="frameReference">
    // / Frame reference
    // / </param>
    // / <param name="configuration">
    // / Configuration of AXIO device
    // / <see cref="Arp.Device.Interface.Services.AxioDeviceConfiguration" /></param>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status WriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>> AsyncWriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>>(AsyncWriteConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>> PrepareAsyncWriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>>(PrepareAsyncWriteConfigurationRaw(context, request, cq));
    }
    // / <summary>
    // / Activate configuration
    // / </summary>
    // / <param name="frameReference">
    // / Frame reference
    // / </param>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status ActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>> AsyncActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>>(AsyncActivateConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>> PrepareAsyncActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>>(PrepareAsyncActivateConfigurationRaw(context, request, cq));
    }
    // / <summary>
    // / Deactivate configuration
    // / </summary>
    // / <param name="frameReference">
    // / Frame reference
    // / </param>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status DeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>> AsyncDeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>>(AsyncDeactivateConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>> PrepareAsyncDeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>>(PrepareAsyncDeactivateConfigurationRaw(context, request, cq));
    }
    // / <summary>
    // / Reset AXIO master
    // / </summary>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status ResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>> AsyncResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>>(AsyncResetMasterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>> PrepareAsyncResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>>(PrepareAsyncResetMasterRaw(context, request, cq));
    }
    class experimental_async_interface {
     public:
      virtual ~experimental_async_interface() {}
      // / <summary>
      // / Raw AXIO service to communicate with the AXIO master.
      // / </summary>
      // / <param name="inData">
      // / Request Data to send to the AXIO master. Format has to be according to DDI specification.
      // / </param>
      // / <param name="IAxioMasterServiceAxioControlOutData">
      // / Response Data received from the AXIO master. Format is according to DDI specification.
      // / </param>
      // / <returns>
      // / Status value.
      // / Note: This service only returns internal errors. Negative confirmations have to be evaluated by user.
      // / </returns>
      virtual void AxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void AxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void AxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // / <summary>
      // / Automatic creation of a new configuration
      // / </summary>
      // / <param name="frameReference">
      // / Frame reference
      // / </param>
      // / <returns>
      // / Structure with error information.
      // / </returns>
      virtual void CreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void CreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void CreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // / <summary>
      // / Read current configuration
      // / </summary>
      // / <param name="frameReference">
      // / Frame reference
      // / </param>
      // / <param name="configuration">
      // / Configuration of AXIO device
      // / <see cref="Arp.Device.Interface.Services.AxioDeviceConfiguration" /></param>
      // / <returns>
      // / Structure with error information.
      // / </returns>
      virtual void ReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // / <summary>
      // / Write configuration
      // / </summary>
      // / <param name="frameReference">
      // / Frame reference
      // / </param>
      // / <param name="configuration">
      // / Configuration of AXIO device
      // / <see cref="Arp.Device.Interface.Services.AxioDeviceConfiguration" /></param>
      // / <returns>
      // / Structure with error information.
      // / </returns>
      virtual void WriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void WriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void WriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // / <summary>
      // / Activate configuration
      // / </summary>
      // / <param name="frameReference">
      // / Frame reference
      // / </param>
      // / <returns>
      // / Structure with error information.
      // / </returns>
      virtual void ActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // / <summary>
      // / Deactivate configuration
      // / </summary>
      // / <param name="frameReference">
      // / Frame reference
      // / </param>
      // / <returns>
      // / Structure with error information.
      // / </returns>
      virtual void DeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void DeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void DeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
      // / <summary>
      // / Reset AXIO master
      // / </summary>
      // / <returns>
      // / Structure with error information.
      // / </returns>
      virtual void ResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response, std::function<void(::grpc::Status)>) = 0;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      virtual void ResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      #else
      virtual void ResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) = 0;
      #endif
    };
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    typedef class experimental_async_interface async_interface;
    #endif
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    async_interface* async() { return experimental_async(); }
    #endif
    virtual class experimental_async_interface* experimental_async() { return nullptr; }
  private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>* AsyncAxioControlRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>* PrepareAsyncAxioControlRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>* AsyncCreateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>* PrepareAsyncCreateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>* AsyncReadConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>* PrepareAsyncReadConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>* AsyncWriteConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>* PrepareAsyncWriteConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>* AsyncActivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>* PrepareAsyncActivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>* AsyncDeactivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>* PrepareAsyncDeactivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>* AsyncResetMasterRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>* PrepareAsyncResetMasterRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel);
    ::grpc::Status AxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>> AsyncAxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>>(AsyncAxioControlRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>> PrepareAsyncAxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>>(PrepareAsyncAxioControlRaw(context, request, cq));
    }
    ::grpc::Status CreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>> AsyncCreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>>(AsyncCreateConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>> PrepareAsyncCreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>>(PrepareAsyncCreateConfigurationRaw(context, request, cq));
    }
    ::grpc::Status ReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>> AsyncReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>>(AsyncReadConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>> PrepareAsyncReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>>(PrepareAsyncReadConfigurationRaw(context, request, cq));
    }
    ::grpc::Status WriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>> AsyncWriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>>(AsyncWriteConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>> PrepareAsyncWriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>>(PrepareAsyncWriteConfigurationRaw(context, request, cq));
    }
    ::grpc::Status ActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>> AsyncActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>>(AsyncActivateConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>> PrepareAsyncActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>>(PrepareAsyncActivateConfigurationRaw(context, request, cq));
    }
    ::grpc::Status DeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>> AsyncDeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>>(AsyncDeactivateConfigurationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>> PrepareAsyncDeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>>(PrepareAsyncDeactivateConfigurationRaw(context, request, cq));
    }
    ::grpc::Status ResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>> AsyncResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>>(AsyncResetMasterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>> PrepareAsyncResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>>(PrepareAsyncResetMasterRaw(context, request, cq));
    }
    class experimental_async final :
      public StubInterface::experimental_async_interface {
     public:
      void AxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void AxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void AxioControl(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void CreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void CreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void CreateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ReadConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void WriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void WriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void WriteConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ActivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void DeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void DeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void DeactivateConfiguration(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
      void ResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response, std::function<void(::grpc::Status)>) override;
      #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      void ResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      #else
      void ResetMaster(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response, ::grpc::experimental::ClientUnaryReactor* reactor) override;
      #endif
     private:
      friend class Stub;
      explicit experimental_async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class experimental_async_interface* experimental_async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class experimental_async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>* AsyncAxioControlRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>* PrepareAsyncAxioControlRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>* AsyncCreateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>* PrepareAsyncCreateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>* AsyncReadConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>* PrepareAsyncReadConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>* AsyncWriteConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>* PrepareAsyncWriteConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>* AsyncActivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>* PrepareAsyncActivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>* AsyncDeactivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>* PrepareAsyncDeactivateConfigurationRaw(::grpc::ClientContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>* AsyncResetMasterRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>* PrepareAsyncResetMasterRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_AxioControl_;
    const ::grpc::internal::RpcMethod rpcmethod_CreateConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_ReadConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_WriteConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_ActivateConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_DeactivateConfiguration_;
    const ::grpc::internal::RpcMethod rpcmethod_ResetMaster_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // / <summary>
    // / Raw AXIO service to communicate with the AXIO master.
    // / </summary>
    // / <param name="inData">
    // / Request Data to send to the AXIO master. Format has to be according to DDI specification.
    // / </param>
    // / <param name="IAxioMasterServiceAxioControlOutData">
    // / Response Data received from the AXIO master. Format is according to DDI specification.
    // / </param>
    // / <returns>
    // / Status value.
    // / Note: This service only returns internal errors. Negative confirmations have to be evaluated by user.
    // / </returns>
    virtual ::grpc::Status AxioControl(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response);
    // / <summary>
    // / Automatic creation of a new configuration
    // / </summary>
    // / <param name="frameReference">
    // / Frame reference
    // / </param>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status CreateConfiguration(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response);
    // / <summary>
    // / Read current configuration
    // / </summary>
    // / <param name="frameReference">
    // / Frame reference
    // / </param>
    // / <param name="configuration">
    // / Configuration of AXIO device
    // / <see cref="Arp.Device.Interface.Services.AxioDeviceConfiguration" /></param>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status ReadConfiguration(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response);
    // / <summary>
    // / Write configuration
    // / </summary>
    // / <param name="frameReference">
    // / Frame reference
    // / </param>
    // / <param name="configuration">
    // / Configuration of AXIO device
    // / <see cref="Arp.Device.Interface.Services.AxioDeviceConfiguration" /></param>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status WriteConfiguration(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response);
    // / <summary>
    // / Activate configuration
    // / </summary>
    // / <param name="frameReference">
    // / Frame reference
    // / </param>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status ActivateConfiguration(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response);
    // / <summary>
    // / Deactivate configuration
    // / </summary>
    // / <param name="frameReference">
    // / Frame reference
    // / </param>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status DeactivateConfiguration(::grpc::ServerContext* context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response);
    // / <summary>
    // / Reset AXIO master
    // / </summary>
    // / <returns>
    // / Structure with error information.
    // / </returns>
    virtual ::grpc::Status ResetMaster(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_AxioControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_AxioControl() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_AxioControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AxioControl(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAxioControl(::grpc::ServerContext* context, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::grpc::ServerAsyncResponseWriter< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_CreateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_CreateConfiguration() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_CreateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateConfiguration(::grpc::ServerContext* context, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ReadConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ReadConfiguration() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ReadConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadConfiguration(::grpc::ServerContext* context, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_WriteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_WriteConfiguration() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_WriteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteConfiguration(::grpc::ServerContext* context, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ActivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ActivateConfiguration() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_ActivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestActivateConfiguration(::grpc::ServerContext* context, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_DeactivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_DeactivateConfiguration() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_DeactivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeactivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeactivateConfiguration(::grpc::ServerContext* context, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::grpc::ServerAsyncResponseWriter< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ResetMaster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ResetMaster() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_ResetMaster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetMaster(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetMaster(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncResponseWriter< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_AxioControl<WithAsyncMethod_CreateConfiguration<WithAsyncMethod_ReadConfiguration<WithAsyncMethod_WriteConfiguration<WithAsyncMethod_ActivateConfiguration<WithAsyncMethod_DeactivateConfiguration<WithAsyncMethod_ResetMaster<Service > > > > > > > AsyncService;
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_AxioControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_AxioControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* response) { return this->AxioControl(context, request, response); }));}
    void SetMessageAllocatorFor_AxioControl(
        ::grpc::experimental::MessageAllocator< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(0);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_AxioControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AxioControl(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AxioControl(
      ::grpc::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AxioControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_CreateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_CreateConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* response) { return this->CreateConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_CreateConfiguration(
        ::grpc::experimental::MessageAllocator< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(1);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_CreateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ReadConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ReadConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* response) { return this->ReadConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_ReadConfiguration(
        ::grpc::experimental::MessageAllocator< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(2);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ReadConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ReadConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ReadConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_WriteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_WriteConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* response) { return this->WriteConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_WriteConfiguration(
        ::grpc::experimental::MessageAllocator< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(3);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_WriteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* WriteConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* WriteConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ActivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ActivateConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* response) { return this->ActivateConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_ActivateConfiguration(
        ::grpc::experimental::MessageAllocator< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(4);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ActivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ActivateConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ActivateConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_DeactivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_DeactivateConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* response) { return this->DeactivateConfiguration(context, request, response); }));}
    void SetMessageAllocatorFor_DeactivateConfiguration(
        ::grpc::experimental::MessageAllocator< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(5);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(5);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_DeactivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeactivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeactivateConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeactivateConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithCallbackMethod_ResetMaster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithCallbackMethod_ResetMaster() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::google::protobuf::Empty* request, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* response) { return this->ResetMaster(context, request, response); }));}
    void SetMessageAllocatorFor_ResetMaster(
        ::grpc::experimental::MessageAllocator< ::google::protobuf::Empty, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>* allocator) {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
    #else
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::experimental().GetHandler(6);
    #endif
      static_cast<::grpc::internal::CallbackUnaryHandler< ::google::protobuf::Empty, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~ExperimentalWithCallbackMethod_ResetMaster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetMaster(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ResetMaster(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ResetMaster(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* /*response*/)
    #endif
      { return nullptr; }
  };
  #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
  typedef ExperimentalWithCallbackMethod_AxioControl<ExperimentalWithCallbackMethod_CreateConfiguration<ExperimentalWithCallbackMethod_ReadConfiguration<ExperimentalWithCallbackMethod_WriteConfiguration<ExperimentalWithCallbackMethod_ActivateConfiguration<ExperimentalWithCallbackMethod_DeactivateConfiguration<ExperimentalWithCallbackMethod_ResetMaster<Service > > > > > > > CallbackService;
  #endif

  typedef ExperimentalWithCallbackMethod_AxioControl<ExperimentalWithCallbackMethod_CreateConfiguration<ExperimentalWithCallbackMethod_ReadConfiguration<ExperimentalWithCallbackMethod_WriteConfiguration<ExperimentalWithCallbackMethod_ActivateConfiguration<ExperimentalWithCallbackMethod_DeactivateConfiguration<ExperimentalWithCallbackMethod_ResetMaster<Service > > > > > > > ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_AxioControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_AxioControl() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_AxioControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AxioControl(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_CreateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_CreateConfiguration() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_CreateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ReadConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ReadConfiguration() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ReadConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_WriteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_WriteConfiguration() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_WriteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ActivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ActivateConfiguration() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_ActivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_DeactivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_DeactivateConfiguration() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_DeactivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeactivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ResetMaster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ResetMaster() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_ResetMaster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetMaster(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_AxioControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_AxioControl() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_AxioControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AxioControl(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestAxioControl(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_CreateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_CreateConfiguration() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_CreateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestCreateConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ReadConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ReadConfiguration() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ReadConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestReadConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_WriteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_WriteConfiguration() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_WriteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestWriteConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ActivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ActivateConfiguration() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_ActivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestActivateConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_DeactivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_DeactivateConfiguration() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_DeactivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeactivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestDeactivateConfiguration(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(5, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ResetMaster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ResetMaster() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_ResetMaster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetMaster(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestResetMaster(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_AxioControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_AxioControl() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->AxioControl(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_AxioControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status AxioControl(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* AxioControl(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* AxioControl(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_CreateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_CreateConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->CreateConfiguration(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_CreateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status CreateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* CreateConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* CreateConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ReadConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ReadConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ReadConfiguration(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ReadConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ReadConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ReadConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ReadConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_WriteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_WriteConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->WriteConfiguration(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_WriteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status WriteConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* WriteConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* WriteConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ActivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ActivateConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ActivateConfiguration(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ActivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ActivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ActivateConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ActivateConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_DeactivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_DeactivateConfiguration() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->DeactivateConfiguration(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_DeactivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status DeactivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* DeactivateConfiguration(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* DeactivateConfiguration(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class ExperimentalWithRawCallbackMethod_ResetMaster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    ExperimentalWithRawCallbackMethod_ResetMaster() {
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
      ::grpc::Service::
    #else
      ::grpc::Service::experimental().
    #endif
        MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
                   ::grpc::CallbackServerContext*
    #else
                   ::grpc::experimental::CallbackServerContext*
    #endif
                     context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ResetMaster(context, request, response); }));
    }
    ~ExperimentalWithRawCallbackMethod_ResetMaster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ResetMaster(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    #ifdef GRPC_CALLBACK_API_NONEXPERIMENTAL
    virtual ::grpc::ServerUnaryReactor* ResetMaster(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #else
    virtual ::grpc::experimental::ServerUnaryReactor* ResetMaster(
      ::grpc::experimental::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)
    #endif
      { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_AxioControl : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_AxioControl() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>* streamer) {
                       return this->StreamedAxioControl(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_AxioControl() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status AxioControl(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedAxioControl(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlRequest,::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceAxioControlResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_CreateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_CreateConfiguration() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>* streamer) {
                       return this->StreamedCreateConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_CreateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status CreateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedCreateConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationRequest,::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceCreateConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ReadConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ReadConfiguration() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>* streamer) {
                       return this->StreamedReadConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ReadConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ReadConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedReadConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationRequest,::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceReadConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_WriteConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_WriteConfiguration() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>* streamer) {
                       return this->StreamedWriteConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_WriteConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status WriteConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedWriteConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationRequest,::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceWriteConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ActivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ActivateConfiguration() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>* streamer) {
                       return this->StreamedActivateConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ActivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ActivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedActivateConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationRequest,::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceActivateConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_DeactivateConfiguration : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_DeactivateConfiguration() {
      ::grpc::Service::MarkMethodStreamed(5,
        new ::grpc::internal::StreamedUnaryHandler<
          ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>* streamer) {
                       return this->StreamedDeactivateConfiguration(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_DeactivateConfiguration() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status DeactivateConfiguration(::grpc::ServerContext* /*context*/, const ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedDeactivateConfiguration(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationRequest,::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceDeactivateConfigurationResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ResetMaster : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ResetMaster() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::google::protobuf::Empty, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::google::protobuf::Empty, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>* streamer) {
                       return this->StreamedResetMaster(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ResetMaster() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ResetMaster(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedResetMaster(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::google::protobuf::Empty,::Arp::Io::Axioline::Services::Grpc::IAxioMasterServiceResetMasterResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_AxioControl<WithStreamedUnaryMethod_CreateConfiguration<WithStreamedUnaryMethod_ReadConfiguration<WithStreamedUnaryMethod_WriteConfiguration<WithStreamedUnaryMethod_ActivateConfiguration<WithStreamedUnaryMethod_DeactivateConfiguration<WithStreamedUnaryMethod_ResetMaster<Service > > > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_AxioControl<WithStreamedUnaryMethod_CreateConfiguration<WithStreamedUnaryMethod_ReadConfiguration<WithStreamedUnaryMethod_WriteConfiguration<WithStreamedUnaryMethod_ActivateConfiguration<WithStreamedUnaryMethod_DeactivateConfiguration<WithStreamedUnaryMethod_ResetMaster<Service > > > > > > > StreamedService;
};

}  // namespace Grpc
}  // namespace Services
}  // namespace Axioline
}  // namespace Io
}  // namespace Arp


#endif  // GRPC_IAxioMasterService_2eproto__INCLUDED
