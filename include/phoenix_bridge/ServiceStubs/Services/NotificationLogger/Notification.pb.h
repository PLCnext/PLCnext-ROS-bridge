// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Notification.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Notification_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Notification_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "Severity.pb.h"
#include "ArpTypes.pb.h"
#include "DateTime.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Notification_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Notification_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Notification_2eproto;
namespace Arp {
namespace System {
namespace Nm {
namespace Services {
namespace Grpc {
class Notification;
class NotificationDefaultTypeInternal;
extern NotificationDefaultTypeInternal _Notification_default_instance_;
}  // namespace Grpc
}  // namespace Services
}  // namespace Nm
}  // namespace System
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
template<> ::Arp::System::Nm::Services::Grpc::Notification* Arena::CreateMaybeMessage<::Arp::System::Nm::Services::Grpc::Notification>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace Arp {
namespace System {
namespace Nm {
namespace Services {
namespace Grpc {

// ===================================================================

class Notification PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:Arp.System.Nm.Services.Grpc.Notification) */ {
 public:
  inline Notification() : Notification(nullptr) {}
  virtual ~Notification();

  Notification(const Notification& from);
  Notification(Notification&& from) noexcept
    : Notification() {
    *this = ::std::move(from);
  }

  inline Notification& operator=(const Notification& from) {
    CopyFrom(from);
    return *this;
  }
  inline Notification& operator=(Notification&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Notification& default_instance();

  static inline const Notification* internal_default_instance() {
    return reinterpret_cast<const Notification*>(
               &_Notification_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Notification& a, Notification& b) {
    a.Swap(&b);
  }
  inline void Swap(Notification* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Notification* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Notification* New() const final {
    return CreateMaybeMessage<Notification>(nullptr);
  }

  Notification* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Notification>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Notification& from);
  void MergeFrom(const Notification& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Notification* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "Arp.System.Nm.Services.Grpc.Notification";
  }
  protected:
  explicit Notification(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Notification_2eproto);
    return ::descriptor_table_Notification_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPayloadFieldNumber = 6,
    kTimestampFieldNumber = 3,
    kIdFieldNumber = 1,
    kNotificationNameIdFieldNumber = 2,
    kSeverityFieldNumber = 4,
    kPayloadTypeIdFieldNumber = 5,
  };
  // repeated .Arp.Type.Grpc.ObjectType Payload = 6;
  int payload_size() const;
  private:
  int _internal_payload_size() const;
  public:
  void clear_payload();
  ::Arp::Type::Grpc::ObjectType* mutable_payload(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
      mutable_payload();
  private:
  const ::Arp::Type::Grpc::ObjectType& _internal_payload(int index) const;
  ::Arp::Type::Grpc::ObjectType* _internal_add_payload();
  public:
  const ::Arp::Type::Grpc::ObjectType& payload(int index) const;
  ::Arp::Type::Grpc::ObjectType* add_payload();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
      payload() const;

  // .Arp.Grpc.DateTime Timestamp = 3;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  const ::Arp::Grpc::DateTime& timestamp() const;
  ::Arp::Grpc::DateTime* release_timestamp();
  ::Arp::Grpc::DateTime* mutable_timestamp();
  void set_allocated_timestamp(::Arp::Grpc::DateTime* timestamp);
  private:
  const ::Arp::Grpc::DateTime& _internal_timestamp() const;
  ::Arp::Grpc::DateTime* _internal_mutable_timestamp();
  public:
  void unsafe_arena_set_allocated_timestamp(
      ::Arp::Grpc::DateTime* timestamp);
  ::Arp::Grpc::DateTime* unsafe_arena_release_timestamp();

  // uint64 Id = 1;
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::uint64 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 NotificationNameId = 2;
  void clear_notificationnameid();
  ::PROTOBUF_NAMESPACE_ID::uint32 notificationnameid() const;
  void set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_notificationnameid() const;
  void _internal_set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // .Arp.System.Nm.Services.Grpc.Severity Severity = 4;
  void clear_severity();
  ::Arp::System::Nm::Services::Grpc::Severity severity() const;
  void set_severity(::Arp::System::Nm::Services::Grpc::Severity value);
  private:
  ::Arp::System::Nm::Services::Grpc::Severity _internal_severity() const;
  void _internal_set_severity(::Arp::System::Nm::Services::Grpc::Severity value);
  public:

  // int32 PayloadTypeId = 5;
  void clear_payloadtypeid();
  ::PROTOBUF_NAMESPACE_ID::int32 payloadtypeid() const;
  void set_payloadtypeid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_payloadtypeid() const;
  void _internal_set_payloadtypeid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:Arp.System.Nm.Services.Grpc.Notification)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType > payload_;
  ::Arp::Grpc::DateTime* timestamp_;
  ::PROTOBUF_NAMESPACE_ID::uint64 id_;
  ::PROTOBUF_NAMESPACE_ID::uint32 notificationnameid_;
  int severity_;
  ::PROTOBUF_NAMESPACE_ID::int32 payloadtypeid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Notification_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Notification

// uint64 Id = 1;
inline void Notification::clear_id() {
  id_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notification::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 Notification::id() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.Notification.Id)
  return _internal_id();
}
inline void Notification::_internal_set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  id_ = value;
}
inline void Notification::set_id(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.Notification.Id)
}

// uint32 NotificationNameId = 2;
inline void Notification::clear_notificationnameid() {
  notificationnameid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notification::_internal_notificationnameid() const {
  return notificationnameid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 Notification::notificationnameid() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.Notification.NotificationNameId)
  return _internal_notificationnameid();
}
inline void Notification::_internal_set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  notificationnameid_ = value;
}
inline void Notification::set_notificationnameid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_notificationnameid(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.Notification.NotificationNameId)
}

// .Arp.Grpc.DateTime Timestamp = 3;
inline bool Notification::_internal_has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != nullptr;
}
inline bool Notification::has_timestamp() const {
  return _internal_has_timestamp();
}
inline const ::Arp::Grpc::DateTime& Notification::_internal_timestamp() const {
  const ::Arp::Grpc::DateTime* p = timestamp_;
  return p != nullptr ? *p : reinterpret_cast<const ::Arp::Grpc::DateTime&>(
      ::Arp::Grpc::_DateTime_default_instance_);
}
inline const ::Arp::Grpc::DateTime& Notification::timestamp() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.Notification.Timestamp)
  return _internal_timestamp();
}
inline void Notification::unsafe_arena_set_allocated_timestamp(
    ::Arp::Grpc::DateTime* timestamp) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp_);
  }
  timestamp_ = timestamp;
  if (timestamp) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:Arp.System.Nm.Services.Grpc.Notification.Timestamp)
}
inline ::Arp::Grpc::DateTime* Notification::release_timestamp() {
  
  ::Arp::Grpc::DateTime* temp = timestamp_;
  timestamp_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::Arp::Grpc::DateTime* Notification::unsafe_arena_release_timestamp() {
  // @@protoc_insertion_point(field_release:Arp.System.Nm.Services.Grpc.Notification.Timestamp)
  
  ::Arp::Grpc::DateTime* temp = timestamp_;
  timestamp_ = nullptr;
  return temp;
}
inline ::Arp::Grpc::DateTime* Notification::_internal_mutable_timestamp() {
  
  if (timestamp_ == nullptr) {
    auto* p = CreateMaybeMessage<::Arp::Grpc::DateTime>(GetArena());
    timestamp_ = p;
  }
  return timestamp_;
}
inline ::Arp::Grpc::DateTime* Notification::mutable_timestamp() {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.Notification.Timestamp)
  return _internal_mutable_timestamp();
}
inline void Notification::set_allocated_timestamp(::Arp::Grpc::DateTime* timestamp) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(timestamp)->GetArena();
    if (message_arena != submessage_arena) {
      timestamp = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:Arp.System.Nm.Services.Grpc.Notification.Timestamp)
}

// .Arp.System.Nm.Services.Grpc.Severity Severity = 4;
inline void Notification::clear_severity() {
  severity_ = 0;
}
inline ::Arp::System::Nm::Services::Grpc::Severity Notification::_internal_severity() const {
  return static_cast< ::Arp::System::Nm::Services::Grpc::Severity >(severity_);
}
inline ::Arp::System::Nm::Services::Grpc::Severity Notification::severity() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.Notification.Severity)
  return _internal_severity();
}
inline void Notification::_internal_set_severity(::Arp::System::Nm::Services::Grpc::Severity value) {
  
  severity_ = value;
}
inline void Notification::set_severity(::Arp::System::Nm::Services::Grpc::Severity value) {
  _internal_set_severity(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.Notification.Severity)
}

// int32 PayloadTypeId = 5;
inline void Notification::clear_payloadtypeid() {
  payloadtypeid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Notification::_internal_payloadtypeid() const {
  return payloadtypeid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 Notification::payloadtypeid() const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.Notification.PayloadTypeId)
  return _internal_payloadtypeid();
}
inline void Notification::_internal_set_payloadtypeid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  payloadtypeid_ = value;
}
inline void Notification::set_payloadtypeid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_payloadtypeid(value);
  // @@protoc_insertion_point(field_set:Arp.System.Nm.Services.Grpc.Notification.PayloadTypeId)
}

// repeated .Arp.Type.Grpc.ObjectType Payload = 6;
inline int Notification::_internal_payload_size() const {
  return payload_.size();
}
inline int Notification::payload_size() const {
  return _internal_payload_size();
}
inline ::Arp::Type::Grpc::ObjectType* Notification::mutable_payload(int index) {
  // @@protoc_insertion_point(field_mutable:Arp.System.Nm.Services.Grpc.Notification.Payload)
  return payload_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >*
Notification::mutable_payload() {
  // @@protoc_insertion_point(field_mutable_list:Arp.System.Nm.Services.Grpc.Notification.Payload)
  return &payload_;
}
inline const ::Arp::Type::Grpc::ObjectType& Notification::_internal_payload(int index) const {
  return payload_.Get(index);
}
inline const ::Arp::Type::Grpc::ObjectType& Notification::payload(int index) const {
  // @@protoc_insertion_point(field_get:Arp.System.Nm.Services.Grpc.Notification.Payload)
  return _internal_payload(index);
}
inline ::Arp::Type::Grpc::ObjectType* Notification::_internal_add_payload() {
  return payload_.Add();
}
inline ::Arp::Type::Grpc::ObjectType* Notification::add_payload() {
  // @@protoc_insertion_point(field_add:Arp.System.Nm.Services.Grpc.Notification.Payload)
  return _internal_add_payload();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::Arp::Type::Grpc::ObjectType >&
Notification::payload() const {
  // @@protoc_insertion_point(field_list:Arp.System.Nm.Services.Grpc.Notification.Payload)
  return payload_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace Grpc
}  // namespace Services
}  // namespace Nm
}  // namespace System
}  // namespace Arp

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Notification_2eproto
