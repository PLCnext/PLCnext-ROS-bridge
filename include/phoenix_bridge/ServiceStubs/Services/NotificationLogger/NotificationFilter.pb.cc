// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: NotificationFilter.proto

#include "NotificationFilter.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace Arp {
namespace Services {
namespace NotificationLogger {
namespace Services {
namespace Grpc {
class NotificationFilterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NotificationFilter> _instance;
} _NotificationFilter_default_instance_;
}  // namespace Grpc
}  // namespace Services
}  // namespace NotificationLogger
}  // namespace Services
}  // namespace Arp
static void InitDefaultsscc_info_NotificationFilter_NotificationFilter_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::Arp::Services::NotificationLogger::Services::Grpc::_NotificationFilter_default_instance_;
    new (ptr) ::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NotificationFilter_NotificationFilter_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NotificationFilter_NotificationFilter_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_NotificationFilter_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_NotificationFilter_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_NotificationFilter_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_NotificationFilter_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter, storedidlowerlimit_),
  PROTOBUF_FIELD_OFFSET(::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter, storedidupperlimit_),
  PROTOBUF_FIELD_OFFSET(::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter, notificationnameregexp_),
  PROTOBUF_FIELD_OFFSET(::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter, sendernameregexp_),
  PROTOBUF_FIELD_OFFSET(::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter, timestampbefore_),
  PROTOBUF_FIELD_OFFSET(::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter, timestampafter_),
  PROTOBUF_FIELD_OFFSET(::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter, severitylowerlimit_),
  PROTOBUF_FIELD_OFFSET(::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter, severityupperlimit_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::Arp::Services::NotificationLogger::Services::Grpc::_NotificationFilter_default_instance_),
};

const char descriptor_table_protodef_NotificationFilter_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\030NotificationFilter.proto\022-Arp.Services"
  ".NotificationLogger.Services.Grpc\"\357\001\n\022No"
  "tificationFilter\022\032\n\022StoredIdLowerLimit\030\001"
  " \001(\004\022\032\n\022StoredIdUpperLimit\030\002 \001(\004\022\036\n\026Noti"
  "ficationNameRegExp\030\003 \001(\t\022\030\n\020SenderNameRe"
  "gExp\030\004 \001(\t\022\027\n\017TimestampBefore\030\005 \001(\t\022\026\n\016T"
  "imestampAfter\030\006 \001(\t\022\032\n\022SeverityLowerLimi"
  "t\030\007 \001(\t\022\032\n\022SeverityUpperLimit\030\010 \001(\tb\006pro"
  "to3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_NotificationFilter_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_NotificationFilter_2eproto_sccs[1] = {
  &scc_info_NotificationFilter_NotificationFilter_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_NotificationFilter_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_NotificationFilter_2eproto = {
  false, false, descriptor_table_protodef_NotificationFilter_2eproto, "NotificationFilter.proto", 323,
  &descriptor_table_NotificationFilter_2eproto_once, descriptor_table_NotificationFilter_2eproto_sccs, descriptor_table_NotificationFilter_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_NotificationFilter_2eproto::offsets,
  file_level_metadata_NotificationFilter_2eproto, 1, file_level_enum_descriptors_NotificationFilter_2eproto, file_level_service_descriptors_NotificationFilter_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_NotificationFilter_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_NotificationFilter_2eproto)), true);
namespace Arp {
namespace Services {
namespace NotificationLogger {
namespace Services {
namespace Grpc {

// ===================================================================

class NotificationFilter::_Internal {
 public:
};

NotificationFilter::NotificationFilter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
}
NotificationFilter::NotificationFilter(const NotificationFilter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  notificationnameregexp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_notificationnameregexp().empty()) {
    notificationnameregexp_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_notificationnameregexp(), 
      GetArena());
  }
  sendernameregexp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_sendernameregexp().empty()) {
    sendernameregexp_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_sendernameregexp(), 
      GetArena());
  }
  timestampbefore_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_timestampbefore().empty()) {
    timestampbefore_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_timestampbefore(), 
      GetArena());
  }
  timestampafter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_timestampafter().empty()) {
    timestampafter_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_timestampafter(), 
      GetArena());
  }
  severitylowerlimit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_severitylowerlimit().empty()) {
    severitylowerlimit_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_severitylowerlimit(), 
      GetArena());
  }
  severityupperlimit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_severityupperlimit().empty()) {
    severityupperlimit_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_severityupperlimit(), 
      GetArena());
  }
  ::memcpy(&storedidlowerlimit_, &from.storedidlowerlimit_,
    static_cast<size_t>(reinterpret_cast<char*>(&storedidupperlimit_) -
    reinterpret_cast<char*>(&storedidlowerlimit_)) + sizeof(storedidupperlimit_));
  // @@protoc_insertion_point(copy_constructor:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
}

void NotificationFilter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NotificationFilter_NotificationFilter_2eproto.base);
  notificationnameregexp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendernameregexp_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestampbefore_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestampafter_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  severitylowerlimit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  severityupperlimit_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&storedidlowerlimit_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&storedidupperlimit_) -
      reinterpret_cast<char*>(&storedidlowerlimit_)) + sizeof(storedidupperlimit_));
}

NotificationFilter::~NotificationFilter() {
  // @@protoc_insertion_point(destructor:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NotificationFilter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  notificationnameregexp_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  sendernameregexp_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestampbefore_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestampafter_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  severitylowerlimit_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  severityupperlimit_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NotificationFilter::ArenaDtor(void* object) {
  NotificationFilter* _this = reinterpret_cast< NotificationFilter* >(object);
  (void)_this;
}
void NotificationFilter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NotificationFilter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NotificationFilter& NotificationFilter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NotificationFilter_NotificationFilter_2eproto.base);
  return *internal_default_instance();
}


void NotificationFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  notificationnameregexp_.ClearToEmpty();
  sendernameregexp_.ClearToEmpty();
  timestampbefore_.ClearToEmpty();
  timestampafter_.ClearToEmpty();
  severitylowerlimit_.ClearToEmpty();
  severityupperlimit_.ClearToEmpty();
  ::memset(&storedidlowerlimit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&storedidupperlimit_) -
      reinterpret_cast<char*>(&storedidlowerlimit_)) + sizeof(storedidupperlimit_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NotificationFilter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 StoredIdLowerLimit = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          storedidlowerlimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 StoredIdUpperLimit = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          storedidupperlimit_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string NotificationNameRegExp = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_notificationnameregexp();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.NotificationNameRegExp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SenderNameRegExp = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_sendernameregexp();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.SenderNameRegExp"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string TimestampBefore = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_timestampbefore();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.TimestampBefore"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string TimestampAfter = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_timestampafter();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.TimestampAfter"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SeverityLowerLimit = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_severitylowerlimit();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.SeverityLowerLimit"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string SeverityUpperLimit = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_severityupperlimit();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.SeverityUpperLimit"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NotificationFilter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 StoredIdLowerLimit = 1;
  if (this->storedidlowerlimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_storedidlowerlimit(), target);
  }

  // uint64 StoredIdUpperLimit = 2;
  if (this->storedidupperlimit() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(2, this->_internal_storedidupperlimit(), target);
  }

  // string NotificationNameRegExp = 3;
  if (this->notificationnameregexp().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_notificationnameregexp().data(), static_cast<int>(this->_internal_notificationnameregexp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.NotificationNameRegExp");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_notificationnameregexp(), target);
  }

  // string SenderNameRegExp = 4;
  if (this->sendernameregexp().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_sendernameregexp().data(), static_cast<int>(this->_internal_sendernameregexp().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.SenderNameRegExp");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_sendernameregexp(), target);
  }

  // string TimestampBefore = 5;
  if (this->timestampbefore().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_timestampbefore().data(), static_cast<int>(this->_internal_timestampbefore().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.TimestampBefore");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_timestampbefore(), target);
  }

  // string TimestampAfter = 6;
  if (this->timestampafter().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_timestampafter().data(), static_cast<int>(this->_internal_timestampafter().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.TimestampAfter");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_timestampafter(), target);
  }

  // string SeverityLowerLimit = 7;
  if (this->severitylowerlimit().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_severitylowerlimit().data(), static_cast<int>(this->_internal_severitylowerlimit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.SeverityLowerLimit");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_severitylowerlimit(), target);
  }

  // string SeverityUpperLimit = 8;
  if (this->severityupperlimit().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_severityupperlimit().data(), static_cast<int>(this->_internal_severityupperlimit().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter.SeverityUpperLimit");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_severityupperlimit(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
  return target;
}

size_t NotificationFilter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string NotificationNameRegExp = 3;
  if (this->notificationnameregexp().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_notificationnameregexp());
  }

  // string SenderNameRegExp = 4;
  if (this->sendernameregexp().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_sendernameregexp());
  }

  // string TimestampBefore = 5;
  if (this->timestampbefore().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_timestampbefore());
  }

  // string TimestampAfter = 6;
  if (this->timestampafter().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_timestampafter());
  }

  // string SeverityLowerLimit = 7;
  if (this->severitylowerlimit().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_severitylowerlimit());
  }

  // string SeverityUpperLimit = 8;
  if (this->severityupperlimit().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_severityupperlimit());
  }

  // uint64 StoredIdLowerLimit = 1;
  if (this->storedidlowerlimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_storedidlowerlimit());
  }

  // uint64 StoredIdUpperLimit = 2;
  if (this->storedidupperlimit() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_storedidupperlimit());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NotificationFilter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
  GOOGLE_DCHECK_NE(&from, this);
  const NotificationFilter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NotificationFilter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
    MergeFrom(*source);
  }
}

void NotificationFilter::MergeFrom(const NotificationFilter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.notificationnameregexp().size() > 0) {
    _internal_set_notificationnameregexp(from._internal_notificationnameregexp());
  }
  if (from.sendernameregexp().size() > 0) {
    _internal_set_sendernameregexp(from._internal_sendernameregexp());
  }
  if (from.timestampbefore().size() > 0) {
    _internal_set_timestampbefore(from._internal_timestampbefore());
  }
  if (from.timestampafter().size() > 0) {
    _internal_set_timestampafter(from._internal_timestampafter());
  }
  if (from.severitylowerlimit().size() > 0) {
    _internal_set_severitylowerlimit(from._internal_severitylowerlimit());
  }
  if (from.severityupperlimit().size() > 0) {
    _internal_set_severityupperlimit(from._internal_severityupperlimit());
  }
  if (from.storedidlowerlimit() != 0) {
    _internal_set_storedidlowerlimit(from._internal_storedidlowerlimit());
  }
  if (from.storedidupperlimit() != 0) {
    _internal_set_storedidupperlimit(from._internal_storedidupperlimit());
  }
}

void NotificationFilter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NotificationFilter::CopyFrom(const NotificationFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arp.Services.NotificationLogger.Services.Grpc.NotificationFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NotificationFilter::IsInitialized() const {
  return true;
}

void NotificationFilter::InternalSwap(NotificationFilter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  notificationnameregexp_.Swap(&other->notificationnameregexp_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  sendernameregexp_.Swap(&other->sendernameregexp_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timestampbefore_.Swap(&other->timestampbefore_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  timestampafter_.Swap(&other->timestampafter_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  severitylowerlimit_.Swap(&other->severitylowerlimit_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  severityupperlimit_.Swap(&other->severityupperlimit_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(NotificationFilter, storedidupperlimit_)
      + sizeof(NotificationFilter::storedidupperlimit_)
      - PROTOBUF_FIELD_OFFSET(NotificationFilter, storedidlowerlimit_)>(
          reinterpret_cast<char*>(&storedidlowerlimit_),
          reinterpret_cast<char*>(&other->storedidlowerlimit_));
}

::PROTOBUF_NAMESPACE_ID::Metadata NotificationFilter::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Grpc
}  // namespace Services
}  // namespace NotificationLogger
}  // namespace Services
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter* Arena::CreateMaybeMessage< ::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Arp::Services::NotificationLogger::Services::Grpc::NotificationFilter >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
