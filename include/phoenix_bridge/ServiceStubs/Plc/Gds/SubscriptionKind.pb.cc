// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SubscriptionKind.proto

#include "SubscriptionKind.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace Arp {
namespace Plc {
namespace Gds {
namespace Services {
namespace Grpc {
}  // namespace Grpc
}  // namespace Services
}  // namespace Gds
}  // namespace Plc
}  // namespace Arp
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_SubscriptionKind_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_SubscriptionKind_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_SubscriptionKind_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_SubscriptionKind_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_SubscriptionKind_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026SubscriptionKind.proto\022\031Arp.Plc.Gds.Se"
  "rvices.Grpc*\204\001\n\020SubscriptionKind\022\013\n\007SK_N"
  "one\020\000\022\026\n\022SK_HighPerformance\020\001\022\017\n\013SK_Real"
  "Time\020\002\022\020\n\014SK_Recording\020\003\022\025\n\021SK_ClosedRea"
  "lTime\020\004\022\021\n\rSK_DirectRead\020\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_SubscriptionKind_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_SubscriptionKind_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_SubscriptionKind_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_SubscriptionKind_2eproto = {
  false, false, descriptor_table_protodef_SubscriptionKind_2eproto, "SubscriptionKind.proto", 194,
  &descriptor_table_SubscriptionKind_2eproto_once, descriptor_table_SubscriptionKind_2eproto_sccs, descriptor_table_SubscriptionKind_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_SubscriptionKind_2eproto::offsets,
  file_level_metadata_SubscriptionKind_2eproto, 0, file_level_enum_descriptors_SubscriptionKind_2eproto, file_level_service_descriptors_SubscriptionKind_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_SubscriptionKind_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_SubscriptionKind_2eproto)), true);
namespace Arp {
namespace Plc {
namespace Gds {
namespace Services {
namespace Grpc {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* SubscriptionKind_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_SubscriptionKind_2eproto);
  return file_level_enum_descriptors_SubscriptionKind_2eproto[0];
}
bool SubscriptionKind_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Grpc
}  // namespace Services
}  // namespace Gds
}  // namespace Plc
}  // namespace Arp
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
